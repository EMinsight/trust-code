/////////////////////////////////////////////////////////////////////////////
//
// File:	NOM_DU_FICHIER.h
// Directory:	$TRUST_ROOT/NOM_DU_MODULE
//
// .NOM NOM_DE_LA_CLASSE : 
// .ENTETE TRUST NOM_DU_MODULE
// .LIBRAIRIE NOM_DE_LA_LIBRAIRIE
// .FILE NOM_DU_FICHIER.h
// .FILE NOM_DU_FICHIER.cpp
// .DESCRIPTION  class NOM_DE_LA_CLASSE
//
// Decrire ici la classe NOM_DE_LA_CLASSE
//
//////////////////////////////////////////////////////////////////////////////

#ifndef NOM_DU_FICHIER_inclus
#define NOM_DU_FICHIER_inclus

#include <Ch_Inc_base.h>
#include <Ref_TYPE_ZONE_DIS.h>


class NOM_DE_LA_CLASSE : public Champ_Inc_base
{

declare_instanciable(NOM_DE_LA_CLASSE)

public :
	   
   const Zone_dis_base& zone_dis_base() const;
   const Zone_dis_base& associer_zone_dis_base(const Zone_dis_base&);  
   // CERTAINS CHAMPS ONT BESOIN DE SURCHARGER fixer_nb_valeurs_nodales() 
   // int fixer_nb_valeurs_nodales(int );
   DoubleTab& remplir_coord_noeuds(DoubleTab& ) const; 
   DoubleVect& valeur_a(const DoubleVect& position, 
			DoubleVect& valeurs, 
			int le_poly) const ;
   DoubleTab& valeur_aux(const DoubleTab& positions,const IntVect& les_polys, 
			 DoubleTab& valeurs) const;   
   DoubleVect& valeur_aux(const DoubleTab& positions,const IntVect& les_polys,
			  DoubleVect& valeurs,int ncomp) const; 
   // on peut surcharger ces methodes pour des raisons d'efficacite ou
   // prendre en compte les conditions aux limites. 
   // int postraiter_lml(Sortie& ,const Motcle& ) const;
   // int postraiter_lml(Sortie& , int ,const Motcle& ) const;

protected :
 
   REF(TYPE_ZONE_DIS) LA_ZONE_DIS;
};


#endif



