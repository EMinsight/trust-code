#!/bin/bash
# Run IDE CLion and configure as best as possible on Trust or Baltik project
clion=`which clion.sh`
[ "$clion" = "" ] && echo "IDE Clion not found. Check clion.sh is into your PATH." && exit -1

# Detect Trust or Baltik environnement
env=`ls env* ../env* 2>/dev/null`
[ "$env" = "" ] && echo "No project found. Go under Baltik or Trust and retry..." && exit 1

# Load environment
source $env
# Look for CMakeLists.txt
CMakeLists=`ls build/src/CMakeLists.txt ../build/src/CMakeLists.txt src/CMakeLists.txt ../src/CMakeLists.txt 2>/dev/null`
[ "$CMakeLists" = "" ] && echo "No CMakeLists.txt found." && exit 1
CMakeLists=`pwd`/$CMakeLists
PROJECT_ROOT=`dirname $CMakeLists`
# Baltik or TRUST ?
if [ "`echo $env | grep TRUST`" = "" ]
then
   baltik=1
   BUILD_ROOTS="$PROJECT_ROOT/exec $PROJECT_ROOT/exec_opt"
else
   baltik=0
   BUILD_ROOTS="$TRUST_ROOT/MonoDir_mpi/src $TRUST_ROOT/MonoDir_mpi_opt/src"
fi
for BUILD_ROOT in $BUILD_ROOTS
do
   if [ ! -d $BUILD_ROOT ]
   then
      echo "Build the project before in debug mode! make debug"
      mkdir -p $BUILD_ROOT
      rep_dev=$BUILD_ROOT python $TRUST_ROOT/bin/KSH/Createcmakefile.py -atelier
   fi
done
# Configuration for Clion:
cd $PROJECT_ROOT
for BUILD_ROOT in $BUILD_ROOTS
do
   # Create a link to build directory to avoid change CLion settings
   rep=cmake-build-debug && [ "`echo $BUILD_ROOT | grep _opt`" != "" ] && rep=cmake-build-release
   rm -r -f $rep
   echo "Creating a link $PROJECT_ROOT/$rep -> $BUILD_ROOT"
   ln -s -f $BUILD_ROOT $rep
done
echo "Running Clion on $CMakeLists project..."
echo "Raccourcis:"
echo "ctrl+F12          : liste des methodes de la classe"
echo "alt+haut|bas      : naviguer d'une methode a l'autre"
echo "ctrl+E            : derniers fichiers ouverts"
$clion $CMakeLists 1>/dev/null 2>&1
