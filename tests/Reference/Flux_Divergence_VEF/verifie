message()
{
   [ $1 != $2 ] && echo $ECHO_OPTS "Error ($1!=$2) when checking:\n $msg" && err=1
   [ $debog = 1 ] && echo $msg
}
jdd=`pwd`;jdd=`basename $jdd`
debog=0 && [ "$1" = "-print" ] && debog=1
err=0

# La solution analytique est (U,V,W)=(t,t,0)
# Verification des differents debits:
# Entree 		debit=-t
# Sortie 		debit=t
# Perio 		debit=+/-t
# Symetrie		debit=0
# Paroi_fixe		debit=0

out=`ls -rt *$jdd*_Debit.out | tail -1`
echo $ECHO_OPTS "Verification des debits dans $out... \c"
# Le temps est donne dans la premiere colonne donc on doit avoir
# egalite dans les colonnes Temps, Entree, Sortie, Perio
ok=`$TRUST_Awk 'BEGIN {ok=1} !/#/ {if ($1!=-$2) ok=0} END {print ok}' $out`
msg="Debit sur entree dans $out";message $ok 1
ok=`$TRUST_Awk 'BEGIN {ok=1} !/#/ {if ($1!=$3) ok=0} END {print ok}' $out`
msg="Debit sur sortie dans $out";message $ok 1
ok=`$TRUST_Awk 'BEGIN {ok=1} !/#/ {if ($1!=$4 || $1!=-$5) ok=0} END {print ok}' $out`
msg="Debit sur perio dans $out";message $ok 1
ok=`$TRUST_Awk 'BEGIN {ok=1} !/#/ {if ($6!=0) ok=0} END {print ok}' $out`
msg="Debit sur paroi_fixe dans $out";message $ok 1
ok=`$TRUST_Awk 'BEGIN {ok=1} !/#/ {if ($7!=0) ok=0} END {print ok}' $out`
msg="Debit sur paroi_fixe dans $out";message $ok 1

exit $err
