#!/bin/bash

file_org=$1
dest=$2


genere_rotate_dom()
{
echo "
def test_cas(file,nl):
        from rotate_xyz import rotate
	f=open(file)
	a=f.readline()
	marq=eval(a.split()[0])
	print marq
	finisom=0
	for i in range(nl-1):
		a=f.readline()
		if finisom:
			print a
		else:
			x=eval(a.split()[0])
			if (x==marq):
				print a
				finisom=1
			else:
				y=eval(a.split()[1])
				try:
				 z=eval(a.split()[2])
				 xx,yy,zz=rotate(x,y,z)
				 print xx,yy,zz
				except:
				 z=0
				 xx,yy,zz=rotate(x,y,z)
				 print xx,yy
				pass
			pass
		pass
	
if __name__ == '__main__':
	import sys
        test_cas(sys.argv[1],eval(sys.argv[2]))
        pass

"

}
genere_rotate()
{

echo "
def test_cas(file,nl):
        from rotate_xyz import rotate,dimension
	f=open(file)
	v={}
        vr={}
	for i in range(nl):
		a=f.readline()
		v[i]=eval(a.split()[0])
                vr[i]=v[i]
		pass
	print v[0]
        #dimension=2
	n2=(nl-2)/dimension	
        if dimension==2:
	  for i in range(1,n2+1):
                vz=0
                vr[i],vr[i+n2],vrz=rotate(v[i],v[i+n2],vz)
		pass
	  pass
        else:
	  for i in range(1,n2+1):
                vr[i],vr[i+n2],vr[i+2*n2]=rotate(v[i],v[i+n2],v[i+2*n2])
		pass
	  pass
	for i in range(1,n2+1):
		print vr[i]
		pass
	for i in range(1,n2+1):
		print vr[i+n2]
		pass
	pass
        if (dimension==3):
	  for i in range(1,n2+1):
		print vr[i+2*n2]
		pass
	  pass
	print v[nl-1]
	if (v[nl-1]!=v[0]): raise (\"Pb avec le fichier \"+file)
	
if __name__ == '__main__':
	import sys
        test_cas(sys.argv[1],eval(sys.argv[2]))
        pass

"
}


genere_rotate > rotate.py
genere_rotate_dom > rotate_dom.py
lata=$1
reference=$2
#angle=$3

for dom in `grep "CHAMP SOMMETS" $lata | awk '{print $3}'`
do
rm rot_$dom
jj=`wc -l $dom | awk -F: '{print $1}'`
python rotate_dom.py $dom  $jj > rot_$dom
done
sed "s/$lata/rot_$lata/g" $lata | grep -v _boundaries_ > rot_$lata


for vitesse in `ls $lata.vitess* $lata.VITESS* 2>/dev/null`
do
echo $vitesse
nl=`wc -l $vitesse | awk -F: '{print $1}'`
python rotate_dom.py $vitesse  $nl    >rot_$vitesse
done
for file in `ls $lata.*`
do
[ ! -f rot_$file ] && ln -s $file rot_$file
done
mv rot_$lata $2
exit
echo "dimension 2
latatoother lml $reference" > ref_lml.data

echo "dimension 2
latatoother lml rot_$lata
latatoother meshtv rot_$lata" > rot_lml.data

lan ref_lml
lan rot_lml
lml=`basename $lata .lata`.lml
compare_lata `basename $reference .lata`.lml  rot_$lml
