Parameters {
	Title "Post-treatment on internal plane"
	Author "Jean Maillard (student of U. Bieder in 2017) "
	Description "\latex_(We study two methods for observing the velocity field on any section of the domain. The first method uses TRUST with \textbf{Extraire\_surface} and \textbf{Transformation}. The second method uses the \textbf{Slice} operator and the \textbf{Expression} function under VisIt.\latex_)"
	Description "We are in the case of a flow in a periodic cylinder, oriented along the axis $(Oz)$, where we know the analytical solution. We try to isolate the error due to the interpolation, which occurs during the post-processing."
	VersionTrio_U 1.7.5
	ParametersTrust Cylinder dimensions: Radius 5 cm ; Height 15 cm 
	ParametersTrust triokeyword(nb_pas_dt_max)0
	ParametersTrust triokeyword(projection_initiale)0
	ParametersTrust \latex_(Boundary conditions: \\Inlet/Outlet: \textbf{periodique} \\External surface: \textbf{paroi\_defilante champ\_front\_fonc\_xyz} $\; 3 \;\; -20y \;\; 20x \;\; 0$\latex_)
	ParametersTrust \latex_(Initial conditions: We initially impose a speed composed of a rotation around the axis $(Oz)$ to $\omega = 20 rad/s$ and a parabolic profile corresponding to the analytical solution of a laminar flow in a tube according to $(Oz)$. \\ \textbf{vitesse champ\_fonc\_xyz dom} $\; 3 \;\; -20y \;\; 20x \;\; 2*(1-(x^2+y^2)/(5^{-2})^2)$ \latex_)
	TestCase . cylindre_tourbillon.data
	IncludeData 1
}

Chapter {
	Title "How to postreat an horizontal cut plane, perpendicular to (OZ)"

	Description "\latex_(The cylinder is cut perpendicularly to $(Oz)$, and the total velocity, normal velocity and tangential velocity vectors are observed with TRUST and VisIt. The objective is to compare the post-processing of these two codes. In the following, this cut plane is called 'coupe1'.\latex_)"
	
	Visu {
		title "Visualization of a cut plane via Extraire_surface"
		
		Width 9cm
		mesh surface_interne.lata plan_1 black
		Instruction_visit MeshAtts = MeshAttributes()
		Instruction_visit MeshAtts.meshColorSource = MeshAtts.Foreground
		Instruction_visit MeshAtts.opaqueColorSource = MeshAtts.OpaqueCustom
		Instruction_visit MeshAtts.opaqueColor = (255, 0, 0, 255)
		Instruction_visit SetPlotOptions(MeshAtts)

		mesh surface_interne.lata dom black
		Instruction_visit MeshAtts = MeshAttributes()
		Instruction_visit MeshAtts.opaqueColorSource = MeshAtts.Background  # Background, OpaqueCustom
		Instruction_visit MeshAtts.opacity = 0.254902
		Instruction_visit SetPlotOptions(MeshAtts)

		Normal3d -0.08791932165044306 -0.8595655464247121 0.5034056657211083
		Up3D 0.009723968123926105 0.5045979651147583 0.863299680323102
	     }

	Visu {
		title "Total velocity vector"
		Description "The calculated velocity field is plotted."
		Cycles 0
		Width 9cm
		Vector coupe1.lata plan_1 VITESSE ELEM
		Normal3d -0.08791932165044306 -0.8595655464247121 0.5034056657211083
		Up3D 0.009723968123926105 0.5045979651147583 0.863299680323102
	}

	Visu {
		title "Normal velocity"
		Description "\latex_(We use the \textbf{Transformation} function to project the velocity according to $(Oz)$: $V_n = (0,0, V_z)$.\latex_)"
		Width 9cm
		Vector coupe1.lata plan_1 VN ELEM
		Normal3d -0.08933902773376151 -0.8452608401754738 0.526832658620779
		Up3D 0.009723968123926105 0.5045979651147583 0.863299680323102
		Cycles 0
		# On récupère min et max de Vn
		Instruction_visit SetTimeSliderState(0) #TimeSliderGetNStates()-1
		Instruction_visit DrawPlots()
		Instruction_visit f=open("Coupe1_extrm_vn_trust","w")
		Instruction_visit Query("Min", use_actual_data=1)
		Instruction_visit f.write(str(GetQueryOutputValue()))
		Instruction_visit Query("Max", use_actual_data=1)
		Instruction_visit f.write(" "+str(GetQueryOutputValue()))
		Instruction_visit f.close()
	}
	

	Visu {
		title "Tangential velocity"
		Description "\latex_(We use the \textbf{Transformation} function to project the velocity in the plane: $V_t = (V_x, V_y, 0)$.\latex_)"
		Width 9cm
		Vector coupe1.lata plan_1 VS_PLAN_E ELEM
		Normal3d -0.08933902773376151 -0.8452608401754738 0.526832658620779
		Up3D 0.009723968123926105 0.5045979651147583 0.863299680323102
		Cycles 0
		# on récupère Min et Max
		Instruction_visit SetTimeSliderState(0)
		Instruction_visit DrawPlots()
		Instruction_visit f=open("Coupe1_extrm_trust","w")
		Instruction_visit Query("Min", use_actual_data=1)
		Instruction_visit f.write(str(GetQueryOutputValue()))
		Instruction_visit Query("Max", use_actual_data=1)
		Instruction_visit f.write(" "+str(GetQueryOutputValue()))
		Instruction_visit f.close()
	}
	Visu {
		Width 9 cm
		Cycles 0
		Vector coupe1.lata plan_1 VS_PLAN_E ELEM
	}
	Visu {
		title "Cutting and projection with VisIt"
		Description "With VisIt, we define the projected speed using control/expression and the components according to $(Ox)$ and $(Oy)$ of the interpolated speed to the elements. Then the cut plane is done with the slice operator."
		Cycles 0
		Width 9cm
		Instruction_visit OpenDatabase("cylindre_tourbillon.lata", 0)
		Instruction_visit DefineVectorExpression("v_proj_horiz", "{VITESSE_X_ELEM_dom,VITESSE_Y_ELEM_dom,0}")
		Instruction_visit AddPlot("Vector", "v_proj_horiz", 1, 0)
		Operator Slice2D 0 0 0.1 0 0 1
		
		# on récupère Min et Max
		Instruction_visit SetTimeSliderState(0)
		Instruction_visit DrawPlots()
		Instruction_visit f=open("Coupe1_extrm_visit","w")
		Instruction_visit Query("Min", use_actual_data=1)
		Instruction_visit f.write(str(GetQueryOutputValue()))
		Instruction_visit Query("Max", use_actual_data=1)
		Instruction_visit f.write(" "+str(GetQueryOutputValue()))
		Instruction_visit f.close()		
	}

	Visu { 
		#On récupère le débit et min et max 		
		Width 0cm
		Pseudocolor cylindre_tourbillon.lata dom VITESSE_Z ELEM
		Operator Slice2D 0 0 0.1 0 0 1

		Instruction_visit f=open("Coupe1_debit","w")
		# on récupère le débit calculé sur coupe 1 avec trust
		Instruction_visit fichierDebT=open("cylindre_tourbillon_DEBIT_PLAN1.son","r")
		Instruction_visit DebT=fichierDebT.read()
		Instruction_visit f.write(DebT[len(DebT)-15:len(DebT)-1])

		# on calcul le débit avec visit
		Instruction_visit SetTimeSliderState(0)
		Instruction_visit DrawPlots()
		Instruction_visit Query("Average Value")
		Instruction_visit res=GetQueryOutputValue()
		Instruction_visit f.write(" "+str(res))
		Instruction_visit f.close()

		# On récupère min et max de Vn
		Instruction_visit f=open("Coupe1_extrm_vn_visit","w")
		Instruction_visit Query("Min", use_actual_data=1)
		Instruction_visit f.write(str(GetQueryOutputValue()))
		Instruction_visit Query("Max", use_actual_data=1)
		Instruction_visit f.write(" "+str(GetQueryOutputValue()))
		Instruction_visit f.close()	
	}

}

	
Chapter {
	Title "How to postreat a 45° sideway cut plane"
	Description "\latex_(A sideway cut plane is made at 45° in the cylinder, and the total speed, normal velocity, and tangential velocity to the plane are observed. In the following, this cut plane is called 'coupe2'.\latex_)"
#	Description " We initially impose a speed composed of a rotation around the $(Oz)$ to $\omega = 20 rad/s$ axis and a parabolic profile corresponding to the analytical solution of a laminar flow in a tube according to $(Oz)$."

	Visu {
		title "Visualization of a cut plane via Extract_surface"
		Width 9cm
		mesh surface_interne.lata plan_2 black
		Instruction_visit MeshAtts = MeshAttributes()
		Instruction_visit MeshAtts.meshColorSource = MeshAtts.Foreground
		Instruction_visit MeshAtts.opaqueColorSource = MeshAtts.OpaqueCustom
		Instruction_visit MeshAtts.opaqueColor = (255, 0, 0, 255)
		Instruction_visit SetPlotOptions(MeshAtts)

		mesh surface_interne.lata dom black
		Instruction_visit MeshAtts = MeshAttributes()
		Instruction_visit MeshAtts.opaqueColorSource = MeshAtts.Background  # Background, OpaqueCustom
		Instruction_visit MeshAtts.opacity = 0.254902
		Instruction_visit SetPlotOptions(MeshAtts)

		Normal3d -0.08791932165044306 -0.8595655464247121 0.5034056657211083
		Up3D 0.009723968123926105 0.5045979651147583 0.863299680323102
	}
	Visu {
		title "Total velocity vector"
		Description "The velocity field calculated on the elements is plotted on the sideway surface."
		Width 9cm
		Cycles 0
		Vector coupe2.lata plan_2 VITESSE ELEM
		Normal3d -0.08791932165044306 -0.8595655464247121 0.5034056657211083
		Up3D 0.009723968123926105 0.5045979651147583 0.863299680323102
	}
	Visu {
		title "Normal velocity"
		Description "\latex_(We use the function \textbf{Transformation} to project the velocity in the normal direction to the plane: $V_t=(V_x/2-V_z/2,0,-V_x/2+V_z/2)$.\latex_)"
		Cycles 0
		Width 9cm
		Vector coupe2.lata plan_2 VN22 ELEM
		Normal3d -0.5534086150182989 -0.7778428657135003 0.2978244131734973
		Up3D 0.1571356602158813 0.2536473168140055 0.9544482295869037
	}
	Visu {
		title "Tangential velocity"
		Description "\latex_(We use the \textbf{Transformation} function to project the velocity in the plan: $Vt = (V_x/2+V_z/2,V_y,V_x/2+V_z/2)$.\latex_)"
		Cycles 0
		Width 9cm
		Vector coupe2.lata plan_2 VS2_PLAN2_E ELEM
		Normal3d -0.5534086150182989 -0.7778428657135003 0.2978244131734973
		Up3D 0.1571356602158813 0.2536473168140055 0.9544482295869037
	}
	Visu {
		Width 9cm
		Cycles 0
		Vector coupe2.lata plan_2 VS2_PLAN2_E ELEM
		Normal3d -1 0 1
		Up3d 1 0 1
	}
	Visu {
		title "Cutting and projection with VisIt"
		Description "With VisIt, the projected velocity is defined using control/expression and the components according to (Ox), (Oy), and (Oz) of the interpolated velocity to the elements, and then the cut plane with the slice operator is performed."
		Width 9cm
		Instruction_visit OpenDatabase("cylindre_tourbillon.lata", 0)
		Instruction_visit DefineVectorExpression("v_proj_obli45", "{VITESSE_X_ELEM_dom/2+VITESSE_Z_ELEM_dom/2,VITESSE_Y_ELEM_dom,VITESSE_X_ELEM_dom/2+VITESSE_Z_ELEM_dom/2}")
		Instruction_visit AddPlot("Vector", "v_proj_obli45", 1, 0)
		Operator Slice2D 0 0 0.075 -1 0 1
		Cycles 0
	}
}

Chapter {
	Title "Quantitative comparisons"
	Description "The results obtained with the two methods seem to be very close. In order to validate this feeling, we use two quantitative criteria: the comparison of the extrema of the velocity and the comparison of the surface flow rates. Finally, we increase the uncertainty on the values calculated by TRUST."

	Table {
		Title "Comparison of extrema: tangential velocity"
		Description "In the case of the horizontal cut plane and then the sideway cut plane, the minimum and the maximum of the tangential velocity are compared with the post-processed values of TRUST and VisIt. The relative difference on the minima is not significant, it is necessarily large since we divide by a very small number. The relative difference on the maxima is very satisfactory, since it is less than $1%$."

		Description "The incline of the cut plane plays a significant influence on the reliability of the measurements, but this parameter seems to be the one whose influence is the most random. Moreover, in some cases it can not be varied. In the following we will be interested in 'coupe1', where the difference between the two methods is the most important."

		nb_columns 2
		label Min | Max
		line {
			legend "Extrema theoretical 'Coupe1'"
			Values 0. 1.
		}
		line {
			legend "Vt Coupe1 TRUST"
			file Coupe1_extrm_trust
		}
		line {
			legend "Vt Coupe1 VisIt"
			file Coupe1_extrm_visit
		}
		line { 
			legend "Relative deviation VisIt/TRUST 'coupe1'"
			difference ecart_relatif Vt_Coupe1_TRUST Vt_Coupe1_VisIt 
		}
	}

	Table {
		Title "Comparison of extrema: normal velocity"
		Description "One compares to their theoretical value the extrema of the speed on 'coupe1'. The relative difference on the maxima is less than $ 0.1% $. The difference between the minima is somewhat less good, but it remains correct since in both cases values less than $ 0.1 $ are obtained."
		nb_columns 2
		label Min | Max
		line {
			legend "Extrema theoretical 'Coupe1'"
			Values 0. 2.
		}
		line {
			legend "Vn Coupe1 TRUST"
			file Coupe1_extrm_vn_trust
		}
		line {
			legend "Vn Coupe1 VisIt"
			file Coupe1_extrm_vn_visit
		}
		line { 
			legend "Relative deviation VisIt/TRUST 'coupe1'"
			difference ecart_relatif Vn_Coupe1_TRUST Vn_Coupe1_VisIt 
		}
	}

	Visu {
		#on récupère le débit de référence (sur tout le volume)
		Width 0cm
		Pseudocolor cylindre_tourbillon.lata dom VITESSE_Z ELEM

		Instruction_visit f=open("Global_debit","w")
		# on récupère le débit calculé par trust
		#Instruction_visit fichierDebR=open("cylindre_tourbillon_pb_Debit.out","r")
		#Instruction_visit DebR=fichierDebR.read()
		#Instruction_visit f.write(DebR[11:20])
		#Instruction_visit fichierDebR.close()
		
		Instruction_visit fichierDebR=open("Debit_ref","r")
		Instruction_visit f.write(fichierDebR.read())
		Instruction_visit fichierDebR.close()		

		# on calcul le débit avec visit
		Instruction_visit SetTimeSliderState(0)
		Instruction_visit DrawPlots()
		Instruction_visit Query("Average Value")
		Instruction_visit res=GetQueryOutputValue()
		Instruction_visit f.write(" "+str(res))
		Instruction_visit f.close()	
	}

	Table {
		Title "Comparison of surface flow rates"
		Description "\latex_(With TRUST, the surface flux is calculated using the functions \textbf{Transformation} and \textbf{Reduction0d}. This is the average of the velocity on the surface, multiplied by the density (here $\rho = 1 kg.m^{-3}$). With VisIt, Querie ("Average Value") is used to obtain the average velocity field on the surface. This flow rate is calculated on the 'coupe1'. A reference line is added, the TRUST value is the flow rate given by the Debit.out file, while the VisIt value is a calculation of the average speed (numerically identical to the average flow rate here) across the volume.\latex_)"
	
		nb_columns 2
		label TRUST | VisIt
		line {
			legend "Surface flow rate coupe1"
			file Coupe1_debit
		}
		line {
			legend "Surface flow rate Reference"
			file Global_debit
		}
		line { 
			legend "Relative deviation coupe1"
			difference ecart_relatif Surface_flow_rate_coupe1 Surface_flow_rate_Reference
		}

		Description "With TRUST and VisIt, flow rates are very slightly lower than the reference flow rates. The relative deviation with the reference values is of the order of $0.01%$, which shows that the interpolation error is negligible on the flow rate."
	}

	Table {
		Title "Probabilistic approach for 'coupe1'"	
		Description "\latex_(We can assimilate the different ways of calculating the field of velocities $ V_z $ to as many random variables of the space of the positions in the space of the velocities. We assume that there exists an error function $\epsilon$ under a normal law between the exact solution function $V_{z, e}$ and an interpolated function $ V_{z,i}$: $$V_{z, e} = V_{z, i} + \epsilon$$ We thus try to determine the expectation (E) and the variance (Var) of $\epsilon$, which correspond respectively to a difference in surface flow rate and to a difference in mass energy between the exact solution and the approximate solution. We also assume the independence between the approximate velocity and $\epsilon$. This allows us to obtain the expression: $$Var (V_{z, e}) = Var(V_{z, i}) + \sigma^2  \mbox{ where } \sigma^2=Var(\epsilon)$$ with $\sigma$ the standard deviation. As we know $Var(V_{z,e})$, we can compute $ Var(V_{z, i}) $, which allows us to obtain $\sigma^2$. By linearity of expectation, one easily gets $\mu$: $$E [V_{z, e}] = E[V_{z, i}] + \mu \mbox{ where } \mu= mean(\epsilon)$$ We get $E[V_{z,i}]$ and $Var[V_{z,i}]$ using \textbf{Transformation} and \textbf{Reduction\_0d methode moyenne\_ponderee} (cf  data file). $E[V_{z,e}]$ and $Var[V_{z,e}]$ are obtained from the analytical solution.\latex_)"
		nb_columns 1
		line {
			legend "\latex_($E[V_{z,e}]$\latex_)"
			values 1.0
		}
		line {
			legend "\latex_($E[V_{z,i}]$\latex_)"
			file cylindre_tourbillon_DEBIT_PLAN1.son
			nb_columns_file 2
			last_line
			columns ($2)
		}
		line {
			legend "$\mu$"
			difference delta \latex_($E[V_{z,e}]$\latex_) \latex_($E[V_{z,i}]$\latex_)
		}
		line {
			legend "\latex_($Var(V_{z,e})$\latex_)"
			values 0.333333333
		}
		line {
			legend "\latex_($Var(V_{z,i})$\latex_) TRUST"
			file cylindre_tourbillon_VAR1.son
			nb_columns_file 2
			last_line 
			columns ($2)
		}
		line {
			legend "\latex_($\sigma^2$\latex_)"
			difference delta \latex_($Var(V_{z,e})$\latex_) \latex_($Var(V_{z,i})$\latex_)_TRUST
		}
	}


	Table {
		Title "Confidence interval for TRUST interpolation"
		Description "\latex_(It is known that the error function $\epsilon$: $$\epsilon=V_{z,e}-V_{z,i}$$ follows a normal law of mean $\mu$ and standard deviation $\sigma$ (calculated with TRUST). Thus we can determine a confidence interval of $95\%$ for $V_{z,i}$: $$V_{z,e}+\mu-1.96*\sigma<V_{z,i}<V_{z,e}+\mu+1.96*\sigma$$ So in our case: $$V_{z,e}-6.87.0*10^{-2}<V_{z,i}<V_{z,e}+6.61*10^{-2}$$ An absolute error of velocity is obtained here, it can be used to increase the relative error. The closer you get to the center of the tube, the faster the flow, the absolute error is divided by a high velocity, so the relative error is small. On the contrary, when one approaches the edges, the velocity tends to 0, so one can not obtain an excess of the relative error with this method. In our case, the velocity is greater than $1 m/s$ as long as it is observed in a cylinder of radius $2/3$ of the maximum radius. Thus, on this central domain, it can be asserted with a $95\%$ confidence level that the relative error is increased by $7\%$.\latex_)"
	}

	Table {
		Title "Remarks"
		Description "The method used to estimate the relative error is rough, we could have a finer estimate by studying directly the random variable \latex_($\frac{V_{z,i}-V_{z,e}}{V_{z,e}}$\latex_). Moreover, the average values and the extrema of the velocity computed are very close to the theoretical values, with relative deviations of the order of $0.1%$ for the maximum and the flow rate. This leads us to believe that in reality the interpolated function is much closer to the exact function than the confidence interval obtained shows. Finally, it should not be forgotten that the influence of the mesh has not been studied at all, it is obviously determinative of the precision of the interpolation."
	}
}

Chapter {
	Title "Conclusion"
	Description "In a first part we have shown with graphic illustrations that the interpolation and projection methods of TRUST and VisIt actually make it possible to obtain on a surface the total, tangential, and normal velocity fields. We then considered the accuracy of these methods by comparing the extrema, and the mean values of the velocity (corresponding to the flow rate). These computed quantities (with TRUST and VisIt) were compared between them, and with theoretical values. We observe very similar values, which seem to validate the two methods. Finally, a first confidence interval was established giving the uncertainty of the values calculated with TRUST."
	Description "The influence of the mesh and the position of the cut plane can be studied in a future study."
}


