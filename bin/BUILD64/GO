ORG=`pwd`

[ !  -d env_src ] && echo no env_src && exit 1

# We touch the file .build64 that tells that patch has been applied
touch .build64

# Apply patch
cp -r bin/BUILD64/patch/*  .
cp bin/BUILD64/Modifie bin/BUILD64/replace_int_entier.py bin/BUILD64/GO .

# Apply Modifie script and exclude many file extensions that should not be edited if possible
# arch.h is already compatible with BUILD64, it provides from patch, so we do not edit it
./Modifie $(find src -type f -not -name "*.f" -not -name "*.txt" -not -name "*.include" -not -name "*.sh" -not -name "arch.h")

./Modifie $(find Outils/lata2dx/lata2dx -not -name "*.py" )
./Modifie Outils/lata2dx/lata_dx_filter.cpp


# Perform supplementary sed on some files
sed "s/long long long/long long/" -i Outils/lata2dx//lata2dx/commun_triou/LataDB.cpp
sed s"/long compare_indirect/int compare_indirect/" -i  Outils/lata2dx//lata2dx/commun_triou/Lata_tools.cpp

sed "s/long fonction/int fonction/" -i Outils/lata2dx/lata2dx/triou_compat/ArrOf*.cpp 
sed "s/long main(long/int main(int/" -i  Outils/lata2dx/lata2dx//*cpp

sed -i "s/<< type_codage <</<</g" src/Kernel/Framework/Equation_base.cpp
sed -i "s/%d/%ld/g" src/PolyMAC/Zones/Zone_PolyMAC.cpp
sed -i "s/vector<long> P_c(nv + 1), P_l(nv), A_c, A_l;/vector<long long> P_c(nv + 1), P_l(nv), A_c, A_l;/" src/PolyMAC/Zones/Zone_PolyMAC.cpp

# For ICoCo, we cannot use 64 bits because it is MEDCoupling (only 32bits) based
sed -i "s/long [*]p/int *p/" src/Kernel/Champs/Champ_input_P0.cpp
sed -i "s/long [*]p/int *p/" src/Kernel/ICoCo/Convert_ICoCoTrioField.cpp
