file(GLOB srcs [A-Z|a-z]*.cpp [A-Z|a-z]*.c [A-Z|a-z]*.f)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}  ${TRUST_ROOT}/include/backward  ${TRUST_ROOT}/src/Kernel/Champs  ${TRUST_ROOT}/src/Kernel/Champs_dis  ${TRUST_ROOT}/src/Kernel/Cond_Lim  ${TRUST_ROOT}/src/Kernel/Framework  ${TRUST_ROOT}/src/Kernel/Geometrie  ${TRUST_ROOT}/src/Kernel/Math  ${TRUST_ROOT}/src/Kernel/Math/Matrices  ${TRUST_ROOT}/src/Kernel/Math/SolvSys  ${TRUST_ROOT}/src/Kernel/Operateurs  ${TRUST_ROOT}/src/Kernel/Utilitaires  ${TRUST_ROOT}/src/Kernel/VF/Zones  ${TRUST_ROOT}/src/ThHyd  ${TRUST_ROOT}/src/ThHyd/Quasi_Compressible  ${TRUST_ROOT}/src/ThSol  ${TRUST_ROOT}/src/VDF  ${TRUST_ROOT}/src/VDF/Champs  ${TRUST_ROOT}/src/VDF/Operateurs/Evaluateurs  ${TRUST_ROOT}/src/VDF/Operateurs/Iterateurs  ${TRUST_ROOT}/src/VDF/Zones )
add_library(obj_opvdf OBJECT  ${srcs} )
set(listlibs ${listlibs} opvdf PARENT_SCOPE    )
add_custom_target(check_sources_opvdf   COMMAND check_sources.sh ${CMAKE_CURRENT_SOURCE_DIR} COMMENT  "checking code validity opvdf" )
add_DEPENDENCIES(obj_opvdf check_sources_opvdf)
if(COMPIL_DYN)
  add_library(opvdf SHARED   $<TARGET_OBJECTS:obj_opvdf> )
  install(TARGETS opvdf  DESTINATION lib)
endif(COMPIL_DYN)
