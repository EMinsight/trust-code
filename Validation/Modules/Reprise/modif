#!/bin/bash
dir=$(which EditData)
dir=$(dirname $dir)
[ ! -f $dir/IHMTRIO.sh ] && dir=$TRUST_ROOT/Outils/TRIOXDATA

. $dir/IHMTRIO.sh 
cas=`basename $1 .data`
DIR=`dirname $0`
[ "$DIR" = "" ] && DIR=`pwd`
lan()
{
    trust $1 1>$1.out 2>$1.err
}
#rm -f *.lml
if [ -f Rep_$cas.data ] && [ "$force" != 1 ] 
then
  echo "on utilise la sauvegarde (force!=1)"
  cp Rep_$cas.data Reprise_$cas.data
  gunzip -f *xyz.rep.gz
else
  echo " calcul de reference "
  lan $cas 
  cp $cas.lml .reference.lml
  chmod +w $cas.data
  grep -vi distance_paroi $cas.data > p.data
  mv p.data $cas.data
  format=binaire
  # format=xyz
  python $DIR/decoup_data.py $cas.data $format 
  # python $DIR/decoup_data.py $cas.data xyz
  status=$?
[ $status -eq 0 ] &&  rm -f $cas.lml $cas*out $cas*xyz $cas*dt_ev $cas*son #  triou -clean > /dev/null
  for f in `ls *_repr_*`
  do
   cp $f PAR_$f
  done
  [ $status -ne 0 ] && echo $cas >> $DIR/pb_traduction
  echo "premiere partie"
  lan test_$cas 
  cp test_$cas.dt_ev $cas.dt_ev
  cp test_$cas.dt_ev PAR_$cas.dt_ev
  if [ $format != "xyz" ]
  then
   make_PAR.data test_$cas
   n=$?
   echo "running in // $n"
   trust PAR_test_$cas $n 1>PAR.log 2>PAR.err
  fi
  #echo "deuxieme partie "
  #lan test2_$cas
  #compare_lata $cas.lml test2_$cas.lml --dernier 
fi
