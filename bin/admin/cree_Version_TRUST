#!/bin/bash
# Chemin des repertoires GNUPLOT,LIBSKIT,etc
gzip_()
{
   gzip -f $1
}

lib=0;[ ${#1} != 0 ] && lib=1
cd $WORKDIR
echo $ECHO_OPTS "\nPortage what version of TRUST? (Typing return if no version)\c"
for i in `ls | grep PORTAGE_`
do
   echo $ECHO_OPTS ${i#PORTAGE_}" \c"
done
echo $ECHO_OPTS ":"
read v
PORTAGE=""
if [ "$v" != "" ]
then
   PORTAGE=$WORKDIR/PORTAGE_$v
   if [ ! -d $PORTAGE ]
   then
      # On regarde si la version beta n'existe pas dans ce cas on move le repertoire
      if [ -d $PORTAGE"_beta" ]
      then
         echo $PORTAGE"_beta" renamed in $PORTAGE
         mv $PORTAGE"_beta" $PORTAGE
      else
         echo $ECHO_OPTS "Versions $PORTAGE or $PORTAGE"_beta" not exists."
         exit -1
      fi
   else
      echo $ECHO_OPTS "Version $PORTAGE exists."  
   fi
fi
#####################################################
# Creation du fichier .tar a partir de ses composants
#####################################################
# Nouvelle arborescence:
#    vX.Y.Z
#      |       |
#    TRUST  Diphasique
#
fichier=$TRUST_ROOT/TRUST_$v.tgz
rm -f $fichier

##########################
# Boucle sur les modules #
##########################
MODULES="TRUST Diphasique"
# Diphasique plus livre a partir de v1.4
MODULES="TRUST"
for MODULE in $MODULES
do
   echo $ECHO_OPTS "\nMODULE $MODULE:"
   ROOT=`dirname $TRUST_ROOT`/$MODULE
   if [ "$PORTAGE" != "" ]
   then
      
      for TRUST_ARCH in `\ls $PORTAGE`
      do   
	 if [ ! -d $PORTAGE/$TRUST_ARCH/$MODULE ]
	 then
	    echo "$PORTAGE/$TRUST_ARCH/$MODULE not exists."
	 else
	    # Cree le exec.tar
	    echo "Construction of exec.$TRUST_ARCH.tar..."
	    cd $PORTAGE/$TRUST_ARCH/$MODULE
	    tar cf $ROOT/exec.$TRUST_ARCH.tar exec 1>/dev/null
	    cd $ROOT
	    gzip_ exec.$TRUST_ARCH.tar
	 fi
      done
      cd $ROOT/..
      ls $MODULE/exec.*.tar.gz > $MODULE/exec.files
      # Construit le paquet
      echo $ECHO_OPTS "\nCreation of $fichier..."
      tar zcf $fichier  --transform=s?$MODULE?${MODULE}_${v}? `cat $MODULE/TRUST.files;cat $MODULE/exec.files`
      echo $ECHO_OPTS "\nThe $fichier file is ready."
      cd $ROOT
   else
      # Construit le paquet
      echo $ECHO_OPTS "\nCreation of $fichier..."
      mise_a_jour_TRUST_tar -without_test_validation
      echo $ECHO_OPTS "\nThe $TRUST_ROOT/TRUST_$TRUST_VERSION.tgz file is ready."   
   fi
   # FIN ET MENAGE
   rm -f $ROOT/exec.*.tar.gz $ROOT/exec.files
done
