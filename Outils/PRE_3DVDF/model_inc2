#include "defineh_inc"   
C ******************************************
C            PRELIMINAIRE CHOC FROID      *
C            PREETUDE (ACTION 2000)       *
C ******************************************
	implicit none
      include 'model.h'
	 call initxmymzm
	call main2
#ifndef SALOME_
	call MESHTV
	open(unit=33,file='model.lata.in')
        call lata
	call verifmaillage
c	call OPENDX
	print *,'raccc'
	call mainrac
	print *,'decoupage'
	call maindec
	print *,'fin execution ok' 	
	write(33,'(80a)')'FIN'
 	close(33)
#endif
	end
C       cette routine compile si toutes les variables sont bien definies
c	dans le fichier maillage
	subroutine test_decl_var
	implicit none
#ifdef MAIL_EXIST
#include "modelh_inc2"
#include "maillage"
	print *,"Inclusion de maillage"
#endif
	end
	subroutine main2
	implicit none
	include 'model.h'
#include "decl_appel.h"
	real PI
        integer I,J,K,IMAX,JMAX,KMAX
	integer NBMAIL1,NBMAIL2,inet,NBMAILPB(10)
	integer nbtot
#ifdef FIELD_
	integer ind,indi,jnd,indj,knd,indk,imp
#endif
	integer ind_sto
C LE PROBLEME EST INCLUS DANS UN PAVE
C                                        ===> INDICE 0


C        L eau  decoupee en 3                   INDICE 10
C L acier   idem                         ===> INDICE 20
C avec sous zones eventuelles ***

C LES LIMITES : INJECTION POMPE+CIRCUIT  ===> INDICE -1000
C               POINTS DE PRESSIORN COEU ===> INDICE -2000
C        AUTRE LIMITE  ADIA ET ADHERE    ===> INDICE 0        (rappel)

C********************************************************************************
c include du maillage si fichier existant
#ifdef MAIL_EXIST
#include "maillage"
	print *,"Inclusion de maillage"
#endif
	OPEN(14,file='mod.trace')
C********************************************************************************
C DIMENSIONS
C********************************************************************************
      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
C********************************************************************************

C INITIALISATION DES INDMAIL
      PRINT *,' DEBUT INITIALISATIONS DES INDMAIL'
C PAVE 1
      DO I=1,IMAX-1
      DO J=1,JMAX-1
      DO K=1,KMAX-1
         INDMAIL(I,J,K)=0
      ENDDO
      ENDDO
      ENDDO

C***********************************************************************
C CASEMATE,BETON,ETUIS,ETC...
C***********************************************************************
C INDEXATION DES OBJETS PAR INCLUSIONS  ET EXCLUSIONS SUCCESSIVES
      PRINT *,'MODELAGE'
      PI=asin(1.d0)*2.

#include "appel.h"
C**********************************************************************
C**********************************************************************
#ifndef SALOME_
C**********************************************************************
C VERIFICATIONS FINALES
      PRINT *,' VERIFICATIONS FINALES '
      OPEN(UNIT=20,FILE='model.fld')
      OPEN(UNIT=21,FILE='model.val',FORM='UNFORMATTED')
      OPEN(UNIT=22,FILE='model.xi',FORM='FORMATTED')
      OPEN(UNIT=23,FILE='model.yi',FORM='FORMATTED')
      OPEN(UNIT=24,FILE='model.zi',FORM='FORMATTED')
      OPEN(UNIT=25,FILE='model.pres',FORM='UNFORMATTED')
      WRITE(20,100) IMAX,JMAX,KMAX
      NBMAIL1=0
      NBMAIL2=0
      DO I=1,10
       NBMAILPB(I)=0
      ENDDO
      DO I=1,IMAX-1
      DO J=1,JMAX-1
      DO K=1,KMAX-1
         IPRES(I,J,K)=0
	ind_sto=indmail(i,j,k)
         IF(IND_sto.NE.0) IPRES(I,J,K)=1
	 ind_sto=ind_sto/1000
         IF(IND_sto.EQ.1) NBMAIL1=NBMAIL1+1
         IF(IND_sto.EQ.2) NBMAIL2=NBMAIL2+1
         IF(IND_sto.ge.1) NBMAILPB(ind_sto)=NBMAILPB(ind_sto)+1
c         IF(INDMAIL(I,J,K)/1000.EQ.1) NBMAIL1=NBMAIL1+1
c         IF(INDMAIL(I,J,K)/1000.EQ.2) NBMAIL2=NBMAIL2+1
      ENDDO
      ENDDO
      ENDDO
C    ON VERIFIE QUE LES MAILLES DE BORD NE SONT PAS DES PBS
	do i=1,IMAX-1,IMAX-2
	   do j=1,JMAX-1
	      do k=1,KMAX-1
		if (indmail(i,j,k).ge.1000) then
	          print *,'PROBLEM WITH THE MESH',I,J,K,' indmail' 
     &            ,'OF A PB ',INDMAIL(i,j,k)
c	          STOP 
	        endif
	      enddo
	   enddo
	enddo
	do i=1,IMAX-1
	   do j=1,JMAX-1,JMAX-2
	      do k=1,KMAX-1
		if (indmail(i,j,k).ge.1000) then
	          print *,'PROBLEM WITH THE MESH',I,J,K,' indmail' 
     &            ,'OF A PB ',INDMAIL(i,j,k)
c	          STOP 
	        endif
	      enddo
	   enddo
	enddo
	do i=1,IMAX-1
	   do j=1,JMAX-1
	      do k=1,KMAX-1,KMAX-2
		if (indmail(i,j,k).ge.1000) then
	          print *,'PROBLEM WITH THE MESH',I,J,K,' indmail' 
     &            ,'OF A PB ',INDMAIL(i,j,k)
c	          STOP 
	        endif
	      enddo
	   enddo
	enddo
	
      PRINT *,' ECRITURE DU FIELD GLOBAL NBMAIL1 ',NBMAIL1
      PRINT *,' ECRITURE DU FIELD GLOBAL NBMAIL2 ',NBMAIL2
      nbtot=0
      do I=1,10
       if (nbmailpb(i).ne.0) print *,'NBMAIL PB',I,':',NBMAILPB(I)
       nbtot=nbtot+NBMAILPB(I)
      enddo
	print *,' NBMAIL TOT',nbtot
      WRITE(22,*) XM
      WRITE(23,*) YM
      WRITE(24,*) ZM
      WRITE(21) INDMAIL
      WRITE(25) IPRES
      CLOSE(21)
      CLOSE(22)
      CLOSE(23)
      CLOSE(24)
      CLOSE(25)
C ECRITURE FACULTATIVE D UN FLD NET
      PRINT *,' PREPARATION D UN FIELD NET? 1 SI NON 0'
      READ *, INET
      IF(INET.EQ.1) THEN
#ifdef FIELD_
C COORDONNEES
      DO I=1,IMAX-1
        IMP=I*2-1
        XMP(IMP)=XM(I)+1.E-5
        XMP(IMP+1)=XM(I+1)-1.E-5
      ENDDO
      DO I=1,JMAX-1
        IMP=I*2-1
        YMP(IMP)=YM(I)+1.E-5
        YMP(IMP+1)=YM(I+1)-1.E-5
      ENDDO
      DO I=1,KMAX-1
        IMP=I*2-1
        ZMP(IMP)=ZM(I)+1.E-5
        ZMP(IMP+1)=ZM(I+1)-1.E-5
      ENDDO
C TABLEAUX
      DO I=1,IMAX-1
      DO J=1,JMAX-1
      DO K=1,KMAX-1
        DO IND=1,2
           INDI=IND-1
        DO JND=1,2
           INDJ=JND-1
        DO KND=1,2
           INDK=KND-1
          IVALP(2*I-INDI,2*J-INDJ,2*K-INDK)=INDMAIL(I,J,K)
          IPREP(2*I-INDI,2*J-INDJ,2*K-INDK)=IPRES(I,J,K)
        ENDDO
        ENDDO
        ENDDO
      ENDDO
      ENDDO
      ENDDO
C ECRITURES
      OPEN(UNIT=20,FILE='modelm.fld')
      OPEN(UNIT=21,FILE='model.valp',FORM='UNFORMATTED')
      OPEN(UNIT=22,FILE='model.xm',FORM='FORMATTED')
      OPEN(UNIT=23,FILE='model.ym',FORM='FORMATTED')
      OPEN(UNIT=24,FILE='model.zm',FORM='FORMATTED')
      OPEN(UNIT=25,FILE='model.presp',FORM='UNFORMATTED')
      WRITE(20,300) 2*IMAX-2,2*JMAX-2,2*KMAX-2
      WRITE(22,101) XMP
      WRITE(23,101) YMP
      WRITE(24,101) ZMP
      WRITE(21) IVALP  
      WRITE(25) IPREP
      CLOSE(20)
      CLOSE(21)
      CLOSE(22)
      CLOSE(23)
      CLOSE(24)
      CLOSE(25)

#else
	print *,"option indispo contactez l'assistance"
#endif
      ENDIF
#ifdef PLUSNECESSAIRE
C ECRITURES POUR DECOUPAGE DU PB1
	NPROCD=1
	if (NPROCD.GE.2) then
      OPEN(UNIT=98,FILE='DEC1.dec',FORM='FORMATTED')	
      OPEN(UNIT=99,FILE='DEC2.dec',FORM='FORMATTED')
      DO N=1,3
           NMAPRO1(N)=0
           NMAPRO2(N)=0
      ENDDO
C DECOUPAGE EN 16 PROCESSEURS
      WRITE(98,991) 3,NBMAIL1
      WRITE(99,991) 3,NBMAIL2
      NBMAI1=0
      NBMAI2=0
  991 FORMAT (2I9)
      DO I=1,IMAX
      DO J=1,JMAX
      DO K=1,KMAX
         IF(INDMAIL(I,J,K)/1000.EQ.1) THEN
           NBMAI1=NBMAI1+1
           INDPROC=INDMAIL(I,J,K)-1000+1
           NMAPRO1(INDPROC)=NMAPRO1(INDPROC)+1
      NUMA=NBMAI1-1
      NUMPRO=INDPROC-1
      WRITE(98,991) NUMA,NUMPRO
                                       ELSE
         IF(INDMAIL(I,J,K)/1000.EQ.2) THEN
           NBMAI2=NBMAI2+1
           INDPROC=INDMAIL(I,J,K)-2000+1
           NMAPRO2(INDPROC)=NMAPRO2(INDPROC)+1
      NUMA=NBMAI2-1
      NUMPRO=INDPROC-1
      WRITE(99,991) NUMA,NUMPRO
         ENDIF
         ENDIF
      ENDDO
      ENDDO
      ENDDO
      DO N=1,3
         NMAIL1=NMAPRO1(N)+NMAIL1
         NMAIL2=NMAPRO2(N)+NMAIL2
      ENDDO
      PRINT *,'NMAIL1 = ',NMAIL1
      PRINT *,'NMAIL2 = ',NMAIL2
      DO N=1,3
         PRINT *,'PROC',N-1,'NOMBRE DE MAILLES PB1 ',NMAPRO1(N)
         PRINT *,'PROC',N-1,'NOMBRE DE MAILLES PB2 ',NMAPRO2(N)
      ENDDO
C
	CLOSE(98)
	CLOSE(99)	
	ENDIF
C fin du test sur nproc
#endif
      CLOSE(20)
      CLOSE(26)
      CLOSE(27)
      CLOSE(28)
      CLOSE(31)
#else
      OPEN(UNIT=21,FILE='model.val',FORM='UNFORMATTED')
	close(21)
#endif
      close(14)
  199 FORMAT (/ /,'*********** NIVEAU **********',I3)
  200 FORMAT(77I2)
  100 FORMAT('# AVS model complet noeuds'/,'# test extrait_court',
     1/,'ndim=3',/,'dim1=',I3,/,'dim2=',I3,/,'dim3=',I3,
     2/,'nspace=3',/,'veclen=2',/,'data=integer',/,'field=rectilinear',/,
     2'coord 1 file=model.xi filetype=ascii',/,
     2'coord 2 file=model.yi filetype=ascii',/,
     2'coord 3 file=model.zi filetype=ascii',/,
     3'variable 1 file=model.val filetype=unformatted',/,
     3'variable 2 file=model.pres filetype=unformatted')
  300 FORMAT('# AVS model complet maille'/,'# test extrait_court',
     1/,'ndim=3',/,'dim1=',I3,/,'dim2=',I3,/,'dim3=',I3,
     2/,'nspace=3',/,'veclen=2',/,'data=integer',/,'field=rectilinear',/,
     2'coord 1 file=model.xm filetype=ascii',/,
     2'coord 2 file=model.ym filetype=ascii',/,
     2'coord 3 file=model.zm filetype=ascii',/,
     3'variable 1 file=model.valp filetype=unformatted',/,
     3'variable 2 file=model.presp filetype=unformatted')
  101 FORMAT(10F12.6)
      
      END
C *********************************************************************
	subroutine mainRAC
	implicit none
	include 'model.h'
#include "decl_appelrac.h"
	real PI
	integer I,J,K,IMAX,JMAX,KMAX
	integer racpres
#ifdef MAIL_EXIST
#include "maillage"
	print *,"Inclusion de maillage"
#endif
C********************************************************************************
C DIMENSIONS
C********************************************************************************
      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
C********************************************************************************
      OPEN(UNIT=22,FILE='model.xi',FORM='FORMATTED')
      OPEN(UNIT=23,FILE='model.yi',FORM='FORMATTED')
      OPEN(UNIT=24,FILE='model.zi',FORM='FORMATTED')
      OPEN(UNIT=25,FILE='model.pres',FORM='UNFORMATTED')

C INITIALISATION DES INDMAIL
      PRINT *,' DEBUT INITIALISATIONS DES INDMAIL'
C PAVE 1
      DO I=1,IMAX-1
      DO J=1,JMAX-1
      DO K=1,KMAX-1
         INDMAIL(I,J,K)=0
      ENDDO
      ENDDO
      ENDDO


C***********************************************************************
C INDEXATION DES OBJETS PAR INCLUSIONS  ET EXCLUSIONS SUCCESSIVES
      PRINT *,'RACCORDS....'
      PI=asin(1.d0)*2.


C**********************************************************************

      OPEN(UNIT=20,FILE='modelr.fld')
      WRITE(20,100) IMAX,JMAX,KMAX
      
      OPEN(UNIT=21,FILE='model.rac',FORM='UNFORMATTED')
     
      READ(22,*) XM
      READ(23,*) YM
      READ(24,*) ZM
      READ(25) IPRES
      racpres=1
#include "appelrac.h"

	if (1.eq.0) then
	do i=1,NIMAX-1
	   do j=1,NJMAX-1
	      do k=1,NKMAX-1
	 indmail(i,j,k)=indmail(i,j,k)-(indmail(i,j,k)/1000)*1000
	      enddo
	   enddo
	enddo
	endif
      WRITE(21) INDMAIL
c      DO I=1,IMAX-1
c      DO J=1,JMAX-1
c      DO K=1,KMAX-1
c       if (INDMAIL(I,J,K).NE.0)  print *,I,J,K,INDMAIL(I,J,K)
c      ENDDO
c      ENDDO
c      ENDDO
      CLOSE(21)
      CLOSE(22)
      CLOSE(23)
      CLOSE(24)
      CLOSE(25)

	if (racpres.eq.1) then
	call meshtv2
	call lata_rac
	endif
  
  199 FORMAT (/ /,'*********** NIVEAU **********',I3)
  200 FORMAT(77I2)
  100 FORMAT('# AVS model complet noeuds'/,'# test extrait_court',
     1/,'ndim=3',/,'dim1=',I3,/,'dim2=',I3,/,'dim3=',I3,
     2/,'nspace=3',/,'veclen=2',/,'data=integer',/,'field=rectilinear',/,
     2'coord 1 file=model.xi filetype=ascii',/,
     2'coord 2 file=model.yi filetype=ascii',/,
     2'coord 3 file=model.zi filetype=ascii',/,
     3'variable 1 file=model.rac filetype=unformatted',/,
     3'variable 2 file=model.pres filetype=unformatted')
  300 FORMAT('# AVS model complet maille'/,'# test extrait_court',
     1/,'ndim=3',/,'dim1=',I3,/,'dim2=',I3,/,'dim3=',I3,
     2/,'nspace=3',/,'veclen=2',/,'data=integer',/,'field=rectilinear',/,
     2'coord 1 file=model.xm filetype=ascii',/,
     2'coord 2 file=model.ym filetype=ascii',/,
     2'coord 3 file=model.zm filetype=ascii',/,
     3'variable 1 file=model.valp filetype=unformatted',/,
     3'variable 2 file=model.presp filetype=unformatted')
  101 FORMAT(10F12.6)
      
      END
C *********************************************************************
	subroutine maindec
#define NMAPRO 1000
#define NPBMAX 9
	implicit none
	INTEGER NBPARPROC(NMAPRO,NPBMAX),NBMAILPB(NPBMAX)
	include 'model.h'
	real PI
	integer I,J,K,IMAX,JMAX,KMAX
	
	integer indm,inddec,inddec2,indmod
#include "decl_appeldec.h"
#ifdef MAIL_EXIST
#include "maillage"
	print *,"Inclusion de maillage"
#endif
C********************************************************************************
C DIMENSIONS
C********************************************************************************
      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
C********************************************************************************
      OPEN(UNIT=22,FILE='model.xi',FORM='FORMATTED')
      OPEN(UNIT=23,FILE='model.yi',FORM='FORMATTED')
      OPEN(UNIT=24,FILE='model.zi',FORM='FORMATTED')
      OPEN(UNIT=25,FILE='model.val',FORM='UNFORMATTED')

C INITIALISATION DES INDMAIL
      PRINT *,' DEBUT INITIALISATIONS DES INDMAIL'
C PAVE 1
      DO I=1,IMAX-1
      DO J=1,JMAX-1
      DO K=1,KMAX-1
         INDMAIL(I,J,K)=0
      ENDDO
      ENDDO
      ENDDO


C***********************************************************************
C INDEXATION DES OBJETS PAR INCLUSIONS  ET EXCLUSIONS SUCCESSIVES
      PRINT *,'RACCORDS....'
      PI=asin(1.d0)*2.


C**********************************************************************

   
       OPEN(UNIT=20,FILE='modeldec.fld')
      WRITE(20,100) IMAX,JMAX,KMAX
   
     
      READ(22,*) XM
      READ(23,*) YM
      READ(24,*) ZM
c     IPRES contient INDMAIL du model standard!! 
      READ(25) IPRES 

#include "appeldec.h"
      OPEN(UNIT=21,FILE='model.dec',FORM='UNFORMATTED')   
c     on stocke NPROCDEC DANS INDMAIL(1,1,1)
	INDMAIL(1,1,1)=NPROCDEC

	DO I=1,NPROCDEC
	DO J=1,NPBMAX
	 NBPARPROC(I,J)=0
	enddo
	enddo
        print *,'verification du decoupage',NPBMAX
        DO I=2,IMAX-2
	DO J=2,JMAX-2
      	DO K=2,KMAX-2	
	indm=INDMAIL(I,J,K)
	inddec=INDM/1000
	inddec2=indm-inddec*1000
c	print *,INDMAIL(I,J,K),inddec,inddec2
	indmod=IPRES(I,J,K)/1000
        if ((inddec.ne.indmod)) then
c	   print *,'problem with the mesh ',I,J,K
c	print *,' indice pb  dec ',inddec,'indice pb model',indmod
c	print *,'indice zone dec',inddec2 
            inddec=indmod
	    if (indmod.le.0) inddec2=0
            INDMAIL(I,j,k)=indmod*1000+inddec2
c	stop
	endif
	if (inddec2.eq.0) then
	 if (indmod.gt.0) then
	  print *,'problem with the mesh ',I,J,K
        print *,' indice pb  dec ',inddec,'indice pb model',indmod
        print *,'indice zone dec',inddec2
	 endif
	else
	NBPARPROC(inddec2,inddec)=NBPARPROC(inddec2,inddec)+1	
	endif
      	ENDDO
      	ENDDO
      ENDDO
	print *,NPBMAX
	DO J=1,NPBMAX
	if (NBPARPROC(1,J).ne.0) then
	print *,'Decoupage du probleme ',J
	 DO I=1,NPROCDEC
	 print *,'nb de maille sur le process ',I,':',NBPARPROC(I,J)
	if (NBPARPROC(I,J).eq.0) print *,'PROBLEME AVEC CE DERNIER'
	enddo
	print *,' '
	 else 
	print *,'pas de de maille sur le process ',j
	endif
	enddo
      WRITE(21) INDMAIL
      CLOSE(21)
      CLOSE(22)
      CLOSE(23)
      CLOSE(24)
      CLOSE(25)


      call meshtvdec

  199 FORMAT (/ /,'*********** NIVEAU **********',I3)
  200 FORMAT(77I2)
  100 FORMAT('# AVS model complet noeuds'/,'# test extrait_court',
     1/,'ndim=3',/,'dim1=',I3,/,'dim2=',I3,/,'dim3=',I3,
     2/,'nspace=3',/,'veclen=2',/,'data=integer',/,'field=rectilinear',/,
     2'coord 1 file=model.xi filetype=ascii',/,
     2'coord 2 file=model.yi filetype=ascii',/,
     2'coord 3 file=model.zi filetype=ascii',/,
     3'variable 1 file=model.dec filetype=unformatted',/,
     3'variable 2 file=model.pres filetype=unformatted')
  300 FORMAT('# AVS model complet maille'/,'# test extrait_court',
     1/,'ndim=3',/,'dim1=',I3,/,'dim2=',I3,/,'dim3=',I3,
     2/,'nspace=3',/,'veclen=2',/,'data=integer',/,'field=rectilinear',/,
     2'coord 1 file=model.xm filetype=ascii',/,
     2'coord 2 file=model.ym filetype=ascii',/,
     2'coord 3 file=model.zm filetype=ascii',/,
     3'variable 1 file=model.valp filetype=unformatted',/,
     3'variable 2 file=model.presp filetype=unformatted')
  101 FORMAT(10F12.6)
      
      END
C *********************************************************************
      SUBROUTINE PARALAX(XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,INDMAT)
	implicit none
	real XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX
	integer indmat
      include 'model.h'
      integer I,J,K,IMAX,JMAX,KMAX
	integer IBMIN,JBMIN,IBMAX,JBMAX,KBMIN,KBMAX
      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
	write(14,*) 'PARALAX',XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,INDMAT
#ifdef SALOME_
	return 
#endif
c   on initialise pour eviter des pbs
        kbmin = 1
        kbmax = kmax-1
        jbmin = 1
        jbmax = jmax-1
        ibmin = 1
        ibmax = imax-1
C SELECTION DU PAVE A EXAMINER
      DO I=1,IMAX-1
        IF((XM(I)+XM(I+1))/2.GE.XMIN) THEN
          IBMIN=I
          GO TO 1
        ENDIF
      ENDDO
    1 DO J=1,JMAX-1
        IF((YM(J)+YM(J+1))/2.GE.YMIN) THEN
          JBMIN=J
          GO TO 2
        ENDIF
      ENDDO
    2 DO K=1,KMAX-1
        IF((ZM(K)+ZM(K+1))/2.GE.ZMIN) THEN
          KBMIN=K
          GO TO 3
        ENDIF
      ENDDO
    3 DO I=IMAX-1,1,-1
        IF((XM(I)+XM(I+1))/2.LE.XMAX) THEN
          IBMAX=I
          GO TO 4
        ENDIF
      ENDDO
    4 DO J=JMAX-1,1,-1
        IF((YM(J)+YM(J+1))/2.LE.YMAX) THEN
          JBMAX=J
          GO TO 5
        ENDIF
      ENDDO
    5 DO K=KMAX-1,1,-1
        IF((ZM(K)+ZM(K+1))/2.LE.ZMAX) THEN
          KBMAX=K
          GO TO 6
        ENDIF
      ENDDO
    6 CONTINUE
C AFFECTATION DES INDMAT
      DO I=IBMIN,IBMAX
      DO J=JBMIN,JBMAX
      DO K=KBMIN,KBMAX
         INDMAIL(I,J,K)=INDMAT
      ENDDO
      ENDDO
      ENDDO
      RETURN
      END

C *********************************************************************
      SUBROUTINE CYLAX(AC,BC,R,CMIN,CMAX,IDIR,INDMAT)
	implicit none
	real AC,BC,R,CMIN,CMAX
	integer IDIR,INDMAT
      include 'model.h'
      integer I,J,K,IMAX,JMAX,KMAX
      real xmin,xmax,ymin,ymax,zmin,zmax
	integer IBMIN,JBMIN,IBMAX,JBMAX,KBMIN,KBMAX
       real xc,yc,zc,rc
      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
	write(14,*) 'CYLAX',AC,BC,R,CMIN,CMAX,IDIR,INDMAT
#ifdef SALOME_
	return 
#endif
c   on initialise pour eviter des pbs
        kbmin = 1
        kbmax = kmax-1
        jbmin = 1
        jbmax = jmax-1
        ibmin = 1
        ibmax = imax-1
C DETERMINATION DE XMIN XMAX ETC SELON IDIR
      GO TO (11,12,13,13) IDIR
C CYLINDRE D AXE PARRALLLELE A OX
   11 YMIN=AC-R
      YMAX=AC+R
      ZMIN=BC-R
      ZMAX=BC+R
      XMIN=CMIN
      XMAX=CMAX
      GO TO 14
C CYLINDRE D AXE PARRALLLELE A OY
   12 ZMIN=AC-R
      ZMAX=AC+R
      XMIN=BC-R
      XMAX=BC+R
      YMIN=CMIN
      YMAX=CMAX
      GO TO 14
C CYLINDRE D AXE PARRALLLELE A OZ
   13 XMIN=AC-R
      XMAX=AC+R
      YMIN=BC-R
      YMAX=BC+R
      ZMIN=CMIN
      ZMAX=CMAX
   14 CONTINUE
C SELECTION DU PAVE A EXAMINER
      DO I=1,IMAX-1
        IF((XM(I)+XM(I+1))/2.GE.XMIN) THEN
          IBMIN=I
          GO TO 1
        ENDIF
      ENDDO
    1 DO J=1,JMAX-1
        IF((YM(J)+YM(J+1))/2.GE.YMIN) THEN
          JBMIN=J
          GO TO 2
        ENDIF
      ENDDO
    2 DO K=1,KMAX-1
        IF((ZM(K)+ZM(K+1))/2.GE.ZMIN) THEN
          KBMIN=K
          GO TO 3
        ENDIF
      ENDDO
    3 DO I=IMAX-1,1,-1
        IF((XM(I)+XM(I+1))/2.LE.XMAX) THEN
          IBMAX=I
          GO TO 4
        ENDIF
      ENDDO
    4 DO J=JMAX-1,1,-1
        IF((YM(J)+YM(J+1))/2.LE.YMAX) THEN
          JBMAX=J
          GO TO 5
        ENDIF
      ENDDO
    5 DO K=KMAX-1,1,-1
        IF((ZM(K)+ZM(K+1))/2.LE.ZMAX) THEN
          KBMAX=K
          GO TO 6
        ENDIF
      ENDDO
    6 CONTINUE
C AFFECTATION DES INDMAT
      GO TO (21,22,23,23) IDIR
C AFFECTATION DES INDMAT
   21 DO K=KBMIN,KBMAX
      DO J=JBMIN,JBMAX
         ZC=(ZM(K)+ZM(K+1))/2.
         YC=(YM(J)+YM(J+1))/2.
         RC=((YC-AC)*(YC-AC)
     1      +(ZC-BC)*(ZC-BC))**.5
         IF(RC.LE.R) THEN
           DO I=IBMIN,IBMAX
              INDMAIL(I,J,K)=INDMAT
           ENDDO
         ENDIF
      ENDDO
      ENDDO
      GO TO 24
   22 DO I=IBMIN,IBMAX
      DO K=KBMIN,KBMAX
         XC=(XM(I)+XM(I+1))/2.
         ZC=(ZM(K)+ZM(K+1))/2.
         RC=((ZC-AC)*(ZC-AC)
     1      +(XC-BC)*(XC-BC))**.5
         IF(RC.LE.R) THEN
           DO J=JBMIN,JBMAX
              INDMAIL(I,J,K)=INDMAT
           ENDDO
         ENDIF
      ENDDO
      ENDDO
      GO TO 24
   23 DO I=IBMIN,IBMAX
      DO J=JBMIN,JBMAX
         XC=(XM(I)+XM(I+1))/2.
         YC=(YM(J)+YM(J+1))/2.
         RC=((XC-AC)*(XC-AC)
     1      +(YC-BC)*(YC-BC))**.5
         IF(RC.LE.R) THEN
             DO K=KBMIN,KBMAX
                INDMAIL(I,J,K)=INDMAT
             ENDDO
        ENDIF
      ENDDO
      ENDDO
   24 CONTINUE
      RETURN
      END

C *********************************************************************
#ifdef INUTIL
      SUBROUTINE CYLQU(AC,BC,R,CMIN,CMAX,IDIR,INDMAT)
      include 'model.h'

      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
C CAS DU PIQUAGE RIS
      XMIN=AC-R
      XMAX=AC+R
      YMIN=CMIN*1.732/2.-R*.5
      YMAX=CMAX*1.732/2.+R*.5
      ZMIN=CMIN*.5-R*1.732/2.
      ZMAX=CMAX*.5+R*1.732/2.
      GO TO 234
C DETERMINATION DE XMIN XMAX ETC SELON IDIR
C     GO TO (11,12,13) IDIR
C CYLINDRE D AXE PARRALLLELE A OX
   11 ZMIN=BC-R
      ZMAX=BC+R
      YMIN=AC-R
      YMAX=AC+R
      XMIN=CMIN
      XMAX=CMAX
      GO TO 14
C CYLINDRE D AXE PARRALLLELE A OX
   12 ZMIN=BC-R
      ZMAX=BC+R
      XMIN=AC-R
      XMAX=AC+R
      YMIN=CMIN
      YMAX=CMAX
      GO TO 14
C CYLINDRE D AXE PARRALLLELE A OZ
   13 XMIN=AC-R
      XMAX=AC+R
      YMIN=BC-R
      YMAX=BC+R
      ZMIN=CMIN
      ZMAX=CMAX
   14 CONTINUE
  234 CONTINUE
C SELECTION DU PAVE A EXAMINER
      DO I=1,IMAX-1
        IF((XM(I)+XM(I+1))/2.GE.XMIN) THEN
          IBMIN=I
          GO TO 1
        ENDIF
      ENDDO
    1 DO J=1,JMAX-1
        IF((YM(J)+YM(J+1))/2.GE.YMIN) THEN
          JBMIN=J
          GO TO 2
        ENDIF
      ENDDO
    2 DO K=1,KMAX-1
        IF((ZM(K)+ZM(K+1))/2.GE.ZMIN) THEN
          KBMIN=K
          GO TO 3
        ENDIF
      ENDDO
    3 DO I=IMAX-1,1,-1
        IF((XM(I)+XM(I+1))/2.LE.XMAX) THEN
          IBMAX=I
          GO TO 4
        ENDIF
      ENDDO
    4 DO J=JMAX-1,1,-1
        IF((YM(J)+YM(J+1))/2.LE.YMAX) THEN
          JBMAX=J
          GO TO 5
        ENDIF
      ENDDO
    5 DO K=KMAX-1,1,-1
        IF((ZM(K)+ZM(K+1))/2.LE.ZMAX) THEN
          KBMAX=K
          GO TO 6
        ENDIF
      ENDDO
    6 CONTINUE
C AFFECTATION DES INDMAT
      GO TO (21,22,23) IDIR
C AFFECTATION DES INDMAT
   21 DO K=KBMIN,KBMAX
      DO J=JBMIN,JBMAX
         ZC=(ZM(K)+ZM(K+1))/2.
         YC=(YM(J)+YM(J+1))/2.
         RC=((ZC-AC)*(ZC-AC)
     1      +(YC-BC)*(YC-BC))**.5
         IF(RC.LE.R) THEN
           DO I=IBMIN,IBMAX
              INDMAIL(I,J,K)=INDMAT
           ENDDO
         ENDIF
      ENDDO
      ENDDO
      GO TO 24
   22 DO I=IBMIN,IBMAX
      DO J=JBMIN,JBMAX
      DO K=KBMIN,KBMAX
         XC=(XM(I)+XM(I+1))/2.
         YC=(YM(J)+YM(J+1))/2.
         ZC=(ZM(K)+ZM(K+1))/2.
         XLOC=XC
         ZLOC=ZC*1.732/2.-YC*.5
         YLOC=ZC*.5+YC*1.732/2.
         RC=((XLOC-AC)*(XLOC-AC)
     1      +(ZLOC-BC)*(ZLOC-BC))**.5
         IF(RC.LE.R.AND.YLOC.GE.CMIN.AND.YLOC.LE.CMAX) THEN
              INDMAIL(I,J,K)=INDMAT
         ENDIF
      ENDDO
      ENDDO
      ENDDO
      GO TO 24
   23 DO I=IBMIN,IBMAX
      DO J=JBMIN,JBMAX
         XC=(XM(I)+XM(I+1))/2.
         YC=(YM(J)+YM(J+1))/2.
         RC=((XC-AC)*(XC-AC)
     1      +(YC-BC)*(YC-BC))**.5
C SPECIAL SECTEUR +-30 degres
C        IF(RC.LE.R) THEN
         IF((RC.LE.R).AND.(XC.GE.RC/2))
     1     THEN
C SPECIAL SECTEUR +-30 degres
           DO K=KBMIN,KBMAX
              INDMAIL(I,J,K)=INDMAT
           ENDDO
         ENDIF
      ENDDO
      ENDDO
   24 CONTINUE
      RETURN
      END
#endif
C *********************************************************************
      SUBROUTINE REVOLAX(AC,BC,RMED,RTORMI,RTORMA,    
     1 RTORII,RTORIA, 
     1 TETMIN,TETMAX,HMED,HMIN,HMAX,IDIR,INDMAT)
       implicit none
       real AC,BC,RMED,RTORMI,RTORMA,RTORII,RTORIA, 
     1 TETMIN,TETMAX,HMED,HMIN,HMAX
	integer IDIR,INDMAT
      include 'model.h'
      integer I,J,K,IMAX,JMAX,KMAX
	real xmin,xmax,ymin,ymax,zmin,zmax
	integer IBMIN,JBMIN,IBMAX,JBMAX,KBMIN,KBMAX
	real rtoma
	real xc,yc,zc,rc,costet,sintet,teta,rtore,rtori
	real dist,disti
      real PI
      write(14,*) 'REVOLAX',AC,BC,RMED,RTORMI,RTORMA,    
     1 RTORII,RTORIA, 
     1 TETMIN,TETMAX,HMED,HMIN,HMAX,IDIR,INDMAT
#ifdef SALOME_
	return 
#endif
      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX

c   on initialise pour eviter des pbs
        kbmin = 1
        kbmax = kmax-1
        jbmin = 1
        jbmax = jmax-1
        ibmin = 1
        ibmax = imax-1

      PI=asin(1.d0)*2.
      RTOMA=MAX(RTORMA,RTORMI)
C DETERMINATION DE XMIN XMAX ETC SELON IDIR
      GO TO (11,12,13) IDIR
C CYLINDRE D AXE PARRALLLELE A OX
   11 ZMIN=BC-(RMED+RTOMA)
      ZMAX=BC+(RMED+RTOMA)
      YMIN=AC-(RMED+RTOMA)
      YMAX=AC+(RMED+RTOMA)
      XMIN=HMIN
      XMAX=HMAX
      GO TO 14
C CYLINDRE D AXE PARRALLLELE A OY
   12 ZMIN=AC-(RMED+RTOMA)
      ZMAX=AC+(RMED+RTOMA)
      XMIN=BC-(RMED+RTOMA)
      XMAX=BC+(RMED+RTOMA)
      YMIN=HMIN
      YMAX=HMAX
      GO TO 14
C CYLINDRE D AXE PARRALLLELE A OZ
   13 XMIN=AC-(RMED+RTOMA)
      XMAX=AC+(RMED+RTOMA)
      YMIN=BC-(RMED+RTOMA)
      YMAX=BC+(RMED+RTOMA)
      ZMIN=HMIN
      ZMAX=HMAX
   14 CONTINUE
C SELECTION DU PAVE A EXAMINER
      DO I=1,IMAX-1
        IF((XM(I)+XM(I+1))/2.GE.XMIN) THEN
          IBMIN=I
          GO TO 1
        ENDIF
      ENDDO
    1 DO J=1,JMAX-1
        IF((YM(J)+YM(J+1))/2.GE.YMIN) THEN
          JBMIN=J
          GO TO 2
        ENDIF
      ENDDO
    2 DO K=1,KMAX-1
        IF((ZM(K)+ZM(K+1))/2.GE.ZMIN) THEN
          KBMIN=K
          GO TO 3
        ENDIF
      ENDDO
    3 DO I=IMAX-1,1,-1
        IF((XM(I)+XM(I+1))/2.LE.XMAX) THEN
          IBMAX=I
          GO TO 4
        ENDIF
      ENDDO
    4 DO J=JMAX-1,1,-1
        IF((YM(J)+YM(J+1))/2.LE.YMAX) THEN
          JBMAX=J
          GO TO 5
        ENDIF
      ENDDO
    5 DO K=KMAX-1,1,-1
        IF((ZM(K)+ZM(K+1))/2.LE.ZMAX) THEN
          KBMAX=K
          GO TO 6
        ENDIF
      ENDDO
    6 CONTINUE
      PRINT *,'PAVE',IBMIN,IBMAX,JBMIN,JBMAX,KBMIN,KBMAX
C AFFECTATION DES INDMAT
      GO TO (21,22,23) IDIR
C AFFECTATION DES INDMAT
   21 DO K=KBMIN,KBMAX
      DO J=JBMIN,JBMAX
         ZC=(ZM(K)+ZM(K+1))/2.
         YC=(YM(J)+YM(J+1))/2.
         RC=((YC-AC)*(YC-AC)
     1      +(ZC-BC)*(ZC-BC))**.5
	 COSTET=(YC-AC)/RC
	 SINTET=(ZC-BC)/RC
	   IF(COSTET.GE.0) TETA=ASIN(SINTET)
	   IF(COSTET.LT.0) TETA=PI-ASIN(SINTET)
	 IF(TETMIN.LE.TETA.AND.TETMAX.GE.TETA)  THEN
           RTORE=(RTORMI*(TETMAX-TETA)+RTORMA*(TETA-TETMIN))
     1	   /(TETMAX-TETMIN)
           RTORI=(RTORII*(TETMAX-TETA)+RTORIA*(TETA-TETMIN))
     1	   /(TETMAX-TETMIN)
           DO I=IBMIN,IBMAX
              XC=(XM(I)+XM(I+1))/2.
	      DIST=(RTORE**2.-(XC-HMED)**2.)**.5
              IF(RTORI**2.-(XC-HMED)**2..GE.0.) THEN
	        DISTI=(RTORI**2.-(XC-HMED)**2.)**.5
                                               ELSE 
                DISTI=0.
              ENDIF
	      IF((RMED-DIST).LE.RC.AND.((RMED-DISTI).GE.RC).
     1           OR.(RMED+DIST).GE.RC.AND.(RMED+DISTI.LE.RC))	      
     1        INDMAIL(I,J,K)=INDMAT
           ENDDO
         ENDIF
      ENDDO
      ENDDO
      GO TO 24
   22 DO I=IBMIN,IBMAX
      DO K=KBMIN,KBMAX
         XC=(XM(I)+XM(I+1))/2.
         ZC=(ZM(K)+ZM(K+1))/2.
         RC=((ZC-AC)*(ZC-AC)
     1      +(XC-BC)*(XC-BC))**.5
	 COSTET=(ZC-AC)/RC
	 SINTET=(XC-BC)/RC
	   IF(COSTET.GE.0) TETA=ASIN(SINTET)
	   IF(COSTET.LT.0) TETA=PI-ASIN(SINTET)
	 IF(TETMIN.LE.TETA.AND.TETMAX.GE.TETA)  THEN
           RTORE=(RTORMI*(TETMAX-TETA)+RTORMA*(TETA-TETMIN))
     1	   /(TETMAX-TETMIN)
           RTORI=(RTORII*(TETMAX-TETA)+RTORIA*(TETA-TETMIN))
     1	   /(TETMAX-TETMIN)
           DO J=JBMIN,JBMAX
              YC=(YM(J)+YM(J+1))/2.
	      DIST=(RTORE**2.-(YC-HMED)**2.)**.5
              IF(RTORI**2.-(YC-HMED)**2..GE.0.) THEN
	        DISTI=(RTORI**2.-(YC-HMED)**2.)**.5
                                               ELSE 
                DISTI=0.
              ENDIF
	      IF((RMED-DIST).LE.RC.AND.((RMED-DISTI).GE.RC).
     1           OR.(RMED+DIST).GE.RC.AND.(RMED+DISTI.LE.RC))	      
     1        INDMAIL(I,J,K)=INDMAT
           ENDDO
         ENDIF
      ENDDO
      ENDDO
      GO TO 24
   23 DO I=IBMIN,IBMAX
      DO J=JBMIN,JBMAX
         XC=(XM(I)+XM(I+1))/2.
         YC=(YM(J)+YM(J+1))/2.
         RC=((XC-AC)*(XC-AC)
     1      +(YC-BC)*(YC-BC))**.5
	 COSTET=(XC-AC)/RC
	 SINTET=(YC-BC)/RC
	   IF(COSTET.GE.0) TETA=ASIN(SINTET)
	   IF(COSTET.LT.0) TETA=PI-ASIN(SINTET)
	 IF(TETMIN.LE.TETA.AND.TETMAX.GE.TETA)  THEN
           RTORE=(RTORMI*(TETMAX-TETA)+RTORMA*(TETA-TETMIN))
     1	   /(TETMAX-TETMIN)
           RTORI=(RTORII*(TETMAX-TETA)+RTORIA*(TETA-TETMIN))
     1	   /(TETMAX-TETMIN)
           DO K=KBMIN,KBMAX
              ZC=(ZM(K)+ZM(K+1))/2.
	      DIST=(RTORE**2.-(ZC-HMED)**2.)**.5
              IF(RTORI**2.-(ZC-HMED)**2..GE.0.) THEN
	        DISTI=(RTORI**2.-(ZC-HMED)**2.)**.5
                                               ELSE 
                DISTI=0.
              ENDIF
	      IF((RMED-DIST).LE.RC.AND.((RMED-DISTI).GE.RC).
     1           OR.(RMED+DIST).GE.RC.AND.(RMED+DISTI.LE.RC))	      
     1        INDMAIL(I,J,K)=INDMAT
           ENDDO
        ENDIF
      ENDDO
      ENDDO
   24 CONTINUE
      RETURN
      END
C *********************************************************************
	subroutine revolgen(AC,BC,RMED,RTORMI,RTORMA,    
     1 RTORII,RTORIA, 
     1 TETMIN,TETMAX,HMED,HMIN,HMAX,phi,theta,xo,yo,zo,INDMAT)
       implicit none
       real AC,BC,RMED,RTORMI,RTORMA,RTORII,RTORIA, 
     1 TETMIN,TETMAX,HMED,HMIN,HMAX
	
	real xc,yc,zc,rc,costet,sintet,teta,rtore,rtori
	real dist,disti
	real phi,theta,xo,yo,zo,pi
      integer indmat
      real ri
      real x,y,z,xx,yy,zz
      real cosphi
      real costheta
      integer i,ibmax,ibmin
      integer j,jbmax,jbmin
      integer k,kbmax,kbmin
      real sinphi
      real sintheta
      integer imax,jmax,kmax
      include 'model.h'
	PI=asin(1.d0)*2.
	IMAX=NIMAX
       JMAX=NJMAX
       KMAX=NKMAX
	        cosphi = cos(phi)
        sinphi = sin(phi)
        costheta = cos(theta)
        sintheta = sin(theta)
c	print *,cosphi,sinphi,costheta,sintheta
	
        kbmin = 1
        kbmax = kmax-1
        jbmin = 1
        jbmax = jmax-1
        ibmin = 1
        ibmax = imax-1
        do 1000 k = kbmin,kbmax,1
	zz=(zm(k)+zm(k+1))/2.
          do 1100 j = jbmin,jbmax,1
	  yy=(ym(j)+ym(j+1))/2.
            do 1200 i = ibmin,ibmax,1
	    xx=(xm(i)+xm(i+1))/2.
            call changevarr(Xc,Yc,Zc,xx,yy,zz,xo,yo,zo,cosphi,
     1 sinphi,costheta,sintheta)
            RC=((XC-AC)*(XC-AC)
     1      +(YC-BC)*(YC-BC))**.5
	 COSTET=(XC-AC)/RC
	 SINTET=(YC-BC)/RC
	   IF(COSTET.GE.0) TETA=ASIN(SINTET)
	   IF(COSTET.LT.0) TETA=PI-ASIN(SINTET)
	 IF(TETMIN.LE.TETA.AND.TETMAX.GE.TETA)  THEN
           RTORE=(RTORMI*(TETMAX-TETA)+RTORMA*(TETA-TETMIN))
     1	   /(TETMAX-TETMIN)
           RTORI=(RTORII*(TETMAX-TETA)+RTORIA*(TETA-TETMIN))
     1	   /(TETMAX-TETMIN)
              IF(RTORE**2.-(ZC-HMED)**2..GE.0.) THEN
	        DIST=(RTORE**2.-(ZC-HMED)**2.)**.5
                                               ELSE 
                DIST=0.
              ENDIF
              IF(RTORI**2.-(ZC-HMED)**2..GE.0.) THEN
	        DISTI=(RTORI**2.-(ZC-HMED)**2.)**.5
                                               ELSE 
                DISTI=0.
              ENDIF
	      IF((RMED-DIST).LE.RC.AND.((RMED-DISTI).GE.RC).
     1           OR.(RMED+DIST).GE.RC.AND.(RMED+DISTI.LE.RC))	      
     1        INDMAIL(I,J,K)=INDMAT
              endif
 1200        continue
 1100      continue
 1000    continue
	end
#ifdef INUTIL
      SUBROUTINE RARECE(XMIN,XMAX,YMIN,YMAX,ZMIN,
     1             AC,BC,RHAU,ZMAX,IND)

      include 'model.h'

      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
C SELECTION DU PAVE A EXAMINER
      DO I=1,IMAX-1
        IF((XM(I)+XM(I+1))/2.GE.XMIN) THEN
          IBMIN=I
          GO TO 11
        ENDIF
      ENDDO
   11 DO J=1,JMAX-1
        IF((YM(J)+YM(J+1))/2.GE.YMIN) THEN
          JBMIN=J
          GO TO 12
        ENDIF
      ENDDO
   12 DO K=1,KMAX-1
        IF((ZM(K)+ZM(K+1))/2.GE.ZMIN) THEN
          KBMIN=K
          GO TO 13
        ENDIF
      ENDDO
   13 DO I=IMAX-1,1,-1
        IF((XM(I)+XM(I+1))/2.LE.XMAX) THEN
          IBMAX=I
          GO TO 14
        ENDIF
      ENDDO
   14 DO J=JMAX-1,1,-1
        IF((YM(J)+YM(J+1))/2.LE.YMAX) THEN
          JBMAX=J
          GO TO 15
        ENDIF
      ENDDO
   15 DO K=KMAX-1,1,-1
        IF((ZM(K)+ZM(K+1))/2.LE.ZMAX) THEN
          KBMAX=K
          GO TO 16
        ENDIF
      ENDDO
   16 CONTINUE
C AFFECTATION DES INDMAT
      DO I=IBMIN,IBMAX
      DO J=JBMIN,JBMAX
         XC=(XM(I)+XM(I+1))/2.
         YC=(YM(J)+YM(J+1))/2.
         IF(ABS(XC-AC)/ABS(YC-BC).GE.
     1      ABS(XMAX-XMIN)/ABS(YMAX-YMIN)) THEN
           RBAS=((XMAX-XMIN)*(XMAX-XMIN)*.25+
     1          (YC-BC)*(YC-BC))**.5
                                           ELSE
           RBAS=((YMAX-YMIN)*(YMAX-YMIN)*.25+
     1          (XC-AC)*(XC-AC))**.5
         ENDIF
      DO K=KBMIN,KBMAX
         RZ=((ZMAX-ZM(K))*RBAS+(ZM(K)-ZMIN)*RHAU)/(ZMAX-ZMIN)
         IF((XC-AC)*(XC-AC)+
     1      (YC-BC)*(YC-BC).LE.RZ*RZ)
     1   INDMAIL(I,J,K)=IND
      ENDDO
      ENDDO
      ENDDO
      RETURN
      END
C ********************************************************
      SUBROUTINE PARINC(XMIN,XMAX,YB,YH,ZB,ZH,EPX,IND)

      include 'model.h'

      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
C
      IF(EPX.GE.0) THEN
        YMAX=YB
        YMIN=YH
                   ELSE
        YMIN=YB
        YMAX=YH
      ENDIF
      ZMIN=ZB
      ZMAX=ZH
C SELECTION DU PAVE A EXAMINER
      DO I=1,IMAX-1
        IF((XM(I)+XM(I+1))/2.GE.XMIN) THEN
          IBMIN=I
          GO TO 11
        ENDIF
      ENDDO
   11 DO J=1,JMAX-1
        IF((YM(J)+YM(J+1))/2.GE.YMIN) THEN
          JBMIN=J
          GO TO 12
        ENDIF
      ENDDO
   12 DO K=1,KMAX-1
        IF((ZM(K)+ZM(K+1))/2.GE.ZMIN) THEN
          KBMIN=K
          GO TO 13
        ENDIF
      ENDDO
   13 DO I=IMAX-1,1,-1
        IF((XM(I)+XM(I+1))/2.LE.XMAX) THEN
          IBMAX=I
          GO TO 14
        ENDIF
      ENDDO
   14 DO J=JMAX-1,1,-1
        IF((YM(J)+YM(J+1))/2.LE.YMAX) THEN
          JBMAX=J
          GO TO 15
        ENDIF
      ENDDO
   15 DO K=KMAX-1,1,-1
        IF((ZM(K)+ZM(K+1))/2.LE.ZMAX) THEN
          KBMAX=K
          GO TO 16
        ENDIF
      ENDDO
   16 CONTINUE
C AFFECTATION DES INDMAT
      DO I=IBMIN,IBMAX
      DO K=KBMIN,KBMAX
         ZC=(ZM(K)+ZM(K+1))/2.
         YINT=(YB*(ZH-ZC)+YH*(ZC-ZB))/(ZH-ZB)
         YEXT=YINT+EPX
C
      IF(EPX.GE.0) THEN
        DO J=JBMIN,JBMAX
           YC=(YM(J)+YM(J+1))/2.
           IF(YC.GE.YINT.AND.YC.LE.YEXT) INDMAIL(I,J,K)=IND
        ENDDO
                   ELSE
        DO J=JBMIN,JBMAX
           YC=(YM(J)+YM(J+1))/2.
           IF(YC.LE.YINT.AND.YC.GE.YEXT) INDMAIL(I,J,K)=IND
        ENDDO
      ENDIF
      ENDDO
      ENDDO
      RETURN
      END
C ********************************************************
       SUBROUTINE TRIANG(XMIN,XMAX,YBMIN,YBMAX,YHMIN,YHMAX,
     1           ZB,ZH,EPX,IND)

      include 'model.h'

      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
C
      YMAX=YBMAX
      YMIN=YBMIN
      ZMIN=ZB
      ZMAX=ZH
C SELECTION DU PAVE A EXAMINER
      DO I=1,IMAX-1
        IF((XM(I)+XM(I+1))/2.GE.XMIN) THEN
          IBMIN=I
          GO TO 11
        ENDIF
      ENDDO
   11 DO J=1,JMAX-1
        IF((YM(J)+YM(J+1))/2.GE.YMIN) THEN
          JBMIN=J
          GO TO 12
        ENDIF
      ENDDO
   12 DO K=1,KMAX-1
        IF((ZM(K)+ZM(K+1))/2.GE.ZMIN) THEN
          KBMIN=K
          GO TO 13
        ENDIF
      ENDDO
   13 DO I=IMAX-1,1,-1
        IF((XM(I)+XM(I+1))/2.LE.XMAX) THEN
          IBMAX=I
          GO TO 14
        ENDIF
      ENDDO
   14 DO J=JMAX-1,1,-1
        IF((YM(J)+YM(J+1))/2.LE.YMAX) THEN
          JBMAX=J
          GO TO 15
        ENDIF
      ENDDO
   15 DO K=KMAX-1,1,-1
        IF((ZM(K)+ZM(K+1))/2.LE.ZMAX) THEN
          KBMAX=K
          GO TO 16
        ENDIF
      ENDDO
   16 CONTINUE

C AFFECTATION DES INDMAT
      DO I=IBMIN,IBMAX
      DO K=KBMIN,KBMAX
         ZC=(ZM(K)+ZM(K+1))/2.
         YINT=(YBMIN*(ZH-ZC)+YHMIN*(ZC-ZB))/(ZH-ZB)
         YEXT=(YBMAX*(ZH-ZC)+YHMAX*(ZC-ZB))/(ZH-ZB)
C
        DO J=JBMIN,JBMAX
           YC=(YM(J)+YM(J+1))/2.
           IF(YC.GE.YINT.AND.YC.LE.YEXT) INDMAIL(I,J,K)=IND
        ENDDO
      ENDDO
      ENDDO
      RETURN
      END
C ********************************************************
       SUBROUTINE TRIANX(YMIN,YMAX,XBMIN,XBMAX,XHMIN,XHMAX,
     1           ZB,ZH,EPX,IND)

      include 'model.h'

      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX
C
      XMAX=XBMAX
      XMIN=XBMIN
      ZMIN=ZB
      ZMAX=ZH
C SELECTION DU PAVE A EXAMINER
      DO I=1,IMAX-1
        IF((XM(I)+XM(I+1))/2.GE.XMIN) THEN
          IBMIN=I
          GO TO 11
        ENDIF
      ENDDO
   11 DO J=1,JMAX-1
        IF((YM(J)+YM(J+1))/2.GE.YMIN) THEN
          JBMIN=J
          GO TO 12
        ENDIF
      ENDDO
   12 DO K=1,KMAX-1
        IF((ZM(K)+ZM(K+1))/2.GE.ZMIN) THEN
          KBMIN=K
          GO TO 13
        ENDIF
      ENDDO
   13 DO I=IMAX-1,1,-1
        IF((XM(I)+XM(I+1))/2.LE.XMAX) THEN
          IBMAX=I
          GO TO 14
        ENDIF
      ENDDO
   14 DO J=JMAX-1,1,-1
        IF((YM(J)+YM(J+1))/2.LE.YMAX) THEN
          JBMAX=J
          GO TO 15
        ENDIF
      ENDDO
   15 DO K=KMAX-1,1,-1
        IF((ZM(K)+ZM(K+1))/2.LE.ZMAX) THEN
          KBMAX=K
          GO TO 16
        ENDIF
      ENDDO
   16 CONTINUE

      PRINT *, 'JBMIN,JBMAX,KBMIN,KBMAX,IBMIN,IBMAX'
      PRINT *, JBMIN,JBMAX,KBMIN,KBMAX,IBMIN,IBMAX
C AFFECTATION DES INDMAT
      DO J=JBMIN,JBMAX
      DO K=KBMIN,KBMAX
         ZC=(ZM(K)+ZM(K+1))/2.
         XINT=(XBMIN*(ZH-ZC)+XHMIN*(ZC-ZB))/(ZH-ZB)
         XEXT=(XBMAX*(ZH-ZC)+XHMAX*(ZC-ZB))/(ZH-ZB)
C
        DO I=IBMIN,IBMAX
           XC=(XM(I)+XM(I+1))/2.
           IF(XC.GE.XINT.AND.XC.LE.XEXT) INDMAIL(I,J,K)=IND
        ENDDO
      ENDDO
      ENDDO
      RETURN
      END
C ***********************************************************************************

      SUBROUTINE GEOMAIL (IMAX,JMAX,KMAX,NBSOM,NBMAIL,
     1IMMIN,IMMAX,JMMIN,JMMAX,KMMIN,KMMAX)

      include 'model.h'
      include 'other.h'

      CHARACTER*12 NOMFIC(20)
      PRINT *,' ON MAILLE LE PROBLEME ET SES LIMITES EXPLICITES'
C OUVERTURE DES FICHIERS
        NOMFIC(1)='Maille_Prob'
        OPEN(UNIT=1,FILE=NOMFIC(1),FORM='UNFORMATTED')
        NOMFIC(2)='Coordo_Prob'
        OPEN(UNIT=2,FILE=NOMFIC(2),FORM='UNFORMATTED')
        NOMFIC(3)='Indmail_mai'
        OPEN(UNIT=3,FILE=NOMFIC(3),FORM='UNFORMATTED')
        NOMFIC(4)='Numproc'
        OPEN(UNIT=4,FILE=NOMFIC(4),FORM='FORMATTED')


C INITIALISATIONS DES COMPTEURS
      NBMAIL=0
      NBSOT=0
C   ON BALAYE LE PAVE 1
      DO I=1,IMAX
      DO J=1,JMAX
      DO K=1,KMAX
         INDSOV(I,J,K)=0
         INDFAV(I,J,K)=0
      ENDDO
      ENDDO
      ENDDO
      DO N=1,IMAX+1*JMAX+1*KMAX+1
         NUMSAB(N)=0
      ENDDO

C ON RANGE LES ELEMENTS DANS DES FICHIERS A CONCATENER APRES.
C DANS UN .INP
C
      DO I=IMMIN,IMMAX
      DO J=JMMIN,JMMAX
      DO K=KMMIN,KMMAX
         IF(INDMAIL(I,J,K)/1000.EQ.3)
     1  THEN
           NBMAIL=NBMAIL+1
           NUMPROC=INDMAIL(I,J,K)-3000
           WRITE(3) NUMPROC
           WRITE(4,1003) NUMPROC
 1003 FORMAT(I3)

C NOUVELLES FACES
C FACE OUEST NOUVELLE ?
         IF(INDFAV(I,J,K).NE.1) THEN
           INDFAV(I,J,K)=1
C NOUVEAUX SOMMETS BAS SUD ?
        IF(INDSOV(I,J,K).NE.1) THEN
           NBSOM=NBSOM+1
           INDSOM(I,J,K)=NBSOM-1
           INDSOV(I,J,K)=1
          WRITE(2) XM(I),YM(J),ZM(K)
          NUMSAB(I+J*IMAX+K*IMAX*JMAX)=NBSOM-1
        ENDIF
C NOUVEAUX SOMMETS HAUT SUD ?
        IF(INDSOV(I,J,K+1).NE.1) THEN
           NBSOM=NBSOM+1
           INDSOM(I,J,K+1)=NBSOM-1
           INDSOV(I,J,K+1)=1
          WRITE(2) XM(I),YM(J),ZM(K+1)
          NUMSAB(I+J*IMAX+(K+1)*IMAX*JMAX)=NBSOM-1
        ENDIF
C NOUVEAUX SOMMETS BAS NORD?
        IF(INDSOV(I,J+1,K).NE.1) THEN
           NBSOM=NBSOM+1
           INDSOM(I,J+1,K)=NBSOM-1
           INDSOV(I,J+1,K)=1
          WRITE(2) XM(I),YM(J+1),ZM(K)
          NUMSAB(I+(J+1)*IMAX+K*IMAX*JMAX)=NBSOM-1
        ENDIF
C NOUVEAUX SOMMETS HAUT NORD ?
        IF(INDSOV(I,J+1,K+1).NE.1) THEN
           NBSOM=NBSOM+1
           INDSOM(I,J+1,K+1)=NBSOM-1
           INDSOV(I,J+1,K+1)=1
          WRITE(2) XM(I),YM(J+1),ZM(K+1)
          NUMSAB(I+(J+1)*IMAX+(K+1)*IMAX*JMAX)=NBSOM-1
        ENDIF
C TRAITEMENT DE LA FACE EST
        ENDIF
C FACE EST NOUVELLE ?
         IF(INDFAV(I+1,J,K).NE.1) THEN
           INDFAV(I+1,J,K)=1
C NOUVEAUX SOMMETS BAS SUD ?
        IF(INDSOV(I+1,J,K).NE.1) THEN
           NBSOM=NBSOM+1
           INDSOM(I+1,J,K)=NBSOM-1
           INDSOV(I+1,J,K)=1
          WRITE(2) XM(I+1),YM(J),ZM(K)
          NUMSAB(I+1+J*IMAX+K*IMAX*JMAX)=NBSOM-1
        ENDIF
C NOUVEAUX SOMMETS HAUT SUD ?
        IF(INDSOV(I+1,J,K+1).NE.1) THEN
           NBSOM=NBSOM+1
           INDSOM(I+1,J,K+1)=NBSOM-1
           INDSOV(I+1,J,K+1)=1
          WRITE(2) XM(I+1),YM(J),ZM(K+1)
          NUMSAB(I+1+J*IMAX+(K+1)*IMAX*JMAX)=NBSOM-1
        ENDIF
C NOUVEAUX SOMMETS BAS NORD?
        IF(INDSOV(I+1,J+1,K).NE.1) THEN
           NBSOM=NBSOM+1
           INDSOM(I+1,J+1,K)=NBSOM-1
           INDSOV(I+1,J+1,K)=1
          WRITE(2) XM(I+1),YM(J+1),ZM(K)
          NUMSAB(I+1+(J+1)*IMAX+K*IMAX*JMAX)=NBSOM-1
        ENDIF
C NOUVEAUX SOMMETS HAUT NORD ?
        IF(INDSOV(I+1,J+1,K+1).NE.1) THEN
           NBSOM=NBSOM+1
           INDSOM(I+1,J+1,K+1)=NBSOM-1
           INDSOV(I+1,J+1,K+1)=1
          WRITE(2) XM(I+1),YM(J+1),ZM(K+1)
          NUMSAB(I+1+(J+1)*IMAX+(K+1)*IMAX*JMAX)=NBSOM-1
        ENDIF
      WRITE(1) INDSOM(I,J,K+1)+1,INDSOM(I+1,J,K+1)+1
     1             ,INDSOM(I+1,J+1,K+1)+1,INDSOM(I,J+1,K+1)+1
     1             ,INDSOM(I,J,K)+1,INDSOM(I+1,J,K)+1
     1             ,INDSOM(I+1,J+1,K)+1,INDSOM(I,J+1,K)+1
      ENDIF
      ENDIF
      ENDDO
      ENDDO
      ENDDO
      CLOSE(1)
      CLOSE(2)
      CLOSE(3)
      OPEN(UNIT=99,FILE='Recapitul_Pb1',FORM='FORMATTED')
      WRITE(99,103) NBSOM,NBMAIL
      CLOSE(99)

  103 FORMAT ('NOMBRE DE SOMMETS ',I8,' NOMBRE DE MAILLES ',I8)
 1234 CONTINUE
      RETURN
      END
#endif
c***********************************************************************
      SUBROUTINE MAIL_X_REG(XMIN,XMAX,N,NDEB)
	real XMIN,XMAX
	integer N,NDEB
	include 'model.h'
	CALL MAIL_REG(XMIN,XMAX,N,NDEB,XM,NIMAX)
      end
      SUBROUTINE MAIL_Y_REG(YMIN,YMAX,N,NDEB)
        real YMIN,YMAX
        integer N,NDEB
        include 'model.h'
	CALL MAIL_REG(YMIN,YMAX,N,NDEB,YM,NJMAX)
      end
      SUBROUTINE MAIL_Z_REG(ZMIN,ZMAX,N,NDEB)
	real ZMIN,ZMAX
        integer N,NDEB
	include 'model.h'
	CALL MAIL_REG(ZMIN,ZMAX,N,NDEB,ZM,NKMAX)
      end
	
      SUBROUTINE MAIL_REG(XMIN,XMAX,N,NDEB,X,NMAX)	
	implicit none
	integer n,ndeb,nmax
	real xmin,xmax, X(*)
	real delta
	integer I
	if (ndeb.lt.1) then
	   print *,'ndeb must be greater than 0 ndeb=',ndeb,')'
	   print *,'in maillage_regulie',XMIN,XMAX,N,NDEB,NMAX
	       stop
	endif	
	if ((n+ndeb-1).gt.nmax) then
	    print *,'---------------------------'
	    print *,'ERROR !'
	    print *,'n+ndeb-1 must be lower than ',nmax
	    print *,'n+ndeb-1=',n+ndeb-1 
            print *,'in maillage_regulier',XMIN,XMAX,N,NDEB,NMAX
	    print *,'---------------------------'
	    stop
	endif   
	DELTA=(XMAX-XMIN)/float(N-1)
	print *,'mail_reg',xmin,xmax,n,ndeb,delta
	DO I=1,N
	X(I+NDEB-1)=XMIN+(I-1)*DELTA
	print *,I+NDEB-1,X(I+NDEB-1)
	ENDDO
      END
      
      SUBROUTINE MAIL_X_IRREG(XMIN,XMAX,RAISON,N,NDEB)
	real XMIN,XMAX,RAISON
	integer N,NDEB
	include 'model.h'
	CALL MAIL_IRREG(XMIN,XMAX,RAISON,N,NDEB,XM,NIMAX)
      end
      SUBROUTINE MAIL_Y_IRREG(YMIN,YMAX,RAISON,N,NDEB)
	real YMIN,YMAX,RAISON
	integer N,NDEB
	include 'model.h'
	CALL MAIL_IRREG(YMIN,YMAX,RAISON,N,NDEB,YM,NJMAX)
      end
      SUBROUTINE MAIL_Z_IRREG(ZMIN,ZMAX,RAISON,N,NDEB)
	real ZMIN,ZMAX,RAISON
	integer N,NDEB
	include 'model.h'
	CALL MAIL_IRREG(ZMIN,ZMAX,RAISON,N,NDEB,ZM,NKMAX)
      end
	
      SUBROUTINE MAIL_IRREG(XMIN,XMAX,RAISON,N,NDEB,X,NMAX)	
	implicit none
	integer N,NDEB,NMAX
	real xmin,xmax,raison, X(*)
	real H
	integer i
	if (ndeb.lt.1) then	   
	   print *,'ndeb must be greater than 0 ndeb=',ndeb,')'
	   print *,'in maillage_irregulier',XMIN,XMAX,N,NDEB,NMAX
	   stop
	endif	
	if ((n+ndeb-1).gt.nmax) then
	    print *,'---------------------------'
	    print *,'ERROR !'
	    print *,'n+ndeb-1 must be lower than ',nmax
	    print *,'n+ndeb-1=',n+ndeb-1 
            print *,'in maillage_irregulier',XMIN,XMAX,N,NDEB,NMAX
	    print *,'---------------------------'
	    stop
	endif   
	if (RAISON.EQ.1.) then
	CALL MAIL_REG(XMIN,XMAX,N,NDEB,X,NMAX)
	else
	H=-(-1+RAISON)*(-XMAX+XMIN)/(-1+RAISON**(N-1))
	print *,'mail_irreg',xmin,xmax,raison,n,ndeb
	print *,'h ',h
	DO I=1,N
	X(I+NDEB-1)=XMIN+H*(1.-RAISON**(I-1))/(1.-RAISON)
	print *,I+NDEB-1,X(I+NDEB-1),X(I+NDEB-1)-X(I+NDEB-2)
	ENDDO
	endif
      END
C***********************************************************************
#ifdef INUTIL
      SUBROUTINE ECRIUCD(NBSOM,NBMAIL)
      CHARACTER*12 NOMFIC(20)

C OUVERTURE DES FICHIERS
        NOMFIC(1)='Maille_Prob'
        OPEN(UNIT=1,FILE=NOMFIC(1),FORM='UNFORMATTED')
        NOMFIC(2)='Coordo_Prob'
        OPEN(UNIT=2,FILE=NOMFIC(2),FORM='UNFORMATTED')
        NOMFIC(3)='Indmail_mai'
        OPEN(UNIT=3,FILE=NOMFIC(3),FORM='UNFORMATTED')
        NOMFIC(11)='Model.inp'
        OPEN(UNIT=11,FILE=NOMFIC(11),FORM='FORMATTED')
        NOMFIC(12)='Model.inpr'
        OPEN(UNIT=12,FILE=NOMFIC(12),FORM='FORMATTED')

      PRINT *, 'ECRITURE DU FICHIER UCD SUR',NBMAIL

C ECRITURE DE L ENTETE
      WRITE(11,100) NBSOM,NBMAIL
      WRITE(12,100) NBSOM,NBMAIL
  100 FORMAT('1',/,'data',/,'step1 unique',/,2I8)

C ECRITURE DES NOEUDS
      DO N=1,NBSOM
        READ(2)  XN,YN,ZN
        WRITE(11,200) N,XN,YN,ZN
        IF(N.LE.3) WRITE(12,200) N,XN,YN,ZN
      ENDDO
  200 FORMAT (I8,3F7.3)

C ECRITURE DES MAILLES
      DO N=1,NBMAIL
        READ(1)  N1,N2,N3,N4,N5,N6,N7,N8
        WRITE(11,300)  N,N1,N2,N3,N4,N5,N6,N7,N8
        IF(N.LE.4) WRITE(12,300)  N,N1,N2,N3,N4,N5,N6,N7,N8
      ENDDO
  300 FORMAT (I8,' 1 hex ',8I8)

C ECRITURE DES VALEURS DE MATERIAUX AUX MAILLES
      WRITE(11,400)
      WRITE(12,400)
C UN CHAMP AUX MAILLES
C CHAMP A UNE COMPOSANTE
  400 FORMAT('0 1',/,'1 1',/,' indmat, entier ')
      DO N=1,NBMAIL
        READ(3)  INDMA
        WRITE(11,500)  N,INDMA
        IF(N.LE.4) WRITE(12,500)  N,INDMA
      ENDDO
  500 FORMAT (I8,I8)

      RETURN
      END
#endif
	SUBROUTINE RIEN
	END
	SUBROUTINE FORT
	END

#ifdef ROUTSUPP_EXIST
C	print *,"Inclusion de maillage"
#include "routinesupp"
#endif
	subroutine MESHTV
#ifdef SILOEXIST
	implicit none
	include 'model.h'
	integer IPRES2(NIMAX-1,NJMAX-1,NKMAX-1)
	integer indmail2(NIMAX-1,NJMAX-1,NKMAX-1)
#include "silo.inc"
	integer matnos(7),dims(3),dims2(3)
	integer nmat
	integer i,j,k,ind,ind2,ii,ierr,dbid
c	open(unit=13,file='model.ref',FORM='UNFORMATTED')
c	read(13) ipres
	nmat=7
	print *,'fichier meshtv cree'
	dims(1)=NIMAX
	dims(2)=NJMAX
	dims(3)=NKMAX
	
	dims2(1)=dims(1)-1
	dims2(2)=dims(2)-1
	dims2(3)=dims(3)-1
	do i=1,NIMAX-1
	   do j=1,NJMAX-1
	      do k=1,NKMAX-1
c		 ipres2(i,j,k)=ipres(i,j,k)
		 ipres2(i,j,k)=100
	      enddo
	   enddo
	enddo
	do i=1,NIMAX-1
	   do j=1,NJMAX-1
	      do k=1,NKMAX-1
	  	 indmail2(i,j,k)=indmail(i,j,k)
c		 indmail2(i,j,k)=indmail(i,j,k)-ipres(i,j,k)
c               on se demande si il faut garder la condlim...
		 if (indmail(i,j,k).ge.1000) then
		    ind=1
		    ind=indmail(i,j,k)/1000
		    ind2=50
		    ipres2(i,j,k)=ind
		    if (ind.ge.(nmat-2)) ipres2(i,j,k)=nmat-2
c ajout de test supplementaire
c en effet si on a un pb sur le bord on ne peut pas aller
c voir les cases voisines
		    do ii=-1,1,2
		       if ((k+ii.gt.0).and.(k+ii.lt.NKMAX).and.
     1                (indmail(i,j,k+ii).lt.1000)) ipres2(i,j,k+ii)=ind2
		       if ((j+ii.gt.0).and.(j+ii.lt.NJMAX).and.
     1                (indmail(i,j+ii,k).lt.1000)) ipres2(i,j+ii,k)=ind2
  		       if ((i+ii.gt.0).and.(i+ii.lt.NIMAX).and.
     1	              (indmail(i+ii,j,k).lt.1000)) ipres2(i+ii,j,k)=ind2
		    enddo
		 
		    		    
		 endif
		    
	      enddo
	   enddo
	enddo
	ierr=dbcreate("model.silo",10,0,DB_LOCAL,"model",5,DB_PDB,dbid)
	print *,ierr
	ierr = dbmkoptlist (5, j)
	print *,ierr
	ierr=dbputqm(dbid,"maillage",8,"x",1,"y",1,"z",1,xm,
     1         ym,zm,dims,3,DB_FLOAT,DB_COLLINEAR,j,i)
	matnos(1)=100
	matnos(2)=ind2
	do i=3,nmat
	matnos(i)=i-2
	enddo
	ierr=dbputmat(dbid,"mates",5,"maillage",8,nmat,matnos,
     1     ipres2,dims2,3,DB_F77NULL,DB_F77NULL,DB_F77NULL,
     1     DB_F77NULL,0,DB_FLOAT,j,ierr)

c	PRINT *,'ES',IERR
	ierr=dbputqv1(dbid,"ivar",4,"maillage",8,Indmail2,dims2,3,
     1    DB_F77NULL,0,DB_INT,DB_ZONECENT,j,ierr)
c	print *,ierr
        ierr=dbwrite(dbid, "_meshtvinfo", 11, 
     1   "mesh maillage;pseudocolor ivar", 30, 1, DB_CHAR)
	ierr=dbclose(dbid)
#else
	print *,'pas de fichier meshtv cree'
#endif
	end
	subroutine MESHTV2
#ifdef SILOEXIST
	implicit none
	include 'model.h'
	integer i,j,k,ierr,dbid,dims2(3)
	integer indmail2(NIMAX-1,NJMAX-1,NKMAX-1)
#include "silo.inc"
	dims2(1)=NIMAX-1
	dims2(2)=NJMAX-1
        dims2(3)=NKMAX-1
	print *,'fichier meshtv cree'
	
	do i=1,NIMAX-1
	   do j=1,NJMAX-1
	      do k=1,NKMAX-1
	 indmail2(i,j,k)=indmail(i,j,k)-(indmail(i,j,k)/1000)*1000	    
	      enddo
	   enddo
	enddo
c	ierr=dbopen("model.silo",10,0,DB_LOCAL,"model",5,DB_PDB,dbid)
	ierr=dbopen("model.silo",10,DB_PDB,DB_APPEND,dbid)
	print *,ierr
	ierr = dbmkoptlist (5, j)
	print *,ierr
	
	ierr=dbputqv1(dbid,"irac",4,"maillage",8,Indmail2,dims2,3,
     1    DB_F77NULL,0,DB_INT,DB_ZONECENT,j,ierr)
	print *,ierr
	ierr=dbclose(dbid)
	print *,ierr
#else
	print *,'pas de fichier meshtv cree'
#endif
	end

	subroutine MESHTVDEC
#ifdef SILOEXIST
	implicit none
	include 'model.h'
	integer i,j,k,ierr,dbid,dims2(3)
c	integer indmail2(NIMAX-1,NJMAX-1,NKMAX-1)
#include "silo.inc"
	dims2(1)=NIMAX-1
	dims2(2)=NJMAX-1
        dims2(3)=NKMAX-1
	print *,'fichier meshtv cree'
	
	do i=1,NIMAX-1
	   do j=1,NJMAX-1
	      do k=1,NKMAX-1
c	 indmail2(i,j,k)=indmail(i,j,k)-(indmail(i,j,k)/1000)*1000	    
c	indmail2(i,j,k)=indmail(i,j,k)
	      enddo
	   enddo
	enddo
c	on a mis nprocdec dans indmail(1,1,1)
c 	on remet autre chose pour la visu
c	INDMAIL2(1,1,1)=INDMAIL2(1,1,2)
c	ierr=dbopen("model.silo",10,0,DB_LOCAL,"model",5,DB_PDB,dbid)
	ierr=dbopen("model.silo",10,DB_PDB,DB_APPEND,dbid)
	print *,ierr
	ierr = dbmkoptlist (5, j)
	print *,ierr
	
	ierr=dbputqv1(dbid,"rdec",4,"maillage",8,Indmail,dims2,3,
     1    DB_F77NULL,0,DB_INT,DB_ZONECENT,j,ierr)
	print *,ierr
	ierr=dbclose(dbid)
	print *,ierr
#else
	print *,'pas de fichier meshtv cree'
#endif
	end

	
	subroutine lata

	implicit none
	integer taille

	include 'model.h'
	taille=(NIMAX-1)*(NJMAX-1)*(NKMAX-1)

	
        write(33,1) 'LATA_V2.1'
        write(33,1) 'lata2dx'
        write(33,1) 'TRUST verbosity=0'

        write(33,1) 'Format LITTLE_ENDIAN,INT32,F_INDEXING,',
     1         'C_ORDERING,F_MARKERS_SINGLE,REAL32'
       write(33,1) 'GEOM  dom_IJK type_elem=HEXAEDRE'
       write(33,*) 'CHAMP SOMMETS_IJK_I avs/model.xi',
     1    ' geometrie=dom_IJK',
     1    ' size=',NIMAX,' composantes=1 Format=ascii,f_markers_no'

       write(33,*) 'CHAMP SOMMETS_IJK_J avs/model.yi',
     1      ' geometrie=dom_IJK',
     1     ' size=',NJMAX,' composantes=1 Format=ascii,f_markers_no'
	
       write(33,*) 'CHAMP SOMMETS_IJK_K avs/model.zi',
     1    ' geometrie=dom_IJK',
     1    ' size=',NKMAX,' composantes=1 Format=ascii,f_markers_no'
       write(33,1) 'TEMPS 0'
	
       write(33,*) 'CHAMP INDMAT avs/model.val',
     1   ' geometrie=dom_IJK size=',taille
     1   , ' composantes=1 localisation=ELEM nature=scalar',
#ifdef OLD_GFORTRAN     
     1    ' format=INT32,C_indexing file_offset=4 '
#else
     1    ' format=INT32,C_indexing file_offset=0 '
#endif

 1      format(80a)
	end
	
	subroutine lata_rac

	implicit none
	integer taille

	include 'model.h'
	taille=(NIMAX-1)*(NJMAX-1)*(NKMAX-1)
   
	

       write(33,*) 'CHAMP INDRAC avs/model.rac',
     1   ' geometrie=dom_IJK size=',taille
     1   , ' composantes=1 localisation=ELEM nature=scalar',
#ifdef OLD_GFORTRAN          
     1    ' format=INT32,C_indexing file_offset=4 '
#else
     1    ' format=INT32,C_indexing file_offset=0 '
#endif

 1      format(80a)
	end
      subroutine cylgen(rc,Zomin,Zomax,phi,theta,xo,yo,zo,indmat)
	real rc,Zomin,Zomax,phi,theta,xo,yo,zo
	integer indmat
      call tube(rc,Zomin,Zomax,phi,theta,xo,yo,zo,indmat,0.)
      end
      subroutine tube(rc,Zomin,Zomax,phi,theta,xo,yo,zo,indmat,ri)
      implicit none

      real rc,Zomin,Zomax,phi,theta,xo,yo,zo
      integer indmat
      real ri
      real x,y,z,xx,yy,zz
      real xnx,xny,xnz
      real cosphi
      real costheta
      integer i,ibmax,ibmin
      integer j,jbmax,jbmin
      integer k,kbmax,kbmin
      real rc2
      real ri2
      real sinphi
      real sintheta
      integer imax,jmax,kmax
      
      include 'model.h'
      write (14,*) 'tube',
     1     rc,Zomin,Zomax,phi,theta,xo,yo,zo,indmat,ri
       IMAX=NIMAX
       JMAX=NJMAX
       KMAX=NKMAX

         rc2 = rc**2
        ri2=ri**2
        cosphi = cos(phi)
        sinphi = sin(phi)
        costheta = cos(theta)
        sintheta = sin(theta)
c	print *,cosphi,sinphi,costheta,sintheta
	
        kbmin = 1
        kbmax = kmax-1
        jbmin = 1
        jbmax = jmax-1
        ibmin = 1
        ibmax = imax-1
#ifndef SALOME_
        do 1000 k = kbmin,kbmax,1
	zz=(zm(k)+zm(k+1))/2.
          do 1100 j = jbmin,jbmax,1
	  yy=(ym(j)+ym(j+1))/2.
            do 1200 i = ibmin,ibmax,1
	    xx=(xm(i)+xm(i+1))/2.
            call changevarr(X,Y,Z,xx,yy,zz,xo,yo,zo,cosphi,si
     snphi,costheta,sintheta)
              if ((Zomin .le. Z) .and.( Z .le. Zomax) 
     s .and.(( X**2+Y**2) .le. rc2)
     s .and.(( X**2+Y**2) .ge. ri2) ) then
          indmail(i,j,k)=indmat
              endif
 1200        continue
 1100      continue
 1000    continue
#endif
	call invchangevarr(xnx,xny,xnz,0.,0.,1.,0.,0.,0.,cosphi,si
     snphi,costheta,sintheta)	
	call invchangevarr(X,Y,Z,0.,0.,ZoMIN,xo,yo,zo,cosphi,si
     snphi,costheta,sintheta)
      write(14,*)'tubem',X,Y,Z,xnx,xny,xnz,rc,zomax-zomin,indmat,ri
      end
      subroutine paragen(Xomin,Xomax,Yomin,Yomax,Zomin,
     s   Zomax,indmat,phi,theta,xo,yo,zo)
      implicit none
      real Xomin,Xomax,Yomin,Yomax,Zomin,Zomax
      real phi
      real theta
      real xo,yo,zo
      
      integer indmat
      real x,y,z,xx,yy,zz
     
      real cosphi
      real costheta
      integer i,ibmax,ibmin
      integer j,jbmax,jbmin
      integer k,kbmax,kbmin
      
      integer imax,jmax,kmax
      real sinphi
      real sintheta
      include 'model.h'
	 write (14,*) 'paragen',Xomin,Xomax,Yomin,Yomax,Zomin,
     s   Zomax,indmat,phi,theta,xo,yo,zo
#ifdef SALOME_
	return 
#endif
       IMAX=NIMAX
       JMAX=NJMAX
       KMAX=NKMAX

      
        cosphi = cos(phi)
        sinphi = sin(phi)
        costheta = cos(theta)
        sintheta = sin(theta)
c	print *,cosphi,sinphi,costheta,sintheta
	
        kbmin = 1
        kbmax = kmax-1
        jbmin = 1
        jbmax = jmax-1
        ibmin = 1
        ibmax = imax-1
	if (1.eq.1) 
     s	call minibox(Xomin,Xomax,Yomin,Yomax,Zomin,Zomax,
     s  cosphi, sinphi,costheta,sintheta,
     s  xo,yo,zo,
     s	ibmin,ibmax,jbmin,jbmax,kbmin,kbmax)
        do 1000 k = kbmin,kbmax,1
	zz=(zm(k)+zm(k+1))/2.
          do 1100 j = jbmin,jbmax,1
	  yy=(ym(j)+ym(j+1))/2.
            do 1200 i = ibmin,ibmax,1
	    xx=(xm(i)+xm(i+1))/2.
            call changevarr(X,Y,Z,xx,yy,zz,xo,yo,zo,cosphi,si
     snphi,costheta,sintheta)
              if ((Zomin .le. Z) .and.( Z .le. Zomax) 
     s .and.(Yomin .le. Y) .and.( Y .le. Yomax) 
     s .and.(Xomin .le. X) .and.( X .le. Xomax) ) then
          indmail(i,j,k)=indmat
              endif
 1200        continue
 1100      continue
 1000    continue
      end

      subroutine changevarr(X,Y,Z,xx,yy,zz,xo,yo,zo,cosphi,sinphi,
     s costheta,sintheta)
      implicit none
      real X,Y,Z,xx,yy,zz,xo,yo,zo,cosphi,sinphi
      real costheta,sintheta
    

      real t2
      real t5
      real t7

        t2 = xx-xo
        t5 = yy-yo
        t7 = zz-zo
        X = costheta*cosphi*t2+sintheta*cosphi*t5+sinphi*t7
        Y = -sintheta*t2+costheta*t5
        Z = -costheta*sinphi*t2-sintheta*sinphi*t5+cosphi*t7
	
        return
      end

      subroutine invchangevarr(X,Y,Z,xx,yy,zz,xo,yo,zo,cosphi,sinphi,
     s costheta,sintheta)
      implicit none
      real X,Y,Z,xx,yy,zz,xo,yo,zo,cosphi,sinphi
      real costheta,sintheta
      

  	X=costheta*cosphi*xx-sintheta*yy-costheta*sinphi*zz      
	Y= sintheta*cosphi*xx+costheta*yy-sintheta*sinphi*zz
      	Z = sinphi*xx+cosphi*zz

	X=X+xo
	Y=Y+yo
	Z=Z+zo
        return
      end


	subroutine  minibox(Xomin,Xomax,Yomin,Yomax,Zomin,Zomax,
     s  cosphi, sinphi,costheta,sintheta,
     s  xo,yo,zo,
     s	ibmin,ibmax,jbmin,jbmax,kbmin,kbmax)
	implicit none
	real xo,yo,zo
	real Xomin,Xomax,Yomin,Yomax,Zomin,Zomax
	real Xmin,Xmax,Ymin,Ymax,Zmin,Zmax
	real cosphi, sinphi,costheta,sintheta
	integer ibmin,ibmax,jbmin,jbmax,kbmin,kbmax
	real x(2),y(2),z(2)
	integer ii,jj,kk
	real xx,yy,zz
        include 'model.h'
        integer I,J,K,IMAX,JMAX,KMAX

c        real xx2,yy2,zz2


	Xmin=1E7
	Xmax=-1e7
	Ymin=1E7
	Ymax=-1e7
	Zmin=1E7
	Zmax=-1e7
	X(1)=Xomin
	X(2)=Xomax
	Y(1)=Yomin
	Y(2)=Yomax
	Z(1)=Zomin
	Z(2)=Zomax
	do ii=1,2
	do jj=1,2
	do kk=1,2
	  call invchangevarr(xx,yy,zz,X(ii),Y(jj),Z(kk),xo,yo,zo,
     s cosphi,sinphi,costheta,sintheta)
c	call changevarr(xx2,yy2,zz2,xx,yy,zz,xo,yo,zo,
c     s cosphi,sinphi,costheta,sintheta)
c	if (abs(xx2-X(ii)).gt.1e-5) print *,'pb x',xx2,X(ii)
c	if (abs(yy2-Y(jj)).gt.1e-5) print *,'pb y',yy2,Y(jj)
c	if (abs(zz2-Z(kk)).gt.1e-5) print *,'pb z',zz2,Z(kk)
	
	Xmin=min(Xmin,xx)
	Xmax=max(Xmax,xx)
	Ymin=min(Ymin,yy)
	Ymax=max(Ymax,yy)
	Zmin=min(Zmin,zz)
	Zmax=max(Zmax,zz)
  	enddo
	enddo
	enddo
c	print *,'res',Xmin,Xmax,Ymin,Ymax,Zmin,Zmax
c	xmin=min(xmin,ymin,zmin)
c	xmax=max(xmax,ymax,zmax)
c	ymin=xmin
c	ymax=xmax
c	zmin=xmin
c	zmax=xmax
c	PRINT *,'res2', Xmin,Xmax

      IMAX=NIMAX
      JMAX=NJMAX
      KMAX=NKMAX

	ibmax=0
	jbmax=0
	kbmax=0

C SELECTION DU PAVE A EXAMINER
      DO I=1,IMAX-1
        IF((XM(I)+XM(I+1))/2.GE.XMIN) THEN
          IBMIN=I
          GO TO 1
        ENDIF
      ENDDO
    1 DO J=1,JMAX-1
        IF((YM(J)+YM(J+1))/2.GE.YMIN) THEN
          JBMIN=J
          GO TO 2
        ENDIF
      ENDDO
    2 DO K=1,KMAX-1
        IF((ZM(K)+ZM(K+1))/2.GE.ZMIN) THEN
          KBMIN=K
          GO TO 3
        ENDIF
      ENDDO
    3 DO I=IMAX-1,1,-1
        IF((XM(I)+XM(I+1))/2.LE.XMAX) THEN
          IBMAX=I
          GO TO 4
        ENDIF
      ENDDO
    4 DO J=JMAX-1,1,-1
        IF((YM(J)+YM(J+1))/2.LE.YMAX) THEN
          JBMAX=J
          GO TO 5
        ENDIF
      ENDDO
    5 DO K=KMAX-1,1,-1
        IF((ZM(K)+ZM(K+1))/2.LE.ZMAX) THEN
          KBMAX=K
          GO TO 6
        ENDIF
      ENDDO
    6 CONTINUE
c 	un peu de securite!! au cas ou .. on agrandit la boite
	ibmin=max(1,ibmin-2)
	ibmax=min(ibmax+2,imax-1)
	jbmin=max(1,jbmin-2)
	jbmax=min(jbmax+2,jmax-1)
	kbmin=max(1,kbmin-2)
	kbmax=min(kbmax+2,kmax-1)
c	kbmin = 1
c        kbmax = kmax-1
c        jbmin = 1
c        jbmax = jmax-1
c        ibmin = 1
c        ibmax = imax-1
	print *,'ici',ibmin,ibmax,jbmin,jbmax,kbmin,kbmax
	print  *,xm(kbmin),xm(kbmax),xmin,xmax,xomin,xomax
	print *,cosphi, sinphi,costheta,sintheta,
     s  xo,yo,zo
	print *,zm(kbmin),zm(kbmax),zmin,zmax
c	stop 'in minibox'
	end

        subroutine COUPE2D(pos,idir,ind)
        implicit none
        include 'model.h'

        real pos,xo,x1,yo,y1,zo,z1
        integer idir,ind
        xo=xm(1)
        x1=xm(nx)
        yo=ym(1)
        y1=ym(ny)
        zo=zm(1)
        z1=zm(nz)
        if (idir.eq.1) x1=pos
        if (idir.eq.2) y1=pos
        if (idir.eq.3) z1=pos
        call paralax(xo,x1,yo,y1,zo,z1,ind)
        end

        subroutine COUPEAXI2D(pos,idir,ind)
        implicit none
        real pos
        integer idir,ind
        call coupe2D(pos,idir,ind)
        end


	subroutine verifmaillage
	implicit none
	include 'model.h'
	call verifmaillage_dir(XM,NIMAX)
	call verifmaillage_dir(YM,NJMAX)
	call verifmaillage_dir(ZM,NKMAX)
	end
	subroutine  verifmaillage_dir(x,n)
	implicit none
	real x(*)
	integer n,i

	i=1
	if (x(i).eq.-123456789.) then
	  print *,'MESHING PROBLEM WITH THE MESH:'
     s     ,i,x(i),' not initialized'
	  stop
	endif
	
	do i=2,n
	if (x(i).eq.-123456789.) then
	  print *,'MESHING PROBLEM POUR WITH THE MESH:'
     s     ,i,x(i),' not initialized'
	  stop
	endif
	if (x(i).le.x(i-1)) then
	   print *,'MESHING PROBLEM WITH THE MESH',i,x(i),x(i-1)
	   stop
	endif
	enddo
	end
	subroutine initxmymzm
	implicit none
	 include 'model.h'
	integer i
	do i=1,NIMAX
	xm(i)=-123456789.
	enddo
	do i=1,NJMAX
	ym(i)=-123456789.
	enddo
	do i=1,NKMAX
	zm(i)=-123456789.
	enddo
	end

C routine pour flusher
	subroutine flush_cond
#ifdef FLUSHOK
	call flush(6)
#endif
	end

C------------------------------------------------------------------------------
C
C   routine de creation d ellipsoides
C
C------------------------------------------------------------------------------
	subroutine ellipse(xo,yo,zo,r1,r2,rxymin,rxymax,
     &                     zomin,zomax,iext,indmat)
        implicit none
        real xo,yo,zo,r1,r2
        real zomin,zomax,rxymin,rxymax,rxymin2,rxymax2
        integer indmat
	integer iext
        include 'model.h'      
        integer I,J,K,IMAX,JMAX,KMAX
        
        real xc,yc,zc,rc2,zc2
        real dr1,dr2
        
        integer kbmin,kbmax,jbmin,jbmax,ibmin,ibmax

	write(14,*) 'ellipse',xo,yo,zo,r1,r2,rxymin,rxymax,
     &                        zomin,zomax,iext,indmat
#ifdef SALOME_
	return
#endif
        dr1=r1*r1
        dr2=r2*r2
	rxymin2 = rxymin*rxymin
	rxymax2 = rxymax*rxymax
        IMAX=NIMAX
        JMAX=NJMAX
        KMAX=NKMAX
c   on initialise pour eviter des pbs
        kbmin = 1
        kbmax = kmax-1
        jbmin = 1
        jbmax = jmax-1
        ibmin = 1
        ibmax = imax-1
        
        DO K=KBMIN,KBMAX
          ZC=(ZM(K)+ZM(K+1))/2.
            zc2=(zc-zo)*(zc-zo)
            DO J=JBMIN,JBMAX
              DO I=IBMIN,IBMAX
                YC=(YM(J)+YM(J+1))/2.-yo
                XC=(XM(I)+XM(I+1))/2.-xo
C    GF correction on prend un morceau en Z et non en y !!!
          	if ((zc.ge.zomin).and.(zc.le.zomax)) then
               	 RC2=((XC)*(XC)+(YC)*(YC))
                 if ( (((iext.eq.0).and.((rc2/dr1+zc2/dr2).le.1.)) .or.
     &             ((iext.eq.1).and.((rc2/dr1+zc2/dr2).gt.1.))) .and.
     &             ((rc2.ge.rxymin2).and.(rc2.le.rxymax2)) ) then
	            INDMAIL(I,J,K)=INDMAT
	          endif
		endif
              ENDDO
            ENDDO
        ENDDO
        end

C------------------------------------------------------------------------------
C
C   routine de creation de cones generiques
C
C------------------------------------------------------------------------------
	subroutine conegen(zmin,r0int,r0ext,zmax,
     &                     r1int,r1ext,phi,teta,txo,tyo,tzo,indmat)
        implicit none
        real r0ext,r0int,r1ext,r1int,zmax,zmin,phi,teta,txo,tyo,tzo
        integer indmat
        include 'model.h'      
        integer I,J,K,IMAX,JMAX,KMAX
        
        real xc,yc,zc,x,y,z,rc,rint,rext
        real cosphi,costeta,sinphi,sinteta
        
        integer kbmin,kbmax,jbmin,jbmax,ibmin,ibmax

	write(14,*) 'conegen',zmin,r0int,r0ext,zmax,
     &                        r1int,r1ext,phi,teta,txo,tyo,tzo,indmat
#ifdef SALOME_
	return
#endif

        IMAX=NIMAX
        JMAX=NJMAX
        KMAX=NKMAX
c   on initialise pour eviter des pbs
        kbmin = 1
        kbmax = kmax-1
        jbmin = 1
        jbmax = jmax-1
        ibmin = 1
        ibmax = imax-1
        
        cosphi = cos(phi)
        sinphi = sin(phi)
        costeta = cos(teta)
        sinteta = sin(teta)

        DO K=KBMIN,KBMAX
          zc=(ZM(K)+ZM(K+1))/2.
          DO J=JBMIN,JBMAX
            yc=(YM(J)+YM(J+1))/2.
            DO I=IBMIN,IBMAX
              xc=(XM(I)+XM(I+1))/2.
	      call changevarr(X,Y,Z,xc,yc,zc,txo,tyo,tzo,cosphi,
     &			sinphi,costeta,sinteta)
              if ( (Z.ge.zmin) .and. (Z.le.zmax) ) then
	        rc = x*x+y*y
	        rc = sqrt(rc)
	        rint = (Z-zmin)/(zmax-zmin)*(r1int-r0int) + r0int
	        rext = (Z-zmin)/(zmax-zmin)*(r1ext-r0ext) + r0ext
	        if ( (rc.ge.rint) .and. (rc.le.rext) ) then
                  INDMAIL(I,J,K)=INDMAT
	        endif
              endif
            ENDDO
          ENDDO
        ENDDO
        end

C------------------------------------------------------------------------------
C
C   routine de creation de secteur de tube
C
C------------------------------------------------------------------------------

      subroutine tubesect(rc,Zomin,Zomax,phi,theta,xo,yo,zo,indmat
     1                    ,ri,sect1, sect2)    
      implicit none

      real rc,Zomin,Zomax,phi,theta,xo,yo,zo,sect1,sect2
      integer indmat
      real ri
      real x,y,z,xx,yy,zz
      real xnx,xny,xnz
      real cosphi
      real costheta
      integer i,ibmax,ibmin
      integer j,jbmax,jbmin
      integer k,kbmax,kbmin
      real rc2
      real ri2
      real sinphi
      real sintheta
      real azi,norm2
      integer imax,jmax,kmax
      real mon2pi
      

      include 'model.h'
      write (14,*) 'tube_secteur',
     1     rc,Zomin,Zomax,phi,theta,xo,yo,zo,indmat,ri,sect1, sect2
#ifdef SALOME_
	return 
#endif
       IMAX=NIMAX
       JMAX=NJMAX
       KMAX=NKMAX

        mon2pi = asin(1.d0)*4.
        rc2 = rc**2
        ri2=ri**2
        cosphi = cos(phi)
        sinphi = sin(phi)
        costheta = cos(theta)
        sintheta = sin(theta)
	
        kbmin = 1
        kbmax = kmax-1
        jbmin = 1
        jbmax = jmax-1
        ibmin = 1
        ibmax = imax-1
        do  k = kbmin,kbmax,1
	zz=(zm(k)+zm(k+1))/2.
          do  j = jbmin,jbmax,1
	  yy=(ym(j)+ym(j+1))/2.
            do  i = ibmin,ibmax,1
	    xx=(xm(i)+xm(i+1))/2.
            call changevarr(X,Y,Z,xx,yy,zz,xo,yo,zo,cosphi,si
     snphi,costheta,sintheta)
	    norm2=X**2+Y**2
	    azi=acos(X/sqrt(norm2))
	    if (Y.lt.0) then
	    	azi=mon2pi-azi
            endif
	    if ((Zomin .le. Z) .and.( Z .le. Zomax) 
     s .and.(norm2.le.rc2)
     s .and.(norm2.ge.ri2)
     1 .and.(azi.ge.sect1).and.(azi.le.sect2)) then
          indmail(i,j,k)=indmat
              endif
 	    ENDDO
          ENDDO
        ENDDO
      end
        subroutine debut_macro(toto,pos_x,pos_y,pos_z,indmat)
        character*(*) toto
        real pos_x,pos_y,pos_z
        integer indmat
        write(14,1) toto
C        on ecrit en 2 fois pour garder le format par defaut pour les doubles
        write(14,*)  pos_x,pos_y,pos_z,indmat
    1   format(' debut_macro ',A60)
        end
        subroutine end_macro(toto)
        character*(*) toto
        write(14,1) toto
    1   format(' end_macro ',A60)
        end



