#!/bin/bash
DIR=`dirname $0`
DIR=`(cd $DIR;pwd)`
plugin=$1
if [ -z "$TRUST_ROOT" ]
then
	ROOT=`pwd`/../..
	echo "Not in TRUST environment. Rootdir=$ROOT"
	
	local=$ROOT/bin

else
	ROOT=$TRUST_ROOT
       	echo "TRUST environment found. Rootdir=$ROOT"

	local=$ROOT/exec/VisIt/bin

fi

Build=$TRUST_ROOT/build/Outils/VisIt/plugins/Sondes/build
[ $0 -nt ${Build} ] && rm -rf ${Build} 
if [ ! -d ${Build} ]
then
   echo Creating ${Build} directory
   mkdir -p ${Build}
   cd ${Build}
   echo Creating symlink to source files
   ln -sf $DIR/src/* . 2>/dev/null

   env LD_LIBRARY_PATH=$TRUST_ROOT/exec/python/lib:$LD_LIBRARY_PATH $local/xml2info sonde.xml
   env LD_LIBRARY_PATH=$TRUST_ROOT/exec/python/lib:$LD_LIBRARY_PATH $local/xml2cmake sonde.xml
       
   dlocal=`dirname $local`
   echo $dlocal
   sed -i "s?$HOME/.visit?$dlocal?" CMakeLists.txt
   # Dans VisIt 3.4.1, il faut mettre VISIT_BINARY_DIR sinon plugins pas installes au bon endroit
   PLUGIN_INSTALL_DIR="`grep VISIT_PLUGIN_DIR CMakeLists.txt | sed 's?x86_64/plugins?x86_64?' | sed 's?VISIT_PLUGIN_DIR?VISIT_BINARY_DIR?'`"
   sed -i "s?PROJECT(sonde_database)?PROJECT(sonde_database)\n$PLUGIN_INSTALL_DIR?" CMakeLists.txt
   rm -f CMakeCache*
   if [ "$TRUST_CC_BASE_EXTP" != "" ]
   then
      export OMPI_CXX=$TRUST_CC_BASE_EXTP
      export OMPI_CC=$TRUST_cc_BASE_EXTP
      export MPICH_CXX=$OMPI_CXX
      export MPICH_CC=$OMPI_CC
   fi  
   cmake . -DCMAKE_CXX_COMPILER=$TRUST_CC -DCMAKE_C_COMPILER=$TRUST_cc

   # fin modif makefile
  
else
   cd ${Build}
fi

#######################
# Compilation du plugin
#######################
make || exit -1

cd ../../..
rm -rf plugins
