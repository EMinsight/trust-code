# a executer en sequentiel meme si les fichiers lata ont ete generes en parallele #
dimension 3
lata_to_med plan.lata plan.med
champ_fonc_med champ_plan
Read champ_plan last_time plan.med plan vitesse elem 0.0
lata_to_med plan_in.lata plan_in.med
champ_fonc_med champ_plan_in
Read champ_plan_in last_time plan_in.med plan_in vitesse elem 0.0
lata_to_med plan_qcq.lata plan_qcq.med
champ_fonc_med champ_plan_qcq
Read champ_plan_qcq last_time plan_qcq.med plan_qcq vitesse elem 0.0

lata_to_med surface.lata surface.med
champ_fonc_med champ_surface
Read champ_surface last_time surface.med surface vitesse elem 0.0
lata_to_med surface_out.lata surface_out.med
champ_fonc_med champ_surface_out
Read champ_surface_out last_time surface_out.med surface_out vitesse elem 0.0
lata_to_med surface_qcq.lata surface_qcq.med
champ_fonc_med champ_surface_qcq
Read champ_surface_qcq last_time surface_qcq.med surface_qcq vitesse elem 0.0

integrer_champ_med
{
    champ_med champ_plan
    methode integrale_en_z
    zmin 0.0
    zmax 0.02
    nb_tranche 20
    fichier_sortie test_20
}
integrer_champ_med
{
    champ_med champ_plan
    methode integrale_en_z
    zmin 0.0
    zmax 0.02
    nb_tranche 100
    fichier_sortie test_100
}
integrer_champ_med
{
    champ_med champ_plan
    methode debit_total
    fichier_sortie test_1
}
integrer_champ_med
{
    champ_med champ_plan_in
    methode debit_total
    fichier_sortie test_1b
}
integrer_champ_med
{
    champ_med champ_plan_qcq
    methode debit_total
    fichier_sortie test_1c
}
integrer_champ_med
{
    champ_med champ_surface
    methode debit_total
    fichier_sortie surf_1
}
integrer_champ_med
{
    champ_med champ_surface_out
    methode debit_total
    fichier_sortie surf_1b
}
integrer_champ_med
{
    champ_med champ_surface_qcq
    methode debit_total
    fichier_sortie surf_1c
}


End
