# dimension #
dimension 2

# DOMaine #
DOMaine DOM

# probleme de condution de la chaleur #
Pb_conduction pb

# BEGIN MESH #
Lire_med family_names_from_group_names DOM Mesh_1 Mesh_1.med
# END MESH #

# discretisation VEF #
vefprep1b dis

# time scheme #
scheme_euler_implicit scheme

Read scheme
{
    tinit 0.
    tmax 10.
    dt_min 1e-8
    dt_max 1.
    dt_impr 1.e-3
    dt_sauv 1.e-3
    seuil_statio 1.e-9
    facsec 1000 
    facsec_max 5000
    max_iter_implicite 50
    Solveur Implicite
    {
      Solveur petsc cholesky { quiet }
    }
}

# physics properties of medium  #
solide sol
read sol
{
    rho champ_uniforme 1 1.0
    # lambda champ_uniforme 1 1. #
    lambda champ_fonc_med last_time conduc2d_aniso.med Mesh_1 CONDUCTIVITY_ELEM_dom elem 0 
    Cp champ_uniforme 1 1.0
}

# associate the problem with the geometry, the time scheme and the physic properties #
associate pb DOM
associate pb scheme
associate pb sol

# meshing the geometry with the given discretisation method #
discretize pb dis

# definition of the problem #
read pb
{
	# Resolution div (-grad u) = 0 donc sans source, sans coefficient, steady state #
	conduction
	{
		diffusion { anisotrope }
		initial_conditions {
			temperature champ_uniforme 1 0.
		}
		boundary_conditions {
			Left paroi_temperature_imposee champ_front_uniforme 1 0 
			Right paroi_temperature_imposee champ_front_uniforme 1 1.
			Down paroi_temperature_imposee champ_front_fonc_xyz 1 (20./11.*x*(x[0.5)+(9./11.+x*2./11.)*(x>0.5))
			Up paroi_temperature_imposee champ_front_fonc_xyz 1 (20./11.*x*(x[0.5)+(9./11.+x*2./11.)*(x>0.5))
		}
	}

	# post traitement  #
	post_processing
	{

		Definition_champs
		{

		solution Transformation {
					methode formule expression 1 (20./11.*x*(x[0.5)+(9./11.+x*2./11.)*(x>0.5))
					localisation som
					}
		solution_elem Transformation {
					methode formule expression 1 (20./11.*x*(x[0.5)+(9./11.+x*2./11.)*(x>0.5))
					localisation elem
					}

		error transformation  { 
					methode formule expression 1 abs(solution-temperature_physique)/(solution+0.00001)
					sources_reference { solution , temperature_physique }
					localisation som 
					      }

		error_elem transformation  { 
					methode formule expression 1 abs(solution_elem-temperature_physique)/(solution_elem+0.0001) 
					sources_reference {  solution_elem , temperature_physique }
					localisation elem 
					   }

		}

		format lata 
		fields dt_post .1
		{
			temperature elem
			temperature som 
			diffusivite_thermique elem
			diffusivite_thermique som 
			solution
			solution_elem
			error
			error_elem
		}
	}
}

# solve the problem #
solve pb

end
