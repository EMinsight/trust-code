file(GLOB srcs [A-Z|a-z]*.cpp [A-Z|a-z]*.c [A-Z|a-z]*.f)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}  ${TRUST_ROOT}/include/backward  ${TRUST_ROOT}/src/Kernel/Champs  ${TRUST_ROOT}/src/Kernel/Champs/Champs_Don  ${TRUST_ROOT}/src/Kernel/Champs_dis  ${TRUST_ROOT}/src/Kernel/Cond_Lim  ${TRUST_ROOT}/src/Kernel/Framework  ${TRUST_ROOT}/src/Kernel/Geometrie  ${TRUST_ROOT}/src/Kernel/Math  ${TRUST_ROOT}/src/Kernel/Utilitaires  ${TRUST_ROOT}/src/Kernel/VF/Zones  ${TRUST_ROOT}/src/VDF/Champs  ${TRUST_ROOT}/src/VDF/Zones  ${TRUST_ROOT}/src/VDF/Operateurs/Eval_Divers)
add_library(obj_evalvdf_conv OBJECT  ${srcs} )
set(listlibs ${listlibs} evalvdf_conv PARENT_SCOPE    )
add_custom_target(check_sources_evalvdf_conv   COMMAND check_sources.sh ${CMAKE_CURRENT_SOURCE_DIR} ) #COMMENT  "checking code validity evalvdf_conv" )
add_DEPENDENCIES(obj_evalvdf_conv check_sources_evalvdf_conv)
if(COMPIL_DYN)
  add_library(evalvdf_conv SHARED   $<TARGET_OBJECTS:obj_evalvdf_conv> )
  install(TARGETS evalvdf_conv  DESTINATION lib)
endif(COMPIL_DYN)
