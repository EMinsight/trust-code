
CMAKE_MINIMUM_REQUIRED(VERSION 2.4.7 FATAL_ERROR)
    
project(lata2dx)
add_definitions(-fPIC)

SET(CMAKE_INSTALL_MESSAGE LAZY)

set (loadercpp off)
OPTION(loaderpython "build swig of lataloer" OFF)
set (MED_COUPLING_PYTHON $ENV{MED_COUPLING_PYTHON})

if ("${MED_COUPLING_PYTHON}"  STREQUAL "ON" )
   set (loaderpython on)
endif ()

if ("${MED_COUPLING_ROOT}"  STREQUAL "" )
   set (MED_COUPLING_ROOT_ENV $ENV{MED_COUPLING_ROOT})
   if (NOT "${MED_COUPLING_ROOT_ENV}"  STREQUAL "" )
   set (paramedmem ${MED_COUPLING_ROOT_ENV}) 
   set (loadercpp on)
   endif()
else()
   set (paramedmem ${MED_COUPLING_ROOT}) 
   set (loadercpp on)
endif ()


if (loadercpp)
   add_definitions(-DWITH_MEDLOADER)
   find_library(libz z)
   if (${libz} STREQUAL "libz-NOTFOUND")
     set(libz "")
   endif()
   find_library(libdl dl)
   if (${libdl} STREQUAL "libdl-NOTFOUND")
     set(libdl "")
   endif()
 
   FOREACH (liba medloader medcouplingremapper medcoupling interpkernel med medC hdf5)
        set (staticlib lib${liba}.a )
        message("searching ${liba} in ${paramedmem}/lib/ $ENV{TRUST_MED_ROOT}/lib  ${MED_ROOT_DIR}/lib")
        find_library( lib${liba} NAMES ${staticlib} ${liba} PATHS  ${paramedmem}/lib/ $ENV{TRUST_MED_ROOT}/lib  ${MED_ROOT_DIR}/lib NO_DEFAULT_PATH  )
	if (${lib${liba}} STREQUAL lib${liba}-NOTFOUND)
	   message("${liba} librairie systeme ?")
	   find_library( lib${liba} NAMES ${liba} PATHS ${paramedmem}/lib/ $ENV{TRUST_MED_ROOT}/lib  ${MED_ROOT_DIR}/lib NO_DEFAULT_PATH )	
 	endif(${lib${liba}} STREQUAL lib${liba}-NOTFOUND)	    
	set (ajout ${ajout} ${lib${liba}})
   endforeach(liba)
   set (ajout  ${ajout}  ${libz} ${libdl})
   include_directories(${paramedmem}/include ${paramedmem}/include/salome )
   include_directories($ENV{TRUST_MED_ROOT}/include  ${MED_ROOT_DIR}/include)
   message ('ok')
endif(loadercpp)

set(listdir commun_triou triou_compat)
set(lib lata)
FOREACH(dir ${listdir})
 file(GLOB srcs ${dir}/*.cpp  )
 set(Monosrc ${Monosrc} ${srcs} )
 include_directories(${dir})
ENDFOREACH(dir)

add_library(${lib} STATIC ${Monosrc})

set(essai lata2dx)
add_executable (${essai} lata2dx.cpp lata2dx.h)
target_link_libraries(${essai} ${lib} )
target_link_libraries(${essai} ${ajout} )

install(TARGETS ${essai} DESTINATION bin)


set(essai compare_lata)
add_executable (${essai} compare_lata.cpp )
target_link_libraries(${essai} ${lib} ${ajout})
install(TARGETS ${essai} DESTINATION bin)

#install(TARGETS ${lib} DESTINATION lib)

if (loadercpp)
  set(essai LataLoader)
  add_library(${essai} SHARED LataLoader.cpp LataLoader.h)
  include_directories(.)
  target_link_libraries(${essai} ${lib}  ${ajout} )
  install(TARGETS ${essai} DESTINATION lib)

  set(essai2 test_LataLoader)
  add_executable (${essai2} test_LataLoader.cpp )
  install(TARGETS ${essai2} DESTINATION bin)
  message("la ${paramedmem}")
  target_link_libraries(${essai2} ${essai})
  target_link_libraries(${essai2} ${ajout} )


  # swig

  if (loaderpython)
    FIND_PACKAGE(PythonInterp)
    FIND_PACKAGE(PythonLibs)
    FIND_PACKAGE(SWIG REQUIRED)
    INCLUDE(${SWIG_USE_FILE})
    SET_SOURCE_FILES_PROPERTIES(LataLoader.i PROPERTIES CPLUSPLUS ON)
    SET_SOURCE_FILES_PROPERTIES(LataLoader.i PROPERTIES SWIG_FLAGS "-shadow")
    SWIG_ADD_MODULE(LataLoader python LataLoader.i)
    include_directories(${PYTHON_INCLUDE_DIRS})
    SWIG_LINK_LIBRARIES(LataLoader ${PYTHON_LIBRARIES} ${essai})
    install(TARGETS _LataLoader  DESTINATION lib)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/LataLoader.py   DESTINATION lib)
    install(FILES Lata_to_med.py   DESTINATION lib)
    install(FILES Lata_to_case.py   DESTINATION lib)
  else()
    message ("LataLoader.py not compiled, env var MED_COUPLING_PYTHON not set, and not -Dloaderpython=ON ?")
  endif()
  configure_file(env.sh.in env.sh @ONLY)

  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/env.sh DESTINATION . )
else()
  message ("LataLoader not compiled, MED_COUPLING_ROOT not set ?")
endif(loadercpp)
