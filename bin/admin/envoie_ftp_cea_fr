#!/bin/bash
#
echo "
<HTML>
<HEAD>
   <META NAME="ROBOTS" CONTENT=\"NOINDEX, NOFOLLOW\">
   <META NAME="ROBOTS" CONTENT=\"NOARCHIVE\">
   <META HTTP-EQUIV=Content-Type CONTENT=text/html; charset=iso-8859-1>
   <META NAME=GENERATOR CONTENT=Mozilla/4.05 [en] (X11; I; Linux 2.0.33 i586) [Netscape]>
   <TITLE>TRUST Products Archive</TITLE>
</HEAD>
<BODY BGCOLOR=#FFFFFF>
<IMG SRC=../animation.gif HEIGHT=101 WIDTH=501>
<BR>" > /tmp/index.html
[ ${#Version} = 0 ] && echo "What version?" && exit
v=${Version#Version}
version_arch=TRUST_$v".tgz"
PORTAGE=$WORKDIR/PORTAGE_$v
GRAVAGE=$WORKDIR/A_GRAVER_CD_TRUST

cd $TRUST_ENV
# Teste la connection :
. connect_ftp

#########################################################################
# Liste les architectures existantes et cree la version si compilation OK 
#########################################################################

# Teste l'existence du repertoire sinon cree :
[ "$livraison" = 1 ] && mkdir_ftp $PUBLIC/$Version
mkdir_ftp $SECRET/exec
mkdir_ftp $SECRET/doc

# On envoie la RELEASE_NOTES pour futures updates :
[ "$livraison" = 1 ] && cp_ftp $TRUST_ROOT/RELEASE_NOTES $PUBLIC/exec

# On envoie la couverture de tests:
#echo " "
#echo "Send tests coverage at `date` ..."
#mkdir_ftp $SECRET/doc/Coverage
#cd $TRUST_ROOT/doc/Coverage
#cp_ftp *.html $SECRET/doc/Coverage
#mkdir_ftp $SECRET/doc/Coverage/html
#cp_ftp html/*.html $SECRET/doc/Coverage/html
#mkdir_ftp $SECRET/doc/Coverage/html/cpp.gcov
#cp_ftp html/cpp.gcov/*.gcov $SECRET/doc/Coverage/html/cpp.gcov

# On envoie les pdfs
echo " "
echo "Send documentation at `date` ..."
cd $TRUST_ROOT/doc/TRUST
cp_ftp *.pdf $SECRET/doc

##########################################################################
# Copie de la doc de /homelinux vers le repertoire de gravage si livraison
##########################################################################
if [ "$livraison" = 1 ]
then
   # README_INSTALL
   rm -f $GRAVAGE/README_INSTALL
   cp $TRUST_ROOT/bin/README_INSTALL $GRAVAGE/.
   #######################
   # Copie sur le site :
   # Si version officielle
   #######################
   cp_ftp $GRAVAGE/$version_arch $PUBLIC/$Version	 
else
   ###############################
   # Version beta alors on renomme
   ###############################
   v=${v%_beta}_beta
   vbeta=$v"_build_"$DATE
   cd $GRAVAGE
   [ "$accord_admin" = 1 ] && v=${v%_beta} # Version demandee mais non sortie
   for file in `ls TRUST_$v.*tgz 2>/dev/null`
   do
      what=${file%.tgz}
      what=${what#TRUST_$v}
      mv $file TRUST_$vbeta$what".tgz"
   done
   cd -
fi
rm -r -f $doc_tmp

echo " "
echo "Send binary at `date` ..."
liste_arch=`\ls $PORTAGE`
for arch in $liste_arch
do
   ####################################################
   # Copie du binaire sur le site pour futurs updates :
   ####################################################
   mkdir_ftp $SECRET/exec/$arch
   exec=`cd $PORTAGE/$arch/TRUST/exec;\ls TRUST_mpi* 2>/dev/null`
   if [ ${#exec} != 0 ]
   then
      # Pour les versions beta le nom differe et on fait le menage
      name_binary=$TRUST_TMP/$exec"_$v" 
      if [ "$livraison" != 1 ]
      then         
         if [ "$accord_admin" = 0 ]
	 then
            name_binary=$TRUST_TMP/$exec
	 else
	    # Tout n'a pas marche on remet beta
	    name_binary=$TRUST_TMP/$exec"_"$v"_beta_build_"$DATE
	 fi
      fi
      # On ne fait plus le nettoyage car tous les 7 jours c'est efface sur $SECRET
      #for beta_file in `ls_ftp $SECRET/exec/$arch/*beta*.gz | awk '{print $NF}'`
      #do
      #   rm_ftp $SECRET/exec/$arch/$beta_file
      #done
      cp $PORTAGE/$arch/TRUST/exec/$exec $name_binary
      gzip -f $name_binary
      cp_ftp $name_binary".gz" $SECRET/exec/$arch
      rm -f $name_binary".gz"    
      echo "<B>$arch</B><BR>" >> /tmp/index.html
      ls_ftp $SECRET/exec/$arch | $TRUST_Awk -v arch=$arch '{gsub($9,"<A HREF="arch"/"$NF">"$NF"</A>",$0);print $0"<BR>"}'>> /tmp/index.html
   fi
done

cat $TRUST_ROOT/RELEASE_NOTES | $TRUST_Awk 'BEGIN {print "<UL>"} /Release notes/ {print "</UL><BR><B>"$0"</B><UL>"} !/Release notes/ && !/---/ {gsub($1,"<LI>"$1,$0);print $0"</LI>"}' >> $html/tmp/index.html

cp_ftp /tmp/index.html $SECRET/exec

#################################
# Copie sur une machine de Saclay
#################################
depot=/data/tmplgls/triou
for machine in `liste_machines "\-rsync"`
do
   cible=$machine:$depot/.
   ssh_ $machine -n 'ls $depot 1>/dev/null 2>&1'
   echo " "
   if [ $? = 0 ]
   then
      echo "Start synchronization of $GRAVAGE with $cible at `date '+%H:%M:%S'`" 
      rsync -v -L --rsh=ssh --archive --delete --ignore-errors --timeout=100 --compress $GRAVAGE $cible
      echo "End synchronization of $GRAVAGE with $cible at `date '+%H:%M:%S'`" 
   else
      echo " KO Machine $cible not accessible for synchronization."
   fi
   echo " "
done

##################################################
# Copie des fichiers issus de recupere_TRUST_arch 
##################################################
REP_NUIT=/data/tmplgls/triou/Historique/NUIT
if [ -d $REP_NUIT ]
then
   echo "Send night reports at `date` ..."
   cd $REP_NUIT
   rmdir_ftp $SECRET/NUIT
   mkdir_ftp $SECRET/NUIT
   cp_ftp NUIT.html $SECRET/NUIT
   cp_ftp CR_* $SECRET/NUIT
   cp_ftp PERF_* $SECRET/NUIT
   cp_ftp MAKE_* $SECRET/NUIT
   cp_ftp compile_* $SECRET/NUIT
   cd $TRUST_ROOT/exec
   cp_ftp .tests* $SECRET/NUIT
   sleep 1
   cd $TRUST_ROOT/doc/TRUST/exercices/equation_convection_diffusion
   cp_ftp nuit_*.html $SECRET/NUIT
   cp_ftp *_%_*.log $SECRET/NUIT
   sleep 1
   cd $TRUST_ROOT/Outils/ICoCo/ICoCo_src
   cp_ftp nuit_*.html $SECRET/NUIT
   cp_ftp *_%_*.log $SECRET/NUIT
   sleep 1
   #cd $TRUST_ROOT/bin/baltik/templates/basic
   cd $TRUST_ROOT/../Composants/Test_Baltik
   cp_ftp nuit_*.html $SECRET/NUIT
   cp_ftp *_%_*.log $SECRET/NUIT
   sleep 1
   cd $TRUST_ROOT/../Composants/MPCube
   cp_ftp nuit_*.html $SECRET/NUIT
   cp_ftp *_%_*.log $SECRET/NUIT
   sleep 1
   cd $TRUST_ROOT/../Composants/TrioCFD
   cp_ftp nuit_*.html $SECRET/NUIT
   cp_ftp *_%_*.log $SECRET/NUIT
   sleep 1
   cd $TRUST_ROOT/../Composants/ModeleCoeur
   cp_ftp nuit_*.html $SECRET/NUIT
   cp_ftp *_%_*.log $SECRET/NUIT
fi
cd $TRUST_ROOT

