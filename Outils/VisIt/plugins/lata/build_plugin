#!/bin/bash
prepsrc=0
# On initialise l'environnement
source $TRUST_ROOT/env_TRUST.sh 1>/dev/null 2>&1
LATASRC=Outils/lata2dx/lata2dx
local=$TRUST_ROOT/exec/VisIt/bin
DIR=`dirname $0`
DIR=`(cd $DIR;pwd)`
plugin=lata

# Le plugin depuis le Kernel que si la version de VisIt a ete compilee
#[ "`ls $TRUST_ROOT/exec/VisIt/current/*/bin/engine_par 2>/dev/null`" = "" ] && echo "Sorry, can't update a plugin of a none built VisIt version." && exit 0 
[ "$TRUST_DOWNLOAD_VISIT" = 1 ] && echo "Sorry, can't update a plugin of a none built VisIt version." && exit 0

plugin_visit=`ls -rt $TRUST_ROOT/exec/VisIt/current/*/plugins/databases/*$plugin"Data"*.so 2>/dev/null | head -1`
plugin_kernel=`ls -rt build/CMakeFiles/*/*.o $TRUST_ROOT/$LATASRC/Dcommun_triou/*  $TRUST_ROOT/$LATASRC/Dtriou_compat/*  2>/dev/null | tail -1`
# ls -l  $plugin_kernel $plugin_visit

if [ "$plugin_kernel" != "" ] && [ "$plugin_visit" != "" ] && [ "$plugin_kernel" -nt "$plugin_visit" ]
then
   echo "$plugin plugin is up to date under VisIt Not sure ....."
#   exit 0
fi

Build=build
Build=$TRUST_ROOT/build/Outils/VisIt/plugins/lata/build
if [ $0 -nt ${Build} ]
then
    echo "removing ${Build}"
    rm -r -f ${Build}
    #exit -1
fi
if [ ! -d ${Build} ]
    then
    mkdir -p ${Build}
    cd ${Build}
    ln -sf $DIR/src/* . 2>/dev/null
    for i in `cd $TRUST_ROOT/$LATASRC;ls commun_triou/*.cpp triou_compat/*.cpp 2>/dev/null`
      do
      ln -sf $TRUST_ROOT/$LATASRC/$i `basename $i .cpp`.C
    done
    for i in `cd $TRUST_ROOT/$LATASRC;ls commun_triou/*.h triou_compat/*.h 2>/dev/null`
      do
      ln -sf $TRUST_ROOT/$LATASRC/$i `basename $i`
    done


      echo "# Compiling $plugin plugin..."
# Regroupement des sources du plugin depuis le Kernel:
MED="-with_med"
[ ! -f $TRUST_MED_ROOT/lib/libmed.a ] || [ ! -f $TRUST_MEDCOUPLING_ROOT/lib/libmedloader.a ] && MED=""
$DIR/src/generate_lata_xml.sh $TRUST_ROOT/$LATASRC $1 $MED
   
   $local/xml2info lata.xml

   if [ $prepsrc -eq 1 ] 
   then
       $local/xml2cmake lata.xml -dv
       echo "end of preparation, makefile not modified" && exit 0
   fi
   $local/xml2cmake  lata.xml
   dlocal=`dirname $local`
   echo $dlocal
   sed "s?$HOME/.visit/2.?$dlocal/2.?;s?$HOME/.visit?$dlocal/current?" CMakeLists.txt > p
   # tkdiff  CMakeLists.txt p
   mv p CMakeLists.txt
  # rm -f CMakeCache*
   $TRUST_ROOT/exec/python/bin/cmake . -DCMAKE_CXX_COMPILER=$TRUST_CC  -DCMAKE_C_COMPILER=$TRUST_cc -DCMAKE_CXX_STANDARD=11
   [ ! -f Makefile ] && echo "Echec du construction du Makefile par xml2makefile dans ${Build}_plugin" && exit -1

   cd ..
    
fi
cd ${Build}

#######################
   # Compilation du plugin
   # ######################
$TRUST_MAKE    
echo
   # Inutile d'essayer rajouter dans le package les librairies car visit-install les efface a l'installation

echo "$plugin plugin is up to date under VisIt."
