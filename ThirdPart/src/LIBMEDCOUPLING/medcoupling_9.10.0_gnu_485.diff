diff -u Interpolation2D3D.txx Interpolation2D3D.txx
--- Interpolation2D3D.txx	2022-11-22 12:19:01.000000000 +0100
+++ Interpolation2D3D.txx	2023-03-21 12:54:45.822888302 +0100
@@ -99,7 +99,8 @@
 
     // create BBTree structure
     // [ABN] Adjust 2D bounding box (those might be flat in the cases where the 2D surf are perfectly aligned with the axis)
-    BBTreeStandAlone<3,ConnType> tree( BuildBBTreeWithAdjustment(srcMesh,[this,&intersector](double *bbox, typename MyMeshType::MyConnType sz){ this->performAdjustmentOfBB(intersector.get(),bbox,sz); }) );
+    std::function<void(double *,typename MyMeshType::MyConnType)> lambda = [this,&intersector](double *bbox, typename MyMeshType::MyConnType sz){ this->performAdjustmentOfBB(intersector.get(),bbox,sz); };
+    BBTreeStandAlone<3,ConnType> tree( BuildBBTreeWithAdjustment(srcMesh, lambda) );
 
     // for each target element, get source elements with which to calculate intersection
     // - calculate intersection by calling intersectCells
diff -u Interpolation3D1D.txx Interpolation3D1D.txx
--- Interpolation3D1D.txx	2022-11-22 12:19:01.000000000 +0100
+++ Interpolation3D1D.txx	2023-03-21 12:54:45.822888302 +0100
@@ -68,7 +68,8 @@
     // create empty maps for all source elements
     result.resize(intersector->getNumberOfRowsOfResMatrix());
 
-    BBTreeStandAlone<3,ConnType> tree( BuildBBTreeWithAdjustment(srcMesh,[this](double *bbox, typename MyMeshType::MyConnType sz){ this->adjustBoundingBoxes(bbox,sz); }) );
+    std::function<void(double *,typename MyMeshType::MyConnType)> lambda = [this](double *bbox, typename MyMeshType::MyConnType sz){ this->adjustBoundingBoxes(bbox,sz); };
+    BBTreeStandAlone<3,ConnType> tree( BuildBBTreeWithAdjustment(srcMesh,lambda) );
 
     // for each target element, get source elements with which to calculate intersection
     // - calculate intersection by calling intersectCells
diff -u InterpolationHelper.txx InterpolationHelper.txx
--- InterpolationHelper.txx	2022-11-22 12:19:01.000000000 +0100
+++ InterpolationHelper.txx	2023-03-21 12:54:45.822888302 +0100
@@ -30,12 +30,6 @@
 namespace INTERP_KERNEL
 {
   template<class MyMeshType>
-  BBTreeStandAlone<3,typename MyMeshType::MyConnType> BuildBBTree(const MyMeshType& srcMesh)
-  {
-    return BuildBBTreeWithAdjustment(srcMesh,[](double *,typename MyMeshType::MyConnType){});
-  }
-  
-  template<class MyMeshType>
   BBTreeStandAlone<3,typename MyMeshType::MyConnType> BuildBBTreeWithAdjustment(const MyMeshType& srcMesh, std::function<void(double *,typename MyMeshType::MyConnType)> bboxAdjuster)
   {
     using ConnType = typename MyMeshType::MyConnType;
@@ -55,4 +49,11 @@
     bboxAdjuster(bboxes.get(),nbElts);
     return BBTreeStandAlone<3,ConnType>(std::move(bboxes),numSrcElems);
   }
+
+  template<class MyMeshType>
+  BBTreeStandAlone<3,typename MyMeshType::MyConnType> BuildBBTree(const MyMeshType& srcMesh)
+  {
+    std::function<void(double *,typename MyMeshType::MyConnType)> bboxAdjuster;
+    return BuildBBTreeWithAdjustment(srcMesh, bboxAdjuster);
+  }
 }
