#!/bin/bash
# Compilation par -ftest-coverage -fprofile-arcs: genere des fichiers .gcno
# A l'execution, genere un fichier .gcda
mon_ana()
{
   file=$1
   file=${file%.gcov}
   filec=$file.gcov
   nl=`grep -v "\-:" $filec | grep -v "blocks executed " | wc -l`
   nnt=`grep "####:"  $filec | wc -l`
   #nntm=`grep "####:" $filec | grep -v "Cerr"| grep -v "exit(-1)" | grep -v assert | wc -l`
   nntm=`grep "####:" $filec | grep -v "Cerr"| grep -v "exit" | grep -v "assert" | grep -v "Implemente_"| wc -l`
   #echo $nl $nnt $nntm
   p=`echo "scale=2;100-100*$nnt/$nl" | bc -l`
   pm=`echo "scale=2;100-100*$nntm/$nl" | bc -l`
   #runs=`$TRUST_Awk -F: '/Runs/ {print $4}' $filec`
   runs=`$TRUST_Awk 'BEGIN {max=10000;n=max} /called / && !/_GLOBAL__/ && !/__tcf_/ {if ($4!=0 && $4<n) n=$4} END {if (n==max) n=0;print n}' $filec`
   ok=`echo "scale=2;(0.01*$pm)^$runs*100" | bc -l`
   echo $ECHO_OPTS $p"\t "$pm"\t "$runs"\t "$ok"\t "$file
}
tout()
{
   echo "# Taux de couverture en ligne de code par fichier du `date '+%d/%m/%y'`"
   echo "# T1: Taux brut"
   echo "# T2: Taux corrige (instructions Cerr, exit, assert, Implemente_... non comptees)"
   echo "# N : Nombre de cas tests qui utilisent des lignes de code de cette classe"
   echo "# OK: T2^N critere de qualite de couverture de la classe"
   echo $ECHO_OPTS "T1(%)\t T2(%)\t N\t OK\t File"
   for file in `ls *.cpp.gcov` 
   do  
      #echo $file
      mon_ana $file
   done
}
#rep=$TRUST_ROOT/MonoDir$COMM"_opt_gcov"/src
#[ ! -d $rep ] && echo 'Script utilisable uniquement avec une version compilee avec OPT="_opt_gcov"' && exit -1
#cd $TRUST_ROOT/MonoDir$COMM"_opt_gcov"/src

#[ "$GCOV_PREFIX" = "" ] && echo GCOV_PREFIX not set && exit 1
GCOV_PREFIX=${project_directory}/build/tests/GCDA/trace
export GCOV_PREFIX
ORG=`dirname $0`
ORG=`(cd $ORG;pwd)`
trace=`basename  $GCOV_PREFIX`"/"

for cas in TRUST baltik
do
cd `dirname $GCOV_PREFIX`

filtre=""
[ "$cas" = "baltik" ] && filtre="-v"
dirs=`find  $trace -type d | grep $filtre $TRUST_ROOT`
# echo $dirs

rm -rf ana
mkdir ana
cd ana
for dir in $dirs
do
[ "`ls  ../$dir/*.gcda 2>/dev/null`" =  "" ] && continue
srcdir=`echo $dir| sed "s/trace//"` 
ln -s ../$dir/*.gcda . 2>/dev/null
ln -s /$srcdir/*.gcno . 2>/dev/null

done

 echo "Analysis by gcov..."
  rm -f gcov_out gcov_err
  gcov *.gcno 1>gcov_out 2>gcov_err
mkdir cpp.gcov
mv *.cpp.gcov cpp.gcov
cd  cpp.gcov
echo "Analysis of the coverage of $cas part "
tout 1>monana_out 2>&1
echo "`pwd`/monana_out file created" 
export HTML_ROOT=$GCOV_PREFIX/../ana
$TRUST_ROOT/bin/KSH/tggcov_   | sed "s/TRUST/$cas/"        | tee monana_glob
echo more details in monana_sort
$TRUST_ROOT/bin/KSH/tggcov_ -file all  | sed "s/TRUST/$cas/"  > monana_sort
cd ..
DEST=../${cas}_cpp.gcov 
rm -rf $DEST
mv cpp.gcov $DEST
cd ..
rm -rf ana

done
