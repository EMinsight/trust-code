# PARALLEL OK #
dimension 3
Pb_Hydraulique pb
Domaine coarse_dom
Domaine dom
# BEGIN MESH #
Mailler coarse_dom
{
    Pave Cavite
    {
        Origine 0. 0. 0.
        Nombre_de_Noeuds 3 3 3
        /* Nombre_de_Noeuds 31 31 10 */ /* Nombre mailles sur le calcul parallele = (Nx-1)*(Ny-1)*(Nz-1)*40*8 */
        Longueurs 10 10 3
    }
    {
        Bord entree X = 0.    0. <= Y <= 10. 0. <= Z <= 3.
        Bord paroi  Y = 10.   0. <= X <= 10. 0. <= Z <= 3.
        Bord paroi  Y = 0.    0. <= X <= 10. 0. <= Z <= 3.
        Bord sortie X = 10.   0. <= Y <= 10. 0. <= Z <= 3.
        Bord paroi  Z = 0.    0. <= X <= 10. 0. <= Y <= 10.
        Bord paroi  Z = 3.    0. <= X <= 10. 0. <= Y <= 10.
    }
}
Dilate coarse_dom 1.e-3
Tetraedriser_homogene coarse_dom
Ecrire_fichier coarse_dom coarse_dom.geom
Lire_fichier dom coarse_dom.geom
Raffiner_isotrope dom
# END MESH #

# BEGIN PARTITION
Partition coarse_dom
{
    Partition_tool Metis { Nb_parts 2 }
    Larg_joint 2
    zones_name COARSE_DOM
}
End
END PARTITION #

# BEGIN SCATTER
Raffiner_isotrope_parallele { name_of_initial_zones COARSE_DOM name_of_new_zones DOM }
Scatter DOM.Zones dom
END SCATTER #

VEFPreP1B dis

Schema_euler_implicite sch
Read sch
{
    tinit 0.
    nb_pas_dt_max 10
    facsec 50
    facsec_max 300
    # Reuse preconditioner to reduce precondionner cost by increasing the solver stuff (more iterations) #
    # Possible interest with Newton methods with a criteria to rebuild preconditioner when necessary: here on nb_it of linear part #
    # Aster code is using GMRES/MUMPS BLR single-precision precond and rebuild last one when Newton iterations increases: very efficient according to the team #
    Solveur Implicite { solveur petsc gmres { precond lu { } impr rtol 1.e-7 reuse_preconditioner_nb_it_max 3 } }
}

Associate pb dom
Associate pb sch
Discretize pb dis
Read pb
{
    fluide_incompressible {
        mu Champ_Uniforme       1 2.21799454e-04
        rho Champ_Uniforme      1 943.112976
        lambda Champ_Uniforme   1 0.806537897
        Cp Champ_Uniforme       1 4238.62106
        beta_th Champ_Uniforme  1 8.6e-4
    }
    Navier_Stokes_Standard
    {
        solveur_pression petsc cholesky { }
        convection { muscl }
        diffusion  {  }
        initial_conditions {  vitesse Champ_Uniforme 3  0. 0. 0. }
        boundary_conditions {
            entree    Frontiere_ouverte_vitesse_imposee  Champ_front_fonc_xyz 3 0.1145*(2.44*LN((0.077-SQRT(x*x+y*y))*0.1145/2.35e-7)+5.1) 0. 0.
            sortie    Frontiere_ouverte_pression_imposee Champ_front_Uniforme 1 0.
            paroi     paroi_fixe
        }
    }
    Postraitement { format lml champs dt_post 10000 { pression elem } }
}
Solve pb
End
