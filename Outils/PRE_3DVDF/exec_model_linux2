#!/bin/bash
#set -xv
avec_xterm=1
[ "$1" = "-no_xterm" ] && avec_xterm=0 && shift
base_mod()
{
#echo $0 $*
#echo "ici 2" $BASE
CPPOPT="-I. "
echo "pour tenter de flusher la sortie definir la variable FLUSHOK a 1"
[ "$FLUSHOK" = "1" ] && CPPOPT="$CPPOPT -DFLUSHOK"

[ "`uname -s`" = "Linux" ] && CPPOPT="$CPPOPT -traditional" 

# si $1 vaut 1 on veut le field_
if [ "$1" = "1" ] 
then 
   CPPOPT="$CPPOPT -DFIELD_"
fi
# si $1 vaut 2 on veut salome seulement
if [ "$1" = "2" ] 
then 
   CPPOPT="$CPPOPT -DSALOME_"
fi
#
if [ "$TRUST_VERSION_GNU" != "" ] && [ "`echo $TRUST_VERSION_GNU | awk '{if ($1<"4.2") print 1}'`" = 1 ]
then
   # Sur les compilateurs gfortran anciens (<4.2), le header
   # est code sur 8 octets et non 4 octets comme l'attend lata2dx
   # La pre-visualisation est alors fausse.
   CPPOPT="$CPPOPT -DOLD_GFORTRAN"
fi
#on regarde si on a silo...
if [ "$TRUST_ROOT" != "" ]
then
    [  -f $TRUST_ROOT/lib/libsilo.a.test ] && CPPOPT="$CPPOPT -I$TRUST_ROOT/lib/src/LIBSILO/include -DSILOEXIST" &&  LIBS2="$TRUST_ROOT/lib/libsilo.a -lm"
fi
if [ ! -f 'appel.h' ]
 then
  echo ' *     File appel.h not found    *'
  exit
fi
if [  -f "maillage$2" ]
 then
  CPPOPT="$CPPOPT -DMAIL_EXIST=$2"
  cp -f maillage$2 maillage
fi
if [  -f "routinesupp$2" ]
 then
  CPPOPT="$CPPOPT -DROUTSUPP_EXIST=$2"
  cp -f routinesupp$2 routinesupp
fi
if [ -x modelage ]
 then
  rm -f modelage modelage.exe
fi
if [ -f model.f ]
 then
  rm -f model.f
fi
if [ -f model.o ]
 then
  rm -f model.o
fi

echo "erreur_au_modelage" > mod.trace
cpp -P $CPPOPT $BASE/model_inc2 > model.f
cpp -P $CPPOPT $BASE/modelh_inc2 > model.h
cpp -P $CPPOPT $BASE/otherh_inc2 > other.h
[ -f model.silo ] && rm -f model.silo
if [ -f 'model.f' ]
 then
#  f77 -Wl,-N model.f -o modelage
#  f77 -C -g model.f $LIBS2 -o modelage
  if [ ${#TRUST_ENV} != 0 ]
  then
     # Environnement TRUST
     cp $BASE/Xprepro_makefile .
     # On modifie le Makefile pour fortran 90 en rajoutant -lc_r
     chmod +w Xprepro_makefile
     if [ "`basename $TRUST_F77_BASE`" = f90 ]
     then
	if [ $TRUST_ARCH = HPPA_11 ]
	then
	   # Le +noppu est pour le _ en 64bits des appels fortran
	   # le -lnsl est pour les unsatisfied symbols xdr...
	   echo $ECHO_OPTS "1,$ s?-o?+noppu -lnsl -o?g\nw" | ed Xprepro_makefile 1>/dev/null 2>&1
	else
	   echo $ECHO_OPTS "1,$ s?-o?-lc_r -o?g\nw" | ed Xprepro_makefile 1>/dev/null 2>&1
	fi
     fi

     if [ $TRUST_ARCH = linux ]
     then
        # Pb avec linux: si optimise alors erreur due au cos->dcos ?
        BITS=`uname -m`
	mcmodel=""
	if [ "$BITS" != "${BITS%64}" ]
	then
	   # Test de l'option de compilation suivante
	   # Voir http://coding.derkeiler.com/Archive/Fortran/comp.lang.fortran/2009-02/msg00978.html
	   mcmodel="-mcmodel=medium"
	   echo $ECHO_OPTS "\c
      program main
      integer*8 it,two
      parameter(it=1073741824,two=2)
      complex foo(it*two-1)
      foo(10)=1.
      end  " > mcmodel.f
	   $TRUST_F77 $mcmodel -o mcmodel mcmodel.f 1>/dev/null 2>&1
	   [ $? != 0 ] && mcmodel=""
	   rm -f mcmodel.f
	fi
        # Probleme avec ifort sur de gros cas (voir http://mitgcm.org/pipermail/mitgcm-support/2005-October/003505.html)
        [ ${TRUST_F77_BASE%ifort} != $TRUST_F77_BASE ] && F77Flags=$F77Flags" -i_dynamic"		
	make modelage -f Xprepro_makefile LIBS="$LIBS2 $mcmodel" F77Flags="$F77Flags"
     else
        make modelage -f Xprepro_makefile LIBS="$LIBS2"
     fi
     rm -f Xprepro_makefile
  else
     # Hors TRUST
     f77 model.f $LIBS2 -o modelage
  fi
fi
if [ -x 'modelage' ]
then
  
  #  mv model.f model.h other.h avs
[ -f model.dec ] && rm -f model.dec
#  modelage << EOF 
#$1
#EOF
echo $1 | time ./modelage
rm -f model.f model.o model.h other.h maillage 
if  [ -s model.val ]  
then
  rm -f modelage modelage.exe
fi
  #rm Coordo_Prob Maille_Prob Indmail_mai 
  echo 
  #echo ' RESULTAT FINAL :'
  echo ' ****************'
  echo 
  #cat Recapitul_Pb1; rm Recapitul_Pb1
  echo 
  if [ ! -d 'avs' ] 
   then
    mkdir avs
   fi
     rm -f avs/model.dec
     [ -f model.dec ] && mv model.dec avs/.
     if [ -f model.xi ]
     then
     	mv model.fld avs/.
     	mv model.xi avs/.
     	mv model.yi avs/.
     	mv model.zi avs/.
     	mv model.val avs/.
     	mv model.pres avs/.
	sed "s/     / /g;s/    / /g;s/   / /g; s/  / /g;s/size= /size=/g" model.lata.in > model.lata
     else
        echo "Problem with your meshing... Look at previous warning."
     fi
     if [ -f model.xm ]
     then 
	mv modelm.fld avs/.
	mv model.xm avs/.
	mv model.ym avs/.
	mv model.zm avs/.
	mv model.valp avs/.
	mv model.presp avs/.
     fi
     [ -f model.rac ] && mv model.rac avs/.
     [ -f modelr.fld ] && mv modelr.fld avs/.
     
  echo ' +----------------------------------------------------------------+' 
  echo ' | LES FICHIERS A VISUALISER AVEC AVS SONT SOUS LE REPERTOIRE avs |'
  echo ' +----------------------------------------------------------------+'     
else 
  echo "problem during compilation"
  f77 -C -g model.f -o modelage 1>.log.out 2>.log.out
  cat .log.out
  rm -f .log.out
fi
if [ "$1" = "2" ] 
then
   echo "on traduit mod.trace en script python"
   cp mod.trace $2.trace
   $BASE/traite_trace $2.trace 
   rm -f modelage modelage.exe
fi
exit 0
}
echo $0 $*
BASE=`dirname $0`
export BASE
base_mod $* 1> mod.out 2>&1 &
proc1=$!
#sleep 2
[ "$Xterm" = "" ] && Xterm=xterm
if [ $avec_xterm -eq 1 ]
then 
 $Xterm -e tail -f mod.out &
 proc2=$!
 wait $proc1 &&  kill -9  $proc2
else
 wait $proc1
fi

res=` grep "PROBLEM " mod.out| tail -1`
if [ "$res" != "" ]
then 
echo 
echo 
echo "!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!"
echo 
echo 
echo "The modeling tool has found some boundaries with problem indexes ..."
echo  "It will generates some problems during geometry creation"
echo
echo "The modeling tool exit without error to make you able to correct...."
echo
echo
grep "PROBLEM " mod.out
fi
cat mod.out
#echo ok

