#!/bin/bash
[ ${#TRUST_ROOT} = 0 ] && echo "Environnement TRUST non defini." && exit -1 
echo $HOST_BUILD > Run_bench.log
echo $exec > par
[ -f EN_COURS ] && echo "The bench already running, the EN_COURS file exists." && exit
touch EN_COURS

# Par defaut, bench sur 512000 mailles en VDF, 109760 mailles en VEF
NUMBER_CORES_TESTED="1" 								# VDF (cells/core)	VEF (cells/core)
[ $TRUST_NB_PHYSICAL_CORES -ge  2 ] && NUMBER_CORES_TESTED=$NUMBER_CORES_TESTED" 2"  	# 256000		54880
[ $TRUST_NB_PHYSICAL_CORES -ge  4 ] && NUMBER_CORES_TESTED=$NUMBER_CORES_TESTED" 4"  	# 128000		27440
[ $TRUST_NB_PHYSICAL_CORES -ge  8 ] && NUMBER_CORES_TESTED=$NUMBER_CORES_TESTED" 8"  	#  64000		13720
[ $TRUST_NB_PHYSICAL_CORES -ge 16 ] && NUMBER_CORES_TESTED=$NUMBER_CORES_TESTED" 16" 	#  32000 

#############################

rm -rf PAR[0-9]*
echo "Usage: $0 [VDF|VEF] [-queue queue] [-np cpu_numbers_list]"
echo "Example: $0 VEF -np 1 2 4 16 	# -> Run the benchmark with VEF test on 1, 2, 4, and 16 cores."
echo "Change the mesh into the following data files if necessay:"
ls TpltParV*.data
listcas="VDF VEF" && [ "$1" != "" ] && listcas=$1 && shift
[ "$1" = -queue ] && shift && export queue="-queue $1" && shift
[ "$1" = -np ] && shift && NUMBER_CORES_TESTED=$*
echo $NUMBER_CORES_TESTED > liste_nb_proc   
for cas in $listcas
do
   export cas
   echo " Cas "$cas
   cp -f TpltPar${cas}.data TpltPar.data
   ./Gen_bench;
   ./Lance_bench;
   ./Lance_valid resultats >>par
   # Pour eviter l'accumulation de plusieurs runs lances :
   [ ! -d $TRUST_TESTS/Reference/BENCHMARK ] && exit
   # Sauve les rapports ${cas}
   for file in `ls */*.TU */*.perf */*.out */*.err`
   do
      [ ${file%.TU} != $file ] && cat $file >> Run_bench.log
      mv $file $file"_${cas}"
   done
done

cat par
rm -f EN_COURS
# Envoi un mail si TRUST_ADMIN
if [ "`whoami`" = triou ]
then
   cat par | mail_ -s "Bench_$HOST_BUILD" $TRUST_MAIL
   cat Run_bench.log | mail_ -s "Run_bench.log_$HOST_BUILD" $TRUST_MAIL
fi

if [ "$listcas" = "VDF VEF" ]
then
   # Creation d'un rapport PDF sur le speed up et la decomposition du temps CPU
   Run_fiche -post_run `[ "$NUIT" = "" ] && echo -xpdf`
   if [ -f `pwd`/build/rapport.pdf ]
   then
      echo "************************************************"
      echo "A PDF file is created with speed up plots there:"
      echo "`pwd`/build/rapport.pdf with speed up plots."
   else
      echo "************************************************"
      echo "The PDF file is NOT CREATED !!!"
      echo "See `pwd`/Run.log"
   fi
fi
echo
