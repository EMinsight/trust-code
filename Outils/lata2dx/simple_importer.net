//
// time: Mon Apr 14 13:49:44 2003
//
// version: 3.1.2 (format), 4.2.0 (DX)
//
//
// MODULE main
// page assignment: Choosecomp	order=4, windowed=0, showing=0
// page assignment: Geometry	order=3, windowed=0, showing=0
// page assignment: Image	order=5, windowed=0, showing=0
// page assignment: Import	order=2, windowed=0, showing=1
// workspace: width = 455, height = 604
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 113, y = 21, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = ""
    // output[2]: visible = 1, type = 32, value = ""
    // page group: Import
    //
    // 
    // node Compute[1]: x = 25, y = 109, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "(strlen($0)>0)?1:2"
    // page group: Import
    // expression: value = (strlen(a)>0)?1:2
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_FileSelector_1_out_1,
    main_Compute_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Route[1]: x = 70, y = 203, inputs = 2, outputs = 2, label = Route
    // page group: Import
    //
main_Route_1_out_1,
main_Route_1_out_2 = 
    Route(
    main_Compute_1_out_1,
    main_FileSelector_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Selector[1]: x = 144, y = 177, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "quad" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 1 
    // input[4]: defaulting = 0, visible = 1, type = 16777248, value = {"triangle" "quad" "tetra" "hexa" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = {0  1  2  3  }
    // input[7]: defaulting = 0, visible = 0, type = 32, value = "Element type"
    // output[1]: visible = 1, type = 29, value = 1 
    // output[2]: visible = 1, type = 32, value = "quad" 
    // page group: Import
    //
main_Selector_1_out_1[cache: 2],
main_Selector_1_out_2[cache: 2] = 
    Selector(
    main_Selector_1_in_1,
    main_Selector_1_in_2,
    main_Selector_1_in_3,
    main_Selector_1_in_4,
    main_Selector_1_in_5,
    main_Selector_1_in_6,
    main_Selector_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[6]: x = 243, y = 76, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_6"
    // input[2]: defaulting = 0, visible = 0, type = 29, value =  2  
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 0, visible = 1, type = 29, value =  2  
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "Binary"
    // output[1]: visible = 1, type = 29, value =  2  
    // page group: Import
    // toggle : 0
    //
main_Toggle_6_out_1[cache: 2] = 
    Toggle(
    main_Toggle_6_in_1,
    main_Toggle_6_in_2,
    main_Toggle_6_in_3,
    main_Toggle_6_in_4,
    main_Toggle_6_in_5,
    main_Toggle_6_in_6
    ) [instance: 6, cache: 1];
    // 
    // node Switch[9]: x = 235, y = 177, inputs = 3, label = Switch
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = "binary"
    // input[3]: defaulting = 0, visible = 1, type = 67108863, value = "ascii"
    // page group: Import
    //
main_Switch_9_out_1 = 
    Switch(
    main_Toggle_6_out_1,
    main_Switch_9_in_2,
    main_Switch_9_in_3
    ) [instance: 9, cache: 1];
    // 
    // node Sequencer[1]: x = 342, y = 174, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 1, type = 1, value = 50
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 50 1 0 50 1 }
    // page group: Import
    // vcr[1]: min = 0, max = 50, beg = 0, end = 50, cur = 1, inc = 1, loop = off, step = on, pal = off
    // window: position = (0.0430,0.8568), size = 0.1748x0.0664
    //
    main_Sequencer_1_out_1 = @frame;
    // 
    // node Format[1]: x = 132, y = 288, inputs = 5, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "!lata_dx_filter %s %s %s timestep=%d"
    // page group: Import
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Route_1_out_1,
    main_Selector_1_out_2,
    main_Switch_9_out_1,
    main_Sequencer_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Import[1]: x = 132, y = 378, inputs = 6, label = Import
    // page group: Import
    //
main_Import_1_out_1 = 
    Import(
    main_Format_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[1]: x = 109, y = 468, inputs = 1, label = imported
    // page group: Import
    //
imported = main_Import_1_out_1;
    // 
    // node Receiver[1]: x = 194, y = 26, inputs = 1, label = imported
    // page group: Geometry
    //
main_Receiver_1_out_1[cache: 0] = imported;
    // 
    // node Mark[1]: x = 205, y = 116, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "domain"
    // page group: Geometry
    //
main_Mark_1_out_1 = 
    Mark(
    main_Receiver_1_out_1,
    main_Mark_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[1]: x = 439, y = 237, inputs = 10, label = AutoColor
    // page group: Geometry
    //
main_AutoColor_1_out_1,
main_AutoColor_1_out_2 = 
    AutoColor(
    main_Mark_1_out_1,
    main_AutoColor_1_in_2,
    main_AutoColor_1_in_3,
    main_AutoColor_1_in_4,
    main_AutoColor_1_in_5,
    main_AutoColor_1_in_6,
    main_AutoColor_1_in_7,
    main_AutoColor_1_in_8,
    main_AutoColor_1_in_9,
    main_AutoColor_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[2]: x = 234, y = 32, inputs = 1, label = imported
    // page group: Choosecomp
    //
main_Receiver_2_out_1[cache: 0] = imported;
    // 
    // node Inquire[1]: x = 315, y = 96, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "component names"
    // page group: Choosecomp
    //
main_Inquire_1_out_1 = 
    Inquire(
    main_Receiver_2_out_1,
    main_Inquire_1_in_2,
    main_Inquire_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Selector[2]: x = 93, y = 84, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_2"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "positions" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "positions" "connections" "domain" "time" "CONCENTRATION_ELEM" "neighbors" "box" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 3 4 5 6 }
    // input[7]: defaulting = 0, visible = 0, type = 32, value = "Selection (toggle button and execute to update list)"
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "positions" 
    // page group: Choosecomp
    //
main_Selector_2_out_1[cache: 2],
main_Selector_2_out_2[cache: 2] = 
    Selector(
    main_Selector_2_in_1,
    main_Selector_2_in_2,
    main_Selector_2_in_3,
    main_Inquire_1_out_1,
    main_Selector_2_in_5,
    main_Selector_2_in_6,
    main_Selector_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node Mark[2]: x = 94, y = 173, inputs = 2, label = Mark
    // page group: Choosecomp
    //
main_Mark_2_out_1 = 
    Mark(
    main_Receiver_2_out_1,
    main_Selector_2_out_2
    ) [instance: 2, cache: 1];
    // 
    // node AutoColor[2]: x = 78, y = 251, inputs = 10, label = AutoColor
    // page group: Choosecomp
    //
main_AutoColor_2_out_1,
main_AutoColor_2_out_2 = 
    AutoColor(
    main_Mark_2_out_1,
    main_AutoColor_2_in_2,
    main_AutoColor_2_in_3,
    main_AutoColor_2_in_4,
    main_AutoColor_2_in_5,
    main_AutoColor_2_in_6,
    main_AutoColor_2_in_7,
    main_AutoColor_2_in_8,
    main_AutoColor_2_in_9,
    main_AutoColor_2_in_10
    ) [instance: 2, cache: 1];
    // 
    // node Selector[3]: x = 357, y = 195, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_3"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "positions" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "positions" "connections" "domain" "VITESSE_SOM" "VITESSE_ELEM" "CONCENTRATION_ELEM" "VISCOSITE_TURBULENTE_ELEM" "K_SOM" "neighbors" "box" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 3 4 5 6 7 8 9 }
    // input[7]: defaulting = 0, visible = 0, type = 32, value = "Selection (toggle button and execute to update list)"
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "positions" 
    // page group: Choosecomp
    //
main_Selector_3_out_1[cache: 2],
main_Selector_3_out_2[cache: 2] = 
    Selector(
    main_Selector_3_in_1,
    main_Selector_3_in_2,
    main_Selector_3_in_3,
    main_Inquire_1_out_1,
    main_Selector_3_in_5,
    main_Selector_3_in_6,
    main_Selector_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node Mark[3]: x = 355, y = 280, inputs = 2, label = Mark
    // page group: Choosecomp
    //
main_Mark_3_out_1 = 
    Mark(
    main_Receiver_2_out_1,
    main_Selector_3_out_2
    ) [instance: 3, cache: 1];
    // 
    // node AutoGlyph[1]: x = 387, y = 365, inputs = 7, label = AutoGlyph
    // page group: Choosecomp
    //
main_AutoGlyph_1_out_1 = 
    AutoGlyph(
    main_Mark_3_out_1,
    main_AutoGlyph_1_in_2,
    main_AutoGlyph_1_in_3,
    main_AutoGlyph_1_in_4,
    main_AutoGlyph_1_in_5,
    main_AutoGlyph_1_in_6,
    main_AutoGlyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Extract[1]: x = 226, y = 465, inputs = 2, label = Extract
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "TIME"
    // page group: Import
    //
main_Extract_1_out_1 = 
    Extract(
    main_Import_1_out_1,
    main_Extract_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[4]: x = 235, y = 542, inputs = 1, label = time
    // page group: Import
    //
time = main_Extract_1_out_1;
    // 
    // node Receiver[5]: x = 333, y = 66, inputs = 1, label = time
    // page group: Image
    //
main_Receiver_5_out_1[cache: 0] = time;
    // 
    // node Format[2]: x = 313, y = 156, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "t=%8.4f"
    // page group: Image
    //
main_Format_2_out_1 = 
    Format(
    main_Format_2_in_1,
    main_Receiver_5_out_1,
    main_Format_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Caption[1]: x = 315, y = 233, inputs = 9, label = Caption
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [.9 .05]
    // page group: Image
    //
main_Caption_1_out_1 = 
    Caption(
    main_Format_2_out_1,
    main_Caption_1_in_2,
    main_Caption_1_in_3,
    main_Caption_1_in_4,
    main_Caption_1_in_5,
    main_Caption_1_in_6,
    main_Caption_1_in_7,
    main_Caption_1_in_8,
    main_Caption_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[3]: x = 17, y = 427, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_3"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "Show connections"
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Geometry
    // toggle : 0
    //
main_Toggle_3_out_1[cache: 2] = 
    Toggle(
    main_Toggle_3_in_1,
    main_Toggle_3_in_2,
    main_Toggle_3_in_3,
    main_Toggle_3_in_4,
    main_Toggle_3_in_5,
    main_Toggle_3_in_6
    ) [instance: 3, cache: 1];
    // 
    // node ShowConnections[1]: x = 56, y = 217, inputs = 1, label = ShowConnections
    // page group: Geometry
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_Mark_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[1]: x = 130, y = 338, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = .3
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.5 
    // input[5]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = .1
    // input[9]: defaulting = 0, visible = 0, type = 1, value = 2
    // input[11]: defaulting = 0, visible = 0, type = 32, value = "opacity"
    // output[1]: visible = 1, type = 5, value = 0.5 
    // page group: Geometry
    //
main_Scalar_1_out_1[cache: 2] = 
    Scalar(
    main_Scalar_1_in_1,
    main_Scalar_1_in_2,
    main_Scalar_1_in_3,
    main_Scalar_1_in_4,
    main_Scalar_1_in_5,
    main_Scalar_1_in_6,
    main_Scalar_1_in_7,
    main_Scalar_1_in_8,
    main_Scalar_1_in_9,
    main_Scalar_1_in_10,
    main_Scalar_1_in_11
    ) [instance: 1, cache: 1];
    // 
    // node Color[1]: x = 81, y = 420, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "white"
    // input[3]: defaulting = 1, visible = 1, type = 5, value = .3
    // page group: Geometry
    //
main_Color_1_out_1 = 
    Color(
    main_ShowConnections_1_out_1,
    main_Color_1_in_2,
    main_Scalar_1_out_1,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Switch[6]: x = 76, y = 530, inputs = 3, label = Switch
    // page group: Geometry
    //
main_Switch_6_out_1 = 
    Switch(
    main_Toggle_3_out_1,
    main_Color_1_out_1,
    main_Switch_6_in_3
    ) [instance: 6, cache: 1];
    // 
    // node Toggle[4]: x = 184, y = 450, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_4"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "Show wire boundary"
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Geometry
    // toggle : 0
    //
main_Toggle_4_out_1[cache: 2] = 
    Toggle(
    main_Toggle_4_in_1,
    main_Toggle_4_in_2,
    main_Toggle_4_in_3,
    main_Toggle_4_in_4,
    main_Toggle_4_in_5,
    main_Toggle_4_in_6
    ) [instance: 4, cache: 1];
    // 
    // node ShowBoundary[1]: x = 265, y = 212, inputs = 2, label = ShowBoundary
    // page group: Geometry
    //
main_ShowBoundary_1_out_1 = 
    ShowBoundary(
    main_Mark_1_out_1,
    main_ShowBoundary_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node ShowConnections[3]: x = 191, y = 291, inputs = 1, label = ShowConnections
    // page group: Geometry
    //
main_ShowConnections_3_out_1 = 
    ShowConnections(
    main_ShowBoundary_1_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Options[1]: x = 204, y = 359, inputs = 5, label = Options
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "fuzz"
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 3
    // input[4]: visible = 0
    // input[5]: visible = 0
    // page group: Geometry
    //
main_Options_1_out_1 = 
    Options(
    main_ShowConnections_3_out_1,
    main_Options_1_in_2,
    main_Options_1_in_3,
    main_Options_1_in_4,
    main_Options_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[3]: x = 290, y = 363, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.3 
    // input[5]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.1
    // input[9]: defaulting = 0, visible = 0, type = 1, value = 2
    // input[11]: defaulting = 0, visible = 0, type = 32, value = "Opacity"
    // output[1]: visible = 1, type = 5, value = 0.3 
    // page group: Geometry
    //
main_Scalar_3_out_1[cache: 2] = 
    Scalar(
    main_Scalar_3_in_1,
    main_Scalar_3_in_2,
    main_Scalar_3_in_3,
    main_Scalar_3_in_4,
    main_Scalar_3_in_5,
    main_Scalar_3_in_6,
    main_Scalar_3_in_7,
    main_Scalar_3_in_8,
    main_Scalar_3_in_9,
    main_Scalar_3_in_10,
    main_Scalar_3_in_11
    ) [instance: 3, cache: 1];
    // 
    // node Color[3]: x = 247, y = 449, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "white"
    // input[3]: defaulting = 1, visible = 1, type = 5, value = .5
    // page group: Geometry
    //
main_Color_3_out_1 = 
    Color(
    main_Options_1_out_1,
    main_Color_3_in_2,
    main_Scalar_3_out_1,
    main_Color_3_in_4,
    main_Color_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Switch[7]: x = 221, y = 535, inputs = 3, label = Switch
    // page group: Geometry
    //
main_Switch_7_out_1 = 
    Switch(
    main_Toggle_4_out_1,
    main_Color_3_out_1,
    main_Switch_7_in_3
    ) [instance: 7, cache: 1];
    // 
    // node Toggle[5]: x = 336, y = 437, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_5"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "Show shaded boundary"
    // output[1]: visible = 1, type = 29, value = 1
    // page group: Geometry
    // toggle : 1
    //
main_Toggle_5_out_1[cache: 2] = 
    Toggle(
    main_Toggle_5_in_1,
    main_Toggle_5_in_2,
    main_Toggle_5_in_3,
    main_Toggle_5_in_4,
    main_Toggle_5_in_5,
    main_Toggle_5_in_6
    ) [instance: 5, cache: 1];
    // 
    // node Shade[1]: x = 364, y = 323, inputs = 8, label = Shade
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "faceted"
    // page group: Geometry
    //
main_Shade_1_out_1 = 
    Shade(
    main_ShowBoundary_1_out_1,
    main_Shade_1_in_2,
    main_Shade_1_in_3,
    main_Shade_1_in_4,
    main_Shade_1_in_5,
    main_Shade_1_in_6,
    main_Shade_1_in_7,
    main_Shade_1_in_8
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[2]: x = 464, y = 339, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = .3
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 0, visible = 0, type = 5, value = .1
    // input[9]: defaulting = 0, visible = 0, type = 1, value = 2
    // input[11]: defaulting = 0, visible = 0, type = 32, value = "opacity"
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: Geometry
    //
main_Scalar_2_out_1[cache: 2] = 
    Scalar(
    main_Scalar_2_in_1,
    main_Scalar_2_in_2,
    main_Scalar_2_in_3,
    main_Scalar_2_in_4,
    main_Scalar_2_in_5,
    main_Scalar_2_in_6,
    main_Scalar_2_in_7,
    main_Scalar_2_in_8,
    main_Scalar_2_in_9,
    main_Scalar_2_in_10,
    main_Scalar_2_in_11
    ) [instance: 2, cache: 1];
    // 
    // node Color[2]: x = 402, y = 434, inputs = 5, label = Color
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "red"
    // input[3]: defaulting = 1, visible = 1, type = 5, value = .5
    // page group: Geometry
    //
main_Color_2_out_1 = 
    Color(
    main_Shade_1_out_1,
    main_AutoColor_1_out_2,
    main_Scalar_2_out_1,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Switch[8]: x = 375, y = 532, inputs = 3, label = Switch
    // page group: Geometry
    //
main_Switch_8_out_1 = 
    Switch(
    main_Toggle_5_out_1,
    main_Color_2_out_1,
    main_Switch_8_in_3
    ) [instance: 8, cache: 1];
    // 
    // node Collect[1]: x = 224, y = 634, inputs = 3, label = Collect
    // page group: Geometry
    //
main_Collect_1_out_1 = 
    Collect(
    main_Switch_6_out_1,
    main_Switch_7_out_1,
    main_Switch_8_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[2]: x = 223, y = 721, inputs = 1, label = geometry
    // page group: Geometry
    //
geometry = main_Collect_1_out_1;
    // 
    // node Receiver[3]: x = 117, y = 63, inputs = 1, label = geometry
    // page group: Image
    //
main_Receiver_3_out_1[cache: 0] = geometry;
    // 
    // node Toggle[7]: x = 3, y = 361, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_7"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "Show color field"
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Choosecomp
    // toggle : 0
    //
main_Toggle_7_out_1[cache: 2] = 
    Toggle(
    main_Toggle_7_in_1,
    main_Toggle_7_in_2,
    main_Toggle_7_in_3,
    main_Toggle_7_in_4,
    main_Toggle_7_in_5,
    main_Toggle_7_in_6
    ) [instance: 7, cache: 1];
    // 
    // node ColorBar[1]: x = 129, y = 348, inputs = 16, label = ColorBar
    // page group: Choosecomp
    //
main_ColorBar_1_out_1 = 
    ColorBar(
    main_AutoColor_2_out_2,
    main_ColorBar_1_in_2,
    main_ColorBar_1_in_3,
    main_ColorBar_1_in_4,
    main_ColorBar_1_in_5,
    main_ColorBar_1_in_6,
    main_ColorBar_1_in_7,
    main_ColorBar_1_in_8,
    main_ColorBar_1_in_9,
    main_ColorBar_1_in_10,
    main_ColorBar_1_in_11,
    main_ColorBar_1_in_12,
    main_ColorBar_1_in_13,
    main_ColorBar_1_in_14,
    main_ColorBar_1_in_15,
    main_ColorBar_1_in_16
    ) [instance: 1, cache: 1];
    // 
    // node Collect[4]: x = 94, y = 440, inputs = 2, label = Collect
    // page group: Choosecomp
    //
main_Collect_4_out_1 = 
    Collect(
    main_AutoColor_2_out_1,
    main_ColorBar_1_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Switch[10]: x = 65, y = 541, inputs = 3, label = Switch
    // page group: Choosecomp
    //
main_Switch_10_out_1 = 
    Switch(
    main_Toggle_7_out_1,
    main_Collect_4_out_1,
    main_Switch_10_in_3
    ) [instance: 10, cache: 1];
    // 
    // node Toggle[8]: x = 314, y = 368, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_8"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // input[6]: defaulting = 0, visible = 0, type = 32, value = "Show glyph"
    // output[1]: visible = 1, type = 29, value = 0
    // page group: Choosecomp
    // toggle : 0
    //
main_Toggle_8_out_1[cache: 2] = 
    Toggle(
    main_Toggle_8_in_1,
    main_Toggle_8_in_2,
    main_Toggle_8_in_3,
    main_Toggle_8_in_4,
    main_Toggle_8_in_5,
    main_Toggle_8_in_6
    ) [instance: 8, cache: 1];
    // 
    // node Switch[11]: x = 339, y = 456, inputs = 3, label = Switch
    // page group: Choosecomp
    //
main_Switch_11_out_1 = 
    Switch(
    main_Toggle_8_out_1,
    main_AutoGlyph_1_out_1,
    main_Switch_11_in_3
    ) [instance: 11, cache: 1];
    // 
    // node Collect[3]: x = 206, y = 519, inputs = 2, label = Collect
    // page group: Choosecomp
    //
main_Collect_3_out_1 = 
    Collect(
    main_Switch_10_out_1,
    main_Switch_11_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[3]: x = 213, y = 598, inputs = 1, label = fields
    // page group: Choosecomp
    //
fields = main_Collect_3_out_1;
    // 
    // node Receiver[4]: x = 234, y = 64, inputs = 1, label = fields
    // page group: Image
    //
main_Receiver_4_out_1[cache: 0] = fields;
    // 
    // node Collect[2]: x = 164, y = 311, inputs = 3, label = Collect
    // page group: Image
    //
main_Collect_2_out_1 = 
    Collect(
    main_Receiver_3_out_1,
    main_Receiver_4_out_1,
    main_Caption_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Image[3]: x = 164, y = 401, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_3"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.0094 0.0094 0]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [0.0094 0.0094 1.67016]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 0.895038
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 496
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.734879
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // page group: Image
    // depth: value = 24
    // window: position = (0.0439,0.2930), size = 0.4980x0.5326
    // internal caching: 1
    //
main_Image_3_out_1,
main_Image_3_out_2,
main_Image_3_out_3 = 
    Image(
    main_Image_3_in_1,
    main_Collect_2_out_1,
    main_Image_3_in_3,
    main_Image_3_in_4,
    main_Image_3_in_5,
    main_Image_3_in_6,
    main_Image_3_in_7,
    main_Image_3_in_8,
    main_Image_3_in_9,
    main_Image_3_in_10,
    main_Image_3_in_11,
    main_Image_3_in_12,
    main_Image_3_in_13,
    main_Image_3_in_14,
    main_Image_3_in_15,
    main_Image_3_in_16,
    main_Image_3_in_17,
    main_Image_3_in_18,
    main_Image_3_in_19,
    main_Image_3_in_20,
    main_Image_3_in_21,
    main_Image_3_in_22,
    main_Image_3_in_23,
    main_Image_3_in_24,
    main_Image_3_in_25,
    main_Image_3_in_26,
    main_Image_3_in_27,
    main_Image_3_in_28,
    main_Image_3_in_29,
    main_Image_3_in_30,
    main_Image_3_in_31,
    main_Image_3_in_32,
    main_Image_3_in_33,
    main_Image_3_in_34,
    main_Image_3_in_35,
    main_Image_3_in_36,
    main_Image_3_in_37,
    main_Image_3_in_38,
    main_Image_3_in_39,
    main_Image_3_in_40,
    main_Image_3_in_41,
    main_Image_3_in_42,
    main_Image_3_in_43,
    main_Image_3_in_44,
    main_Image_3_in_45,
    main_Image_3_in_46,
    main_Image_3_in_47,
    main_Image_3_in_48,
    main_Image_3_in_49
    ) [instance: 3, cache: 1];
    //
    // decorator Annotate	pos=(263,126) size=270x44 style(Label), value = <NULL>
    // annotation user_begin: 37
    // annotation user: <NULL>
    // annotation user: (colors according to domain number)
    // annotation user_end: <NULL>
    // page group: Geometry
    //
    // decorator Annotate	pos=(265,295) size=190x44 style(Label), value = <NULL>
    // annotation user_begin: 28
    // annotation user: <NULL>
    // annotation user: Import specified timestep.
    // annotation user_end: <NULL>
    // page group: Import
// network: end of macro body
CacheScene(main_Image_3_in_1, main_Image_3_out_1, main_Image_3_out_2);
}
main_FileSelector_1_out_1 = "";
main_Compute_1_in_1 = "(strlen($0)>0)?1:2";
main_Compute_1_in_3 = NULL;
main_Compute_1_out_1 = NULL;
main_Route_1_out_1 = NULL;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "quad" ;
main_Selector_1_in_3 = 1 ;
main_Selector_1_in_4 = {"triangle" "quad" "tetra" "hexa" };
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = "Element type";
main_Selector_1_out_2 = "quad" ;
main_Toggle_6_in_1 = "Toggle_6";
main_Toggle_6_in_2 =  2  ;
main_Toggle_6_in_3 = 0;
main_Toggle_6_in_4 = NULL;
main_Toggle_6_in_5 =  2  ;
main_Toggle_6_in_6 = "Binary";
main_Toggle_6_out_1 =  2  ;
main_Switch_9_in_2 = "binary";
main_Switch_9_in_3 = "ascii";
main_Switch_9_out_1 = NULL;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = NULL;
main_Sequencer_1_in_5 = NULL;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 50 1 0 50 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 50;
@deltaframe = 1;
main_Format_1_in_1 = "!lata_dx_filter %s %s %s timestep=%d";
main_Format_1_out_1 = NULL;
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Mark_1_in_2 = "domain";
main_Mark_1_out_1 = NULL;
main_AutoColor_1_in_2 = NULL;
main_AutoColor_1_in_3 = NULL;
main_AutoColor_1_in_4 = NULL;
main_AutoColor_1_in_5 = NULL;
main_AutoColor_1_in_6 = NULL;
main_AutoColor_1_in_7 = NULL;
main_AutoColor_1_in_8 = NULL;
main_AutoColor_1_in_9 = NULL;
main_AutoColor_1_in_10 = NULL;
main_AutoColor_1_out_2 = NULL;
main_Receiver_2_out_1 = NULL;
main_Inquire_1_in_2 = "component names";
main_Inquire_1_in_3 = NULL;
main_Inquire_1_out_1 = NULL;
main_Selector_2_in_1 = "Selector_2";
main_Selector_2_in_2 = "positions" ;
main_Selector_2_in_3 = 0 ;
main_Selector_2_in_5 = NULL;
main_Selector_2_in_6 = NULL;
main_Selector_2_in_7 = "Selection (toggle button and execute to update list)";
main_Selector_2_out_2 = "positions" ;
main_Mark_2_out_1 = NULL;
main_AutoColor_2_in_2 = NULL;
main_AutoColor_2_in_3 = NULL;
main_AutoColor_2_in_4 = NULL;
main_AutoColor_2_in_5 = NULL;
main_AutoColor_2_in_6 = NULL;
main_AutoColor_2_in_7 = NULL;
main_AutoColor_2_in_8 = NULL;
main_AutoColor_2_in_9 = NULL;
main_AutoColor_2_in_10 = NULL;
main_AutoColor_2_out_1 = NULL;
main_AutoColor_2_out_2 = NULL;
main_Selector_3_in_1 = "Selector_3";
main_Selector_3_in_2 = "positions" ;
main_Selector_3_in_3 = 0 ;
main_Selector_3_in_5 = NULL;
main_Selector_3_in_6 = NULL;
main_Selector_3_in_7 = "Selection (toggle button and execute to update list)";
main_Selector_3_out_2 = "positions" ;
main_Mark_3_out_1 = NULL;
main_AutoGlyph_1_in_2 = NULL;
main_AutoGlyph_1_in_3 = NULL;
main_AutoGlyph_1_in_4 = NULL;
main_AutoGlyph_1_in_5 = NULL;
main_AutoGlyph_1_in_6 = NULL;
main_AutoGlyph_1_in_7 = NULL;
main_AutoGlyph_1_out_1 = NULL;
main_Extract_1_in_2 = "TIME";
main_Extract_1_out_1 = NULL;
main_Transmitter_4_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_Format_2_in_1 = "t=%8.4f";
main_Format_2_in_3 = NULL;
main_Format_2_out_1 = NULL;
main_Caption_1_in_2 = [.9 .05];
main_Caption_1_in_3 = NULL;
main_Caption_1_in_4 = NULL;
main_Caption_1_in_5 = NULL;
main_Caption_1_in_6 = NULL;
main_Caption_1_in_7 = NULL;
main_Caption_1_in_8 = NULL;
main_Caption_1_in_9 = NULL;
main_Caption_1_out_1 = NULL;
main_Toggle_3_in_1 = "Toggle_3";
main_Toggle_3_in_2 = 0;
main_Toggle_3_in_3 = 0;
main_Toggle_3_in_4 = NULL;
main_Toggle_3_in_5 = NULL;
main_Toggle_3_in_6 = "Show connections";
main_Toggle_3_out_1 = 0;
main_ShowConnections_1_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = .3;
main_Scalar_1_in_3 = 0.5 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = 0.0;
main_Scalar_1_in_6 = 1.0;
main_Scalar_1_in_7 = .1;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = 2;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = "opacity";
main_Scalar_1_out_1 = 0.5 ;
main_Color_1_in_2 = "white";
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Switch_6_in_3 = NULL;
main_Switch_6_out_1 = NULL;
main_Toggle_4_in_1 = "Toggle_4";
main_Toggle_4_in_2 = 0;
main_Toggle_4_in_3 = 0;
main_Toggle_4_in_4 = NULL;
main_Toggle_4_in_5 = NULL;
main_Toggle_4_in_6 = "Show wire boundary";
main_Toggle_4_out_1 = 0;
main_ShowBoundary_1_in_2 = NULL;
main_ShowBoundary_1_out_1 = NULL;
main_ShowConnections_3_out_1 = NULL;
main_Options_1_in_2 = "fuzz";
main_Options_1_in_3 = 3;
main_Options_1_in_4 = NULL;
main_Options_1_in_5 = NULL;
main_Options_1_out_1 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 0.3 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = 0.0;
main_Scalar_3_in_6 = 1.0;
main_Scalar_3_in_7 = 0.1;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = 2;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = "Opacity";
main_Scalar_3_out_1 = 0.3 ;
main_Color_3_in_2 = "white";
main_Color_3_in_4 = NULL;
main_Color_3_in_5 = NULL;
main_Color_3_out_1 = NULL;
main_Switch_7_in_3 = NULL;
main_Switch_7_out_1 = NULL;
main_Toggle_5_in_1 = "Toggle_5";
main_Toggle_5_in_2 = 1;
main_Toggle_5_in_3 = 1;
main_Toggle_5_in_4 = NULL;
main_Toggle_5_in_5 = NULL;
main_Toggle_5_in_6 = "Show shaded boundary";
main_Toggle_5_out_1 = 1;
main_Shade_1_in_2 = NULL;
main_Shade_1_in_3 = "faceted";
main_Shade_1_in_4 = NULL;
main_Shade_1_in_5 = NULL;
main_Shade_1_in_6 = NULL;
main_Shade_1_in_7 = NULL;
main_Shade_1_in_8 = NULL;
main_Shade_1_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = .3;
main_Scalar_2_in_3 = 1.0 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = 0.0;
main_Scalar_2_in_6 = 1.0;
main_Scalar_2_in_7 = .1;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = 2;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = "opacity";
main_Scalar_2_out_1 = 1.0 ;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Switch_8_in_3 = NULL;
main_Switch_8_out_1 = NULL;
main_Collect_1_out_1 = NULL;
main_Transmitter_2_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Toggle_7_in_1 = "Toggle_7";
main_Toggle_7_in_2 = 0;
main_Toggle_7_in_3 = 0;
main_Toggle_7_in_4 = NULL;
main_Toggle_7_in_5 = NULL;
main_Toggle_7_in_6 = "Show color field";
main_Toggle_7_out_1 = 0;
main_ColorBar_1_in_2 = NULL;
main_ColorBar_1_in_3 = NULL;
main_ColorBar_1_in_4 = NULL;
main_ColorBar_1_in_5 = NULL;
main_ColorBar_1_in_6 = NULL;
main_ColorBar_1_in_7 = NULL;
main_ColorBar_1_in_8 = NULL;
main_ColorBar_1_in_9 = NULL;
main_ColorBar_1_in_10 = NULL;
main_ColorBar_1_in_11 = NULL;
main_ColorBar_1_in_12 = NULL;
main_ColorBar_1_in_13 = NULL;
main_ColorBar_1_in_14 = NULL;
main_ColorBar_1_in_15 = NULL;
main_ColorBar_1_in_16 = NULL;
main_ColorBar_1_out_1 = NULL;
main_Collect_4_out_1 = NULL;
main_Switch_10_in_3 = NULL;
main_Switch_10_out_1 = NULL;
main_Toggle_8_in_1 = "Toggle_8";
main_Toggle_8_in_2 = 0;
main_Toggle_8_in_3 = 0;
main_Toggle_8_in_4 = NULL;
main_Toggle_8_in_5 = NULL;
main_Toggle_8_in_6 = "Show glyph";
main_Toggle_8_out_1 = 0;
main_Switch_11_in_3 = NULL;
main_Switch_11_out_1 = NULL;
main_Collect_3_out_1 = NULL;
main_Transmitter_3_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Collect_2_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_3_in_1 = "Image_3";
main_Image_3_in_3 = "X24,,";
main_Image_3_in_4 = 1;
main_Image_3_in_5 = [0.0094 0.0094 0];
main_Image_3_in_6 = [0.0094 0.0094 1.67016];
main_Image_3_in_7 = 0.895038;
main_Image_3_in_8 = 496;
main_Image_3_in_9 = 0.734879;
main_Image_3_in_10 = [0 1 0];
main_Image_3_in_11 = NULL;
main_Image_3_in_12 = 0;
main_Image_3_in_13 = NULL;
main_Image_3_in_14 = 1;
main_Image_3_in_15 = NULL;
main_Image_3_in_16 = NULL;
main_Image_3_in_17 = NULL;
main_Image_3_in_18 = NULL;
main_Image_3_in_19 = 0;
main_Image_3_in_20 = NULL;
main_Image_3_in_21 = NULL;
main_Image_3_in_22 = NULL;
main_Image_3_in_23 = NULL;
main_Image_3_in_25 = NULL;
main_Image_3_in_26 = NULL;
main_Image_3_in_27 = NULL;
main_Image_3_in_28 = NULL;
main_Image_3_in_29 = NULL;
main_Image_3_in_30 = NULL;
main_Image_3_in_31 = NULL;
main_Image_3_in_32 = NULL;
main_Image_3_in_33 = NULL;
main_Image_3_in_34 = NULL;
main_Image_3_in_35 = NULL;
main_Image_3_in_36 = NULL;
main_Image_3_in_37 = NULL;
main_Image_3_in_38 = NULL;
main_Image_3_in_39 = NULL;
main_Image_3_in_40 = NULL;
main_Image_3_in_41 = "none";
main_Image_3_in_42 = NULL;
main_Image_3_in_43 = NULL;
main_Image_3_in_44 = NULL;
main_Image_3_in_45 = NULL;
main_Image_3_in_46 = NULL;
main_Image_3_in_47 = NULL;
main_Image_3_in_48 = NULL;
main_Image_3_in_49 = NULL;
Executive("product version 4 2 0");
$sync

sequence main();
play;
